var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ALD_XXPTW_Event_XXPTW_Def;
(function (ALD_XXPTW_Event_XXPTW_Def) {
    ALD_XXPTW_Event_XXPTW_Def["None"] = "";
    ALD_XXPTW_Event_XXPTW_Def["Report_XXPTW_AdClickSuccess"] = "\u5E7F\u544A\u5BFC\u51FA\u6210\u529F";
    ALD_XXPTW_Event_XXPTW_Def["Report_XXPTW_AdClickFail"] = "\u5E7F\u544A\u5BFC\u51FA\u5931\u8D25";
    ALD_XXPTW_Event_XXPTW_Def["Report_XXPTW_LaunchOptions"] = "\u7528\u6237\u542F\u52A8\u53C2\u6570";
    //todo:添加你自己的阿拉丁事件
})(ALD_XXPTW_Event_XXPTW_Def = exports.ALD_XXPTW_Event_XXPTW_Def || (exports.ALD_XXPTW_Event_XXPTW_Def = {}));
//阿拉丁相关接口
var ALD = /** @class */ (function () {
    function ALD() {
    }
    ALD.ald_XXPTW_Send_XXPTW_OpenId = function (openid) {
        if (Laya.Browser.onMiniGame) {
            Laya.Browser.window["wx"].aldSendOpenid(openid);
            console.log("ALD 上报 openid : ", openid);
        }
        else if (Laya.Browser.onQQMiniGame) {
            Laya.Browser.window["qq"].aldSendOpenid(openid);
            console.log("ALD 上报 openid : ", openid);
        }
    };
    ALD.ald_XXPTW_Send_XXPTW_Event = function (event, data) {
        var eventName = event;
        if (Laya.Browser.onMiniGame) {
            Laya.Browser.window["wx"].aldSendEvent(eventName, data);
        }
        else if (Laya.Browser.onQQMiniGame) {
            Laya.Browser.window["qq"].aldSendEvent(eventName, data);
        }
    };
    ALD.ald_XXPTW_Send_XXPTW_ReportAdClickSuccess = function (data) {
        var type = ALD_XXPTW_Event_XXPTW_Def.Report_XXPTW_AdClickSuccess + " " + data.title + ":" + String(data.appid);
        ALD.ald_XXPTW_Send_XXPTW_Event(type, {
            "导出成功": data.title + ":" + String(data.appid)
        });
    };
    ALD.aldSend_XXPTW_ReportAd_XXPTW_ClickFail = function (data) {
        var type = ALD_XXPTW_Event_XXPTW_Def.Report_XXPTW_AdClickFail + " " + data.title + ":" + String(data.appid);
        ALD.ald_XXPTW_Send_XXPTW_Event(type, {
            "导出失败": data.title + ":" + String(data.appid)
        });
    };
    ALD.ald_XXPTW_Send_XXPTW_Report_XXPTW_LaunchOptions = function (sceneid, ip, location) {
        var type = ALD_XXPTW_Event_XXPTW_Def.Report_XXPTW_LaunchOptions;
        ALD.ald_XXPTW_Send_XXPTW_Event(type, {
            "场景值：": String(sceneid),
            "Ip：": String(ip),
            "地区：": JSON.stringify(location)
        });
    };
    return ALD;
}());
exports.default = ALD;
},{}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var App_XXPTW_Config = /** @class */ (function () {
    function App_XXPTW_Config() {
    }
    App_XXPTW_Config.App_XXPTW_ID = "wx84bb23d04592ef05";
    App_XXPTW_Config.Res_XXPTW_Server = "https://oss.renyouwangluo.cn/xxptw"; //资源服务器地址
    App_XXPTW_Config.Local_XXPTW_Test_XXPTW_ReServer = "subRes"; //本地测试资源服务器地址
    App_XXPTW_Config.Versions_XXPTW_ = "1.1.3";
    App_XXPTW_Config.onTTMiniGame = false; //是否是头条小游戏
    return App_XXPTW_Config;
}());
exports.default = App_XXPTW_Config;
},{}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppSwitchConfig_1 = require("./Config/AppSwitchConfig");
var Cached_XXPTW_QQ_XXPTW_BannerAd = /** @class */ (function () {
    function Cached_XXPTW_QQ_XXPTW_BannerAd() {
    }
    Cached_XXPTW_QQ_XXPTW_BannerAd.pre_XXPTW_load_XXPTW_Banner = function () {
    };
    Cached_XXPTW_QQ_XXPTW_BannerAd._XXPTW_show_XXPTW_ = function (bannerid) {
        var wxWuDianBanners = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().wx_XXPTW_Wu_XXPTW_Dian_XXPTW_Banners;
        var bannerTodayBannerMax = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().banner_XXPTW_Today_XXPTW_Banner_XXPTW_Max;
        bannerid = wxWuDianBanners[Math.floor(Math.random() * wxWuDianBanners.length)];
        if (Laya.Browser.onQQMiniGame && null != bannerid) {
            var sysInfo = Laya.Browser.window["qq"].getSystemInfoSync();
            var sw = sysInfo.screenWidth;
            var sh = sysInfo.screenHeight;
            var banner_1 = Laya.Browser.window["qq"].createBannerAd({
                adUnitId: bannerid,
                adIntervals: 30,
                style: {
                    left: 0,
                    top: (Laya.stage.height - 240) / Laya.stage.height * sh,
                    width: sw,
                }
            });
            if (banner_1) {
                var self_1 = this;
                Cached_XXPTW_QQ_XXPTW_BannerAd._on_XXPTW_Load = function (res) {
                    console.log("CachedQQBanner 广告 加载完成", bannerid);
                    console.log(res);
                    if (!self_1._is_XXPTW_Hide) {
                        banner_1.show();
                    }
                    else {
                        banner_1.offLoad(Cached_XXPTW_QQ_XXPTW_BannerAd._on_XXPTW_Load);
                        banner_1.offError(Cached_XXPTW_QQ_XXPTW_BannerAd._on_XXPTW_Error);
                        banner_1.destroy();
                    }
                };
                banner_1.onLoad(Cached_XXPTW_QQ_XXPTW_BannerAd._on_XXPTW_Load);
                Cached_XXPTW_QQ_XXPTW_BannerAd._on_XXPTW_Error = function (err) {
                    console.log("CachedQQBanner 广告 加载失败", bannerid);
                    console.log(err);
                    banner_1.offLoad(Cached_XXPTW_QQ_XXPTW_BannerAd._on_XXPTW_Load);
                    banner_1.offError(Cached_XXPTW_QQ_XXPTW_BannerAd._on_XXPTW_Error);
                    banner_1.destroy();
                };
                banner_1.onError(Cached_XXPTW_QQ_XXPTW_BannerAd._on_XXPTW_Error);
                Cached_XXPTW_QQ_XXPTW_BannerAd._cur_XXPTW_Banner = banner_1;
            }
        }
        Cached_XXPTW_QQ_XXPTW_BannerAd._is_XXPTW_Hide = false;
    };
    Cached_XXPTW_QQ_XXPTW_BannerAd.hide = function () {
        Cached_XXPTW_QQ_XXPTW_BannerAd._is_XXPTW_Hide = true;
        Laya.timer.clearAll(Cached_XXPTW_QQ_XXPTW_BannerAd);
        if (null != Cached_XXPTW_QQ_XXPTW_BannerAd._cur_XXPTW_Banner) {
            Cached_XXPTW_QQ_XXPTW_BannerAd._cur_XXPTW_Banner.hide();
            Cached_XXPTW_QQ_XXPTW_BannerAd._cur_XXPTW_Banner.offLoad(Cached_XXPTW_QQ_XXPTW_BannerAd._on_XXPTW_Load);
            Cached_XXPTW_QQ_XXPTW_BannerAd._cur_XXPTW_Banner.offError(Cached_XXPTW_QQ_XXPTW_BannerAd._on_XXPTW_Error);
            Cached_XXPTW_QQ_XXPTW_BannerAd._cur_XXPTW_Banner.destroy();
            Cached_XXPTW_QQ_XXPTW_BannerAd._cur_XXPTW_Banner = null;
            console.log("CachedQQBanner 广告隐藏");
        }
    };
    Cached_XXPTW_QQ_XXPTW_BannerAd.change_XXPTW_Show = function () {
        if (null != Cached_XXPTW_QQ_XXPTW_BannerAd._cur_XXPTW_Banner) {
            Cached_XXPTW_QQ_XXPTW_BannerAd._cur_XXPTW_Banner.hide();
            Cached_XXPTW_QQ_XXPTW_BannerAd._cur_XXPTW_Banner = null;
        }
        Cached_XXPTW_QQ_XXPTW_BannerAd._XXPTW_show_XXPTW_();
    };
    Cached_XXPTW_QQ_XXPTW_BannerAd._XXPTW_clear_XXPTW_ = function () {
    };
    Cached_XXPTW_QQ_XXPTW_BannerAd._cur_XXPTW_Banner = null;
    Cached_XXPTW_QQ_XXPTW_BannerAd._on_XXPTW_Load = null;
    Cached_XXPTW_QQ_XXPTW_BannerAd._on_XXPTW_Error = null;
    Cached_XXPTW_QQ_XXPTW_BannerAd._is_XXPTW_Hide = true;
    return Cached_XXPTW_QQ_XXPTW_BannerAd;
}());
exports.default = Cached_XXPTW_QQ_XXPTW_BannerAd;
},{"./Config/AppSwitchConfig":5}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppSwitchConfig_1 = require("./Config/AppSwitchConfig");
var Cached_XXPTW_WX_XXPTW_BannerAd = /** @class */ (function () {
    function Cached_XXPTW_WX_XXPTW_BannerAd() {
    }
    Cached_XXPTW_WX_XXPTW_BannerAd.pre_XXPTW_load_XXPTW_Banner = function () {
        var wxWuDianBanners = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().wx_XXPTW_Wu_XXPTW_Dian_XXPTW_Banners;
        var bannerTodayBannerMax = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().banner_XXPTW_Today_XXPTW_Banner_XXPTW_Max;
        var preLoadBanners = new Array();
        for (var i = 0; i < wxWuDianBanners.length; ++i) {
            preLoadBanners.push(wxWuDianBanners[i]);
        }
        if (preLoadBanners.length > bannerTodayBannerMax) {
            var delNum = preLoadBanners.length - bannerTodayBannerMax;
            for (var i = 0; i < delNum; ++i) {
                preLoadBanners.splice(Math.floor(Math.random() * preLoadBanners.length), 1);
            }
        }
        console.log("开始预创建微信Bannaer", preLoadBanners);
        console.log("Bannaer 最大数限制 ：", bannerTodayBannerMax);
        var counter = 0;
        Laya.timer.loop(2000, Cached_XXPTW_WX_XXPTW_BannerAd._pre_XXPTW_Loop_XXPTW_Obj, function () {
            if (counter >= preLoadBanners.length) {
                Laya.timer.clearAll(Cached_XXPTW_WX_XXPTW_BannerAd._pre_XXPTW_Loop_XXPTW_Obj);
                return;
            }
            var bannerid = preLoadBanners[counter];
            var banner = Cached_XXPTW_WX_XXPTW_BannerAd._banner_XXPTW_Cache[bannerid];
            if (null == banner) {
                banner = Cached_XXPTW_WX_XXPTW_BannerAd._XXPTW_create_XXPTW_(bannerid);
                if (null != banner) {
                    Cached_XXPTW_WX_XXPTW_BannerAd._banner_XXPTW_Cache[bannerid] = banner;
                    console.log("预创建微信Bannaer", bannerid, "完成");
                }
            }
            ++counter;
        });
    };
    Cached_XXPTW_WX_XXPTW_BannerAd.get_XXPTW_Banner = function (bannerid) {
        if (null == bannerid || "" == bannerid)
            return null;
        var banner = Cached_XXPTW_WX_XXPTW_BannerAd._banner_XXPTW_Cache[bannerid];
        if (null == banner) {
            banner = Cached_XXPTW_WX_XXPTW_BannerAd._XXPTW_create_XXPTW_(bannerid);
            if (null != banner) {
                Cached_XXPTW_WX_XXPTW_BannerAd._banner_XXPTW_Cache[bannerid] = banner;
            }
        }
        return banner;
    };
    Cached_XXPTW_WX_XXPTW_BannerAd._XXPTW_create_XXPTW_ = function (bannerid) {
        if (Laya.Browser.onMiniGame) {
            var sysInfo = Laya.Browser.window["wx"].getSystemInfoSync();
            var sw = sysInfo.screenWidth;
            var sh = sysInfo.screenHeight;
            var banner = Laya.Browser.window["wx"].createBannerAd({
                adUnitId: bannerid,
                adIntervals: 30,
                style: {
                    left: 0,
                    top: (Laya.stage.height - 240) / Laya.stage.height * sh,
                    width: sw,
                }
            });
            if (banner) {
                banner.onLoad(function (res) {
                    console.log("CachedWXBanner 广告 加载完成", bannerid);
                    console.log(res);
                });
                banner.onError(function (err) {
                    console.log("CachedWXBanner 广告 加载失败", bannerid);
                    console.log(err);
                });
                banner.onResize(function (res) {
                    console.log(banner.style.realWidth, banner.style.realHeight);
                });
            }
            return banner;
        }
        else {
            return null;
        }
    };
    Cached_XXPTW_WX_XXPTW_BannerAd._XXPTW_show_XXPTW_ = function () {
        if (null != Cached_XXPTW_WX_XXPTW_BannerAd._cur_XXPTW_Banner) {
            Cached_XXPTW_WX_XXPTW_BannerAd._cur_XXPTW_Banner.hide();
            Cached_XXPTW_WX_XXPTW_BannerAd._cur_XXPTW_Banner = null;
        }
        var wuDianBanners = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().wx_XXPTW_Wu_XXPTW_Dian_XXPTW_Banners;
        var bannerid = wuDianBanners[Math.floor(Math.random() * wuDianBanners.length)];
        var banner = Cached_XXPTW_WX_XXPTW_BannerAd.get_XXPTW_Banner(bannerid);
        if (banner) {
            Cached_XXPTW_WX_XXPTW_BannerAd._cur_XXPTW_Banner = banner;
            var sysInfo = Laya.Browser.window["wx"].getSystemInfoSync();
            var sw = sysInfo.screenWidth;
            var sh = sysInfo.screenHeight;
            Cached_XXPTW_WX_XXPTW_BannerAd._cur_XXPTW_Banner.style.top = (Laya.stage.height - 240) / Laya.stage.height * sh;
            Cached_XXPTW_WX_XXPTW_BannerAd._cur_XXPTW_Banner.show();
            console.log("CachedWXBanner 广告显示 bannerid ： ", bannerid);
        }
        var time = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().banner_XXPTW_Fresh_XXPTW_Timer;
        //Laya.timer.once(time * 1000,CachedWXBannerAd,CachedWXBannerAd.changeShow);
    };
    Cached_XXPTW_WX_XXPTW_BannerAd._XXPTW_hide_XXPTW_ = function () {
        Laya.timer.clearAll(Cached_XXPTW_WX_XXPTW_BannerAd);
        if (null != Cached_XXPTW_WX_XXPTW_BannerAd._cur_XXPTW_Banner) {
            Cached_XXPTW_WX_XXPTW_BannerAd._cur_XXPTW_Banner.hide();
            Cached_XXPTW_WX_XXPTW_BannerAd._cur_XXPTW_Banner = null;
        }
        console.log("CachedWXBanner 广告隐藏");
    };
    Cached_XXPTW_WX_XXPTW_BannerAd.change_XXPTW_Show = function () {
        if (null != Cached_XXPTW_WX_XXPTW_BannerAd._cur_XXPTW_Banner) {
            Cached_XXPTW_WX_XXPTW_BannerAd._cur_XXPTW_Banner.hide();
            Cached_XXPTW_WX_XXPTW_BannerAd._cur_XXPTW_Banner = null;
        }
        Cached_XXPTW_WX_XXPTW_BannerAd._XXPTW_show_XXPTW_();
    };
    Cached_XXPTW_WX_XXPTW_BannerAd._XXPTW_clear_XXPTW_ = function () {
        Laya.timer.clearAll(Cached_XXPTW_WX_XXPTW_BannerAd);
        for (var key in Cached_XXPTW_WX_XXPTW_BannerAd._banner_XXPTW_Cache) {
            var banner = Cached_XXPTW_WX_XXPTW_BannerAd._banner_XXPTW_Cache[key];
            if (null != banner) {
                banner.destroy();
            }
            Cached_XXPTW_WX_XXPTW_BannerAd._banner_XXPTW_Cache[key] = null;
        }
    };
    Cached_XXPTW_WX_XXPTW_BannerAd._banner_XXPTW_Cache = {};
    Cached_XXPTW_WX_XXPTW_BannerAd._cur_XXPTW_Banner = null;
    Cached_XXPTW_WX_XXPTW_BannerAd._pre_XXPTW_Loop_XXPTW_Obj = {};
    return Cached_XXPTW_WX_XXPTW_BannerAd;
}());
exports.default = Cached_XXPTW_WX_XXPTW_BannerAd;
},{"./Config/AppSwitchConfig":5}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppConfig_1 = require("../AppConfig");
var App_XXPTW_Switch_XXPTW_Data = /** @class */ (function () {
    function App_XXPTW_Switch_XXPTW_Data() {
        this.ver_XXPTW_sion = "";
        this.ba_XXPTW_nner = 0;
        this.wu_XXPTW_dian = 0;
        this.wudianAvailableTime = {
            "0": 0, "1": 0, "2": 0, "3": 0,
            "4": 0, "5": 0, "6": 0, "7": 0,
            "8": 0, "9": 0, "10": 0, "11": 0,
            "12": 0, "13": 0, "14": 0, "15": 0,
            "16": 0, "17": 0, "18": 0, "19": 0,
            "20": 0, "21": 0, "22": 0, "23": 0
        };
        this.mai_XXPTW_liang = 1;
        this.mailiang_XXPTW_list = new Array();
        this.mailiang_XXPTW_Scene_XXPTW_List = new Array();
        this.wx_XXPTW_Wu_XXPTW_Dian_XXPTW_Banners = new Array();
        this.recreate_XXPTW_Banner_XXPTW_IDList = new Array();
        this.banner_XXPTW_Recreate_XXPTW_Time = 5;
        this.kuang_XXPTW_dian_XXPTW_jiange = 0;
        this.btn_XXPTW_Move_XXPTW_Timer = 1;
        this.banner_XXPTW_Move_XXPTW_Timer = 0.5;
        this.banner_XXPTW_Fresh_XXPTW_Timer = 200;
        this.banner_XXPTW_Create_XXPTW_FailNum = 3;
        this.banner_XXPTW_Today_XXPTW_Banner_XXPTW_Max = 10;
        this.ad_XXPTW_Switch = 1;
        this.wu_XXPTW_dian_XXPTW_Scene_XXPTW_List = new Array();
        this.continue_XXPTW_Btn_XXPTW_DelayTime = 2;
        this.banner_XXPTW_Show_XXPTW_Time = 30;
        this.fakeBtn = 0;
        this.oppo_XXPTW_cfg = new OPPO_XXPTW_Cfg();
        this.qq_XXPTW_cfg = new QQ_XXPTW_Cfg();
        this.tt_XXPTW_cfg = new TT_XXPTW_Cfg();
    }
    Object.defineProperty(App_XXPTW_Switch_XXPTW_Data.prototype, "wudianTimeAvaliable", {
        /**
         * 得到当前时间开关是否打开
         *
         * @readonly
         * @type {boolean}
         * @memberof AppSwitchData
         */
        get: function () {
            return this.wudianAvailableTime[new Date().getHours()] == 1;
        },
        enumerable: true,
        configurable: true
    });
    return App_XXPTW_Switch_XXPTW_Data;
}());
exports.App_XXPTW_Switch_XXPTW_Data = App_XXPTW_Switch_XXPTW_Data;
var OPPO_XXPTW_Cfg = /** @class */ (function () {
    function OPPO_XXPTW_Cfg() {
        this.yuan_XXPTW_sheng = 100;
        this.yuan_XXPTW_sheng_XXPTW_Switch = 1;
        this.add_XXPTW_To_XXPTW_Desktop = 0;
        this.oppo_XXPTW_versions = "";
        this.btn_XXPTW_Show_XXPTW_Timer = 0;
        this.index_XXPTW_Ad_XXPTW_Switch = 0;
        this.end_XXPTW_Ad_XXPTW_Switch = 0;
        this.yuan_XXPTW_sheng2 = 100;
        this.yuan_XXPTW_sheng_XXPTW_Switch2 = 1;
    }
    return OPPO_XXPTW_Cfg;
}());
exports.OPPO_XXPTW_Cfg = OPPO_XXPTW_Cfg;
var QQ_XXPTW_Cfg = /** @class */ (function () {
    function QQ_XXPTW_Cfg() {
        this.kuang_XXPTW_dian_XXPTW_Banner = 0;
        this.kuangdian_XXPTW_Box = 0;
        this.box = 0;
        this.wei_XXPTW_yi = 0;
        this.qq_XXPTW_versions = "";
    }
    return QQ_XXPTW_Cfg;
}());
exports.QQ_XXPTW_Cfg = QQ_XXPTW_Cfg;
var TT_XXPTW_Cfg = /** @class */ (function () {
    function TT_XXPTW_Cfg() {
        this.more_XXPTW_Game_XXPTW_Switch = 0;
        this.kuang_XXPTW_dian_XXPTW_Banner = 0;
        this.lu_XXPTW_ping = 0;
        this.tt_XXPTW_versions = "";
    }
    return TT_XXPTW_Cfg;
}());
exports.TT_XXPTW_Cfg = TT_XXPTW_Cfg;
var App_XXPTW_Switch_XXPTW_Config = /** @class */ (function () {
    function App_XXPTW_Switch_XXPTW_Config() {
        this._data = new Array();
    }
    App_XXPTW_Switch_XXPTW_Config.get_XXPTW_Instance = function () {
        if (null == App_XXPTW_Switch_XXPTW_Config._instance) {
            App_XXPTW_Switch_XXPTW_Config._instance = App_XXPTW_Switch_XXPTW_Config.lo_XXPTW_ad();
        }
        return App_XXPTW_Switch_XXPTW_Config._instance;
    };
    App_XXPTW_Switch_XXPTW_Config.lo_XXPTW_ad = function () {
        var config = new App_XXPTW_Switch_XXPTW_Config();
        var json = Laya.loader.getRes(AppConfig_1.default.Res_XXPTW_Server + "/json/appswitch.json");
        if (json) {
            for (var i = 0; i < json.length; ++i) {
                var row = json[i];
                var rowData = new App_XXPTW_Switch_XXPTW_Data();
                rowData.ver_XXPTW_sion = String(row["version"]);
                rowData.ba_XXPTW_nner = Number(row["banner"]);
                rowData.wu_XXPTW_dian = Number(row["wudian"]);
                rowData.wudianAvailableTime = Object(row["wudianTime"]);
                rowData.mai_XXPTW_liang = Number(row["mailiang"]);
                var mailianglist = row["mailianglist"];
                if (null != mailianglist) {
                    for (var j = 0; j < mailianglist.length; ++j) {
                        var flag = Number(mailianglist[j]);
                        rowData.mailiang_XXPTW_list.push(flag);
                    }
                }
                var mailiangScenelist = row["mailiangScenelist"];
                if (null != mailiangScenelist) {
                    for (var j = 0; j < mailiangScenelist.length; ++j) {
                        var sceneValue = Number(mailiangScenelist[j]);
                        rowData.mailiang_XXPTW_Scene_XXPTW_List.push(sceneValue);
                    }
                }
                var wxwudianbanners = row["wxwudianbanners"];
                if (null != wxwudianbanners) {
                    for (var j = 0; j < wxwudianbanners.length; ++j) {
                        var bannerid = String(wxwudianbanners[j]);
                        rowData.wx_XXPTW_Wu_XXPTW_Dian_XXPTW_Banners.push(bannerid);
                    }
                }
                var recreateBannerIDList = row["recreateBannerIDList"];
                if (null != recreateBannerIDList) {
                    for (var j = 0; j < recreateBannerIDList.length; ++j) {
                        var bannerid_1 = String(recreateBannerIDList[j]);
                        rowData.recreate_XXPTW_Banner_XXPTW_IDList.push(bannerid_1);
                    }
                }
                rowData.banner_XXPTW_Recreate_XXPTW_Time = null != row["bannerRecreateTime"] ? Number(row["bannerRecreateTime"]) : rowData.banner_XXPTW_Recreate_XXPTW_Time;
                rowData.kuang_XXPTW_dian_XXPTW_jiange = null != row["kuangdianjiange"] ? Number(row["kuangdianjiange"]) : rowData.kuang_XXPTW_dian_XXPTW_jiange;
                rowData.btn_XXPTW_Move_XXPTW_Timer = Number(row["btnMoveTimer"]);
                rowData.banner_XXPTW_Move_XXPTW_Timer = Number(row["bannerMoveTimer"]);
                rowData.banner_XXPTW_Create_XXPTW_FailNum = Number(row["createFailNum"]);
                rowData.banner_XXPTW_Fresh_XXPTW_Timer = Number(row["bannerFreshTimer"]);
                rowData.banner_XXPTW_Today_XXPTW_Banner_XXPTW_Max = Number(row["todayBannerMax"]);
                rowData.ad_XXPTW_Switch = Number(row["adSwitch"]);
                var wudianSceneList = row["wudianSceneList"];
                if (null != wudianSceneList) {
                    for (var j = 0; j < wudianSceneList.length; ++j) {
                        var wudianSceneValue = Number(wudianSceneList[j]);
                        rowData.wu_XXPTW_dian_XXPTW_Scene_XXPTW_List.push(wudianSceneValue);
                    }
                }
                rowData.continue_XXPTW_Btn_XXPTW_DelayTime = Number(row["continueBtnDelayTime"]);
                rowData.banner_XXPTW_Show_XXPTW_Time = Number(row["bannerShowTime"]);
                rowData.fakeBtn = null != row["fakeBtn"] ? Number(row["fakeBtn"]) : rowData.fakeBtn;
                if (null != row["oppocfg"]) {
                    var cfg = row["oppocfg"];
                    rowData.oppo_XXPTW_cfg.yuan_XXPTW_sheng = Number(cfg["yuansheng"]);
                    rowData.oppo_XXPTW_cfg.yuan_XXPTW_sheng_XXPTW_Switch = Number(cfg["yuanshengSwitch"]);
                    rowData.oppo_XXPTW_cfg.add_XXPTW_To_XXPTW_Desktop = Number(cfg["addToDesktop"]);
                    rowData.oppo_XXPTW_cfg.oppo_XXPTW_versions = String(cfg["oppoversions"]);
                    rowData.oppo_XXPTW_cfg.btn_XXPTW_Show_XXPTW_Timer = Number(cfg["btnShowTimer"]);
                    rowData.oppo_XXPTW_cfg.index_XXPTW_Ad_XXPTW_Switch = Number(cfg["indexAdSwitch"]);
                    rowData.oppo_XXPTW_cfg.end_XXPTW_Ad_XXPTW_Switch = Number(cfg["endAdSwitch"]);
                    rowData.oppo_XXPTW_cfg.yuan_XXPTW_sheng2 = null != cfg["yuansheng2"] ? Number(cfg["yuansheng2"]) : rowData.oppo_XXPTW_cfg.yuan_XXPTW_sheng2;
                    rowData.oppo_XXPTW_cfg.yuan_XXPTW_sheng_XXPTW_Switch2 = null != cfg["yuanshengSwitch2"] ? Number(cfg["yuanshengSwitch2"]) : rowData.oppo_XXPTW_cfg.yuan_XXPTW_sheng_XXPTW_Switch2;
                }
                if (null != row["qqcfg"]) {
                    var cfg = row["qqcfg"];
                    rowData.qq_XXPTW_cfg.kuang_XXPTW_dian_XXPTW_Banner = Number(cfg["kuangdianBanner"]);
                    rowData.qq_XXPTW_cfg.kuangdian_XXPTW_Box = Number(cfg["kuangdianBox"]);
                    rowData.qq_XXPTW_cfg.box = Number(cfg["box"]);
                    rowData.qq_XXPTW_cfg.wei_XXPTW_yi = Number(cfg["weiyi"]);
                    rowData.qq_XXPTW_cfg.qq_XXPTW_versions = String(cfg["qqversions"]);
                }
                if (null != row["ttcfg"]) {
                    var cfg = row["ttcfg"];
                    rowData.tt_XXPTW_cfg.more_XXPTW_Game_XXPTW_Switch = Number(cfg["moreGameSwitch"]);
                    rowData.tt_XXPTW_cfg.kuang_XXPTW_dian_XXPTW_Banner = Number(cfg["kuangdianBanner"]);
                    rowData.tt_XXPTW_cfg.lu_XXPTW_ping = Number(cfg["luping"]);
                    rowData.tt_XXPTW_cfg.tt_XXPTW_versions = String(cfg["ttversions"]);
                }
                config._data.push(rowData);
            }
            return config;
        }
        else {
            config._data.push(new App_XXPTW_Switch_XXPTW_Data());
            return config;
        }
    };
    App_XXPTW_Switch_XXPTW_Config.prototype.get_XXPTW_App_XXPTW_Switch_XXPTW_Data = function () {
        return this._data[0];
    };
    return App_XXPTW_Switch_XXPTW_Config;
}());
exports.default = App_XXPTW_Switch_XXPTW_Config;
},{"../AppConfig":2}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Event_XXPTW_Def;
(function (Event_XXPTW_Def) {
    Event_XXPTW_Def[Event_XXPTW_Def["None"] = 0] = "None";
    Event_XXPTW_Def[Event_XXPTW_Def["App_Close_XXPTW_First_XXPTW_Loading_XXPTW_View"] = 500] = "App_Close_XXPTW_First_XXPTW_Loading_XXPTW_View";
    Event_XXPTW_Def[Event_XXPTW_Def["AD_On_XXPTW_ShareAd_XXPTW_Fail"] = 501] = "AD_On_XXPTW_ShareAd_XXPTW_Fail";
    //当界面打开
    Event_XXPTW_Def[Event_XXPTW_Def["Game_On_XXPTW_View_XXPTW_Open"] = 600] = "Game_On_XXPTW_View_XXPTW_Open";
    //当界面关闭
    Event_XXPTW_Def[Event_XXPTW_Def["Game_On_XXPTW_View_XXPTW_Close"] = 601] = "Game_On_XXPTW_View_XXPTW_Close";
    //当玩家金币变动
    Event_XXPTW_Def[Event_XXPTW_Def["Game_On_XXPTW_User_XXPTW_Money_XXPTW_Change"] = 701] = "Game_On_XXPTW_User_XXPTW_Money_XXPTW_Change";
    //当玩家钻石变动
    Event_XXPTW_Def[Event_XXPTW_Def["Game_On_XXPTW_User_XXPTW_Crystal_XXPTW_Change"] = 702] = "Game_On_XXPTW_User_XXPTW_Crystal_XXPTW_Change";
    //当关卡开始
    Event_XXPTW_Def[Event_XXPTW_Def["Game_On_XXPTW_Level_XXPTW_Start"] = 1000] = "Game_On_XXPTW_Level_XXPTW_Start";
    //当关卡结束
    Event_XXPTW_Def[Event_XXPTW_Def["Game_On_XXPTW_Level_XXPTW_Complate"] = 1001] = "Game_On_XXPTW_Level_XXPTW_Complate";
    //误点预加载完毕
    Event_XXPTW_Def[Event_XXPTW_Def["AD_Wu_XXPTW_dianBanner_Load_XXPTW_Complete"] = 2217] = "AD_Wu_XXPTW_dianBanner_Load_XXPTW_Complete";
    //显示误点Banner
    Event_XXPTW_Def[Event_XXPTW_Def["AD_Wu_XXPTW_dian_XXPTW_Banner_Show"] = 2218] = "AD_Wu_XXPTW_dian_XXPTW_Banner_Show";
    //影藏误点Banner
    Event_XXPTW_Def[Event_XXPTW_Def["AD_Wu_XXPTW_dian_XXPTW_Banner__XXPTW_Hide"] = 2219] = "AD_Wu_XXPTW_dian_XXPTW_Banner__XXPTW_Hide";
    //预加载Banner
    Event_XXPTW_Def[Event_XXPTW_Def["AD_Wu_XXPTW_dian_XXPTW_Banner_Pre_XXPTW_Load"] = 2220] = "AD_Wu_XXPTW_dian_XXPTW_Banner_Pre_XXPTW_Load";
    //当IP屏蔽状态更新
    Event_XXPTW_Def[Event_XXPTW_Def["App_On_XXPTW_Update_XXPTW_IpBlockState"] = 2221] = "App_On_XXPTW_Update_XXPTW_IpBlockState";
    //Tips:在这条添加定义你自己需要的事件，从10000号开始。记得分段分类管理不同类型事件。如果事件有传递参数 "必须" 在事件后面用注释写明事件参数结构。
})(Event_XXPTW_Def = exports.Event_XXPTW_Def || (exports.Event_XXPTW_Def = {}));
},{}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventDispatcher = Laya.EventDispatcher;
var Event_XXPTW_Mgr = /** @class */ (function (_super) {
    __extends(Event_XXPTW_Mgr, _super);
    function Event_XXPTW_Mgr() {
        return _super.call(this) || this;
    }
    ;
    //广播事件
    Event_XXPTW_Mgr.prototype.dis_XXPTW_patch = function (InName, agv) {
        Event_XXPTW_Mgr.eventDispatcher.event(InName, agv);
    };
    //注册事件
    Event_XXPTW_Mgr.prototype.reg_XXPTW_Evemt = function (InName, caller, listener, arg) {
        Event_XXPTW_Mgr.eventDispatcher.on(InName, caller, listener, (arg == null) ? null : ([arg]));
    };
    //注册单次事件
    Event_XXPTW_Mgr.prototype.reg_XXPTW_OnceEvent = function (InName, caller, listener, arg) {
        Event_XXPTW_Mgr.eventDispatcher.once(InName, caller, listener, (arg == null) ? null : ([arg]));
    };
    //移除事件注册
    Event_XXPTW_Mgr.prototype.remove_XXPTW_Event = function (InName, caller, listener, arg) {
        Event_XXPTW_Mgr.eventDispatcher.off(InName, caller, listener);
    };
    Event_XXPTW_Mgr.eventDispatcher = new EventDispatcher();
    Event_XXPTW_Mgr.ins_XXPTW_tance = new Event_XXPTW_Mgr();
    return Event_XXPTW_Mgr;
}(EventDispatcher));
exports.default = Event_XXPTW_Mgr;
},{}],8:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var GameMgr_1 = require("./Mgr/GameMgr");
var KRQ_LoopAdBox_1 = require("./KRQ/Com/KRQ_LoopAd/KRQ_LoopAdBox");
var KRQ_VLoopAd_1 = require("./KRQ/Com/KRQ_LoopAd/KRQ_VLoopAd");
var KRQ_Banner_1 = require("./KRQ/Com/KRQ_Banner");
var KRQ_Export_1 = require("./KRQ/ViewCom/KRQ_Export");
var KRQ_HistoryBox_1 = require("./KRQ/Com/KRQ_History/KRQ_HistoryBox");
var KRQ_History_1 = require("./KRQ/Com/KRQ_History/KRQ_History");
var KRQ_RockSingleAd_1 = require("./KRQ/Com/KRQ_RockSingleAd");
var KRQ_Floating_1 = require("./KRQ/ViewCom/KRQ_Floating");
var KRQ_RollSingleAd_1 = require("./KRQ/Com/KRQ_RollSingleAd");
var KRQ_GameOver_1 = require("./KRQ/ViewCom/KRQ_GameOver");
var KRQ_SidePull_1 = require("./KRQ/ViewCom/KRQ_SidePull");
var KRQ_HLoopAd_1 = require("./KRQ/Com/KRQ_LoopAd/KRQ_HLoopAd");
var KRQ_Main_1 = require("./KRQ/ViewCom/KRQ_Main");
var KRQ_SingleAd_1 = require("./KRQ/Com/KRQ_SingleAd");
var KRQ_GamingBanner_1 = require("./KRQ/Com/KRQ_GamingBanner");
var TwinkleSprite_1 = require("./View/TwinkleSprite");
var ClickGetPrize_1 = require("./View/ClickGetPrize/ClickGetPrize");
var endView_1 = require("./myGameScript/view/endView");
var ButtonAnim_1 = require("./View/ButtonAnim");
var gameView_1 = require("./myGameScript/view/gameView");
var videoBtnEffect_1 = require("./myGameScript/view/videoBtnEffect");
var myGamingBanner_1 = require("./myGameScript/view/myGamingBanner");
var myKRQ_Main_1 = require("./myGameScript/view/myKRQ_Main");
var indexView_1 = require("./myGameScript/view/indexView");
var lvInfoBox_1 = require("./myGameScript/view/lvInfoBox");
var myExport2View_1 = require("./myGameScript/view/myExport2View");
var LogoAni_1 = require("./View/LoadingView/LogoAni");
var LoadingView_1 = require("./View/LoadingView/LoadingView");
var Exprot2ViewTemplate_1 = require("./View/TemplateViews/Export2/Exprot2ViewTemplate");
var ExportViewTemplate_1 = require("./View/TemplateViews/Export/ExportViewTemplate");
var GameFailViewTemplate_1 = require("./View/TemplateViews/GameFail/GameFailViewTemplate");
var GameWinViewTemplate_1 = require("./View/TemplateViews/GameWin/GameWinViewTemplate");
var InGameViewTemplate_1 = require("./View/TemplateViews/InGame/InGameViewTemplate");
var MainViewTemplate_1 = require("./View/TemplateViews/Main/MainViewTemplate");
var MiniGameViewTemplate_1 = require("./View/TemplateViews/MiniGame/MiniGameViewTemplate");
var OPPONativeAdViewTemplate_1 = require("./View/TemplateViews/OPPONativeAd/OPPONativeAdViewTemplate");
var QQCrazyClick_1 = require("./View/QQTemplate/QQCrazyClick/QQCrazyClick");
var QQCrazyClick2_1 = require("./View/QQTemplate/QQCrazyClick/QQCrazyClick2");
var QQGameFailViewTemplate_1 = require("./View/QQTemplate/GameFail/QQGameFailViewTemplate");
var QQGameWinViewTemplate_1 = require("./View/QQTemplate/GameWin/QQGameWinViewTemplate");
var QQInGameViewTemplate_1 = require("./View/QQTemplate/InGame/QQInGameViewTemplate");
var QQMainViewTemplate_1 = require("./View/QQTemplate/Main/QQMainViewTemplate");
var RewardViewTemplate_1 = require("./View/TemplateViews/Reward/RewardViewTemplate");
var TTCrazyClick_1 = require("./View/TTTemplate/TTCrazyClick/TTCrazyClick");
var TTGameFailViewTemplate_1 = require("./View/TTTemplate/GameFail/TTGameFailViewTemplate");
var TTGameWinViewTemplate_1 = require("./View/TTTemplate/GameWin/TTGameWinViewTemplate");
var TTMainViewTemplate_1 = require("./View/TTTemplate/Main/TTMainViewTemplate");
var TipsView_1 = require("./View/TipsView/TipsView");
var LoopAdBox_1 = require("./ShareAd/View/LoopAdBox");
var HorizontalLoopAdView_1 = require("./ShareAd/View/HorizontalLoopAdView");
var BannerAdView_1 = require("./ShareAd/View/BannerAdView");
var UniversalBottomZone_1 = require("./View/Common/UniversalBottomZone");
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
        reg("Mgr/GameMgr.ts", GameMgr_1.default);
        reg("KRQ/Com/KRQ_LoopAd/KRQ_LoopAdBox.ts", KRQ_LoopAdBox_1.default);
        reg("KRQ/Com/KRQ_LoopAd/KRQ_VLoopAd.ts", KRQ_VLoopAd_1.default);
        reg("KRQ/Com/KRQ_Banner.ts", KRQ_Banner_1.default);
        reg("KRQ/ViewCom/KRQ_Export.ts", KRQ_Export_1.default);
        reg("KRQ/Com/KRQ_History/KRQ_HistoryBox.ts", KRQ_HistoryBox_1.default);
        reg("KRQ/Com/KRQ_History/KRQ_History.ts", KRQ_History_1.default);
        reg("KRQ/Com/KRQ_RockSingleAd.ts", KRQ_RockSingleAd_1.default);
        reg("KRQ/ViewCom/KRQ_Floating.ts", KRQ_Floating_1.default);
        reg("KRQ/Com/KRQ_RollSingleAd.ts", KRQ_RollSingleAd_1.default);
        reg("KRQ/ViewCom/KRQ_GameOver.ts", KRQ_GameOver_1.default);
        reg("KRQ/ViewCom/KRQ_SidePull.ts", KRQ_SidePull_1.default);
        reg("KRQ/Com/KRQ_LoopAd/KRQ_HLoopAd.ts", KRQ_HLoopAd_1.default);
        reg("KRQ/ViewCom/KRQ_Main.ts", KRQ_Main_1.default);
        reg("KRQ/Com/KRQ_SingleAd.ts", KRQ_SingleAd_1.default);
        reg("KRQ/Com/KRQ_GamingBanner.ts", KRQ_GamingBanner_1.default);
        reg("View/TwinkleSprite.ts", TwinkleSprite_1.default);
        reg("View/ClickGetPrize/ClickGetPrize.ts", ClickGetPrize_1.default);
        reg("myGameScript/view/endView.ts", endView_1.default);
        reg("View/ButtonAnim.ts", ButtonAnim_1.default);
        reg("myGameScript/view/gameView.ts", gameView_1.default);
        reg("myGameScript/view/videoBtnEffect.ts", videoBtnEffect_1.default);
        reg("myGameScript/view/myGamingBanner.ts", myGamingBanner_1.default);
        reg("myGameScript/view/myKRQ_Main.ts", myKRQ_Main_1.default);
        reg("myGameScript/view/indexView.ts", indexView_1.default);
        reg("myGameScript/view/lvInfoBox.ts", lvInfoBox_1.default);
        reg("myGameScript/view/myExport2View.ts", myExport2View_1.default);
        reg("View/LoadingView/LogoAni.ts", LogoAni_1.default);
        reg("View/LoadingView/LoadingView.ts", LoadingView_1.default);
        reg("View/TemplateViews/Export2/Exprot2ViewTemplate.ts", Exprot2ViewTemplate_1.default);
        reg("View/TemplateViews/Export/ExportViewTemplate.ts", ExportViewTemplate_1.default);
        reg("View/TemplateViews/GameFail/GameFailViewTemplate.ts", GameFailViewTemplate_1.default);
        reg("View/TemplateViews/GameWin/GameWinViewTemplate.ts", GameWinViewTemplate_1.default);
        reg("View/TemplateViews/InGame/InGameViewTemplate.ts", InGameViewTemplate_1.default);
        reg("View/TemplateViews/Main/MainViewTemplate.ts", MainViewTemplate_1.default);
        reg("View/TemplateViews/MiniGame/MiniGameViewTemplate.ts", MiniGameViewTemplate_1.default);
        reg("View/TemplateViews/OPPONativeAd/OPPONativeAdViewTemplate.ts", OPPONativeAdViewTemplate_1.default);
        reg("View/QQTemplate/QQCrazyClick/QQCrazyClick.ts", QQCrazyClick_1.default);
        reg("View/QQTemplate/QQCrazyClick/QQCrazyClick2.ts", QQCrazyClick2_1.default);
        reg("View/QQTemplate/GameFail/QQGameFailViewTemplate.ts", QQGameFailViewTemplate_1.default);
        reg("View/QQTemplate/GameWin/QQGameWinViewTemplate.ts", QQGameWinViewTemplate_1.default);
        reg("View/QQTemplate/InGame/QQInGameViewTemplate.ts", QQInGameViewTemplate_1.default);
        reg("View/QQTemplate/Main/QQMainViewTemplate.ts", QQMainViewTemplate_1.default);
        reg("View/TemplateViews/Reward/RewardViewTemplate.ts", RewardViewTemplate_1.default);
        reg("View/TTTemplate/TTCrazyClick/TTCrazyClick.ts", TTCrazyClick_1.default);
        reg("View/TTTemplate/GameFail/TTGameFailViewTemplate.ts", TTGameFailViewTemplate_1.default);
        reg("View/TTTemplate/GameWin/TTGameWinViewTemplate.ts", TTGameWinViewTemplate_1.default);
        reg("View/TTTemplate/Main/TTMainViewTemplate.ts", TTMainViewTemplate_1.default);
        reg("View/TipsView/TipsView.ts", TipsView_1.default);
        reg("ShareAd/View/LoopAdBox.ts", LoopAdBox_1.default);
        reg("ShareAd/View/HorizontalLoopAdView.ts", HorizontalLoopAdView_1.default);
        reg("ShareAd/View/BannerAdView.ts", BannerAdView_1.default);
        reg("View/Common/UniversalBottomZone.ts", UniversalBottomZone_1.default);
    };
    GameConfig.width = 750;
    GameConfig.height = 1334;
    GameConfig.scaleMode = "fixedwidth";
    GameConfig.screenMode = "vertical";
    GameConfig.alignV = "middle";
    GameConfig.alignH = "center";
    GameConfig.startScene = "GameMain.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = false;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{"./KRQ/Com/KRQ_Banner":9,"./KRQ/Com/KRQ_GamingBanner":11,"./KRQ/Com/KRQ_History/KRQ_History":12,"./KRQ/Com/KRQ_History/KRQ_HistoryBox":13,"./KRQ/Com/KRQ_LoopAd/KRQ_HLoopAd":14,"./KRQ/Com/KRQ_LoopAd/KRQ_LoopAdBox":15,"./KRQ/Com/KRQ_LoopAd/KRQ_VLoopAd":16,"./KRQ/Com/KRQ_RockSingleAd":17,"./KRQ/Com/KRQ_RollSingleAd":18,"./KRQ/Com/KRQ_SingleAd":19,"./KRQ/ViewCom/KRQ_Export":20,"./KRQ/ViewCom/KRQ_Floating":21,"./KRQ/ViewCom/KRQ_GameOver":22,"./KRQ/ViewCom/KRQ_Main":23,"./KRQ/ViewCom/KRQ_SidePull":24,"./Mgr/GameMgr":28,"./ShareAd/View/BannerAdView":41,"./ShareAd/View/HorizontalLoopAdView":42,"./ShareAd/View/LoopAdBox":43,"./View/ButtonAnim":47,"./View/ClickGetPrize/ClickGetPrize":48,"./View/Common/UniversalBottomZone":49,"./View/LoadingView/LoadingView":51,"./View/LoadingView/LogoAni":52,"./View/QQTemplate/GameFail/QQGameFailViewTemplate":53,"./View/QQTemplate/GameWin/QQGameWinViewTemplate":54,"./View/QQTemplate/InGame/QQInGameViewTemplate":55,"./View/QQTemplate/Main/QQMainViewTemplate":56,"./View/QQTemplate/QQCrazyClick/QQCrazyClick":57,"./View/QQTemplate/QQCrazyClick/QQCrazyClick2":58,"./View/TTTemplate/GameFail/TTGameFailViewTemplate":60,"./View/TTTemplate/GameWin/TTGameWinViewTemplate":61,"./View/TTTemplate/Main/TTMainViewTemplate":62,"./View/TTTemplate/TTCrazyClick/TTCrazyClick":63,"./View/TemplateViews/Export/ExportViewTemplate":66,"./View/TemplateViews/Export2/Exprot2ViewTemplate":65,"./View/TemplateViews/GameFail/GameFailViewTemplate":67,"./View/TemplateViews/GameWin/GameWinViewTemplate":68,"./View/TemplateViews/InGame/InGameViewTemplate":69,"./View/TemplateViews/Main/MainViewTemplate":70,"./View/TemplateViews/MiniGame/MiniGameViewTemplate":71,"./View/TemplateViews/OPPONativeAd/OPPONativeAdViewTemplate":72,"./View/TemplateViews/Reward/RewardViewTemplate":73,"./View/TipsView/TipsView":75,"./View/TwinkleSprite":76,"./myGameScript/view/endView":84,"./myGameScript/view/gameView":85,"./myGameScript/view/indexView":86,"./myGameScript/view/lvInfoBox":87,"./myGameScript/view/myExport2View":88,"./myGameScript/view/myGamingBanner":89,"./myGameScript/view/myKRQ_Main":90,"./myGameScript/view/videoBtnEffect":91}],9:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_ComBase_1 = require("./KRQ_ComBase");
var WXAPI_1 = require("../../WXAPI");
var AppSwitchConfig_1 = require("../../Config/AppSwitchConfig");
var ShareAd_1 = require("../../ShareAd/ShareAd");
var QQMiniGameAPI_1 = require("../../QQMiniGameAPI");
var WudianMgr_1 = require("../../Mgr/WudianMgr");
var KRQ_XXPTW__Banner_XXPTW_ = /** @class */ (function (_super) {
    __extends(KRQ_XXPTW__Banner_XXPTW_, _super);
    function KRQ_XXPTW__Banner_XXPTW_() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._wx_XXPTW_Banner = null;
        _this._on_XXPTW_Load = null;
        _this._on_XXPTW_Error = null;
        _this._on_XXPTW_Resize = null;
        _this._is_XXPTW_Creating = false;
        _this._is_XXPTW_Destroyed = false;
        _this._is_XXPTW_Hide = false;
        return _this;
    }
    Object.defineProperty(KRQ_XXPTW__Banner_XXPTW_.prototype, "_XXPTW_Clip_XXPTW_", {
        get: function () {
            return this.owner;
        },
        enumerable: true,
        configurable: true
    });
    KRQ_XXPTW__Banner_XXPTW_.prototype.onAwake = function () {
        this.Ad_XXPTW_Pos_XXPTW_ID = ShareAd_1.default.Banner_XXPTW_AdLocationID;
    };
    KRQ_XXPTW__Banner_XXPTW_.prototype.onStart = function () {
        this.ref_XXPTW_resh();
    };
    KRQ_XXPTW__Banner_XXPTW_.prototype.onEnable = function () {
        this._XXPTW_Sprite_XXPTW_.on(Laya.Event.CLICK, this, this.on_XXPTW_Click_XXPTW_Ad);
    };
    KRQ_XXPTW__Banner_XXPTW_.prototype.onDisable = function () {
        this._XXPTW_Sprite_XXPTW_.off(Laya.Event.CLICK, this, this.on_XXPTW_Click_XXPTW_Ad);
    };
    KRQ_XXPTW__Banner_XXPTW_.prototype.on_XXPTW_Click_XXPTW_Ad = function () {
        this.navigate_XXPTW_To_XXPTW_Mini_XXPTW_Program();
    };
    KRQ_XXPTW__Banner_XXPTW_.prototype.ref_XXPTW_resh = function (onComplate) {
        if (this._is_XXPTW_Destroyed)
            return;
        var banner = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().ba_XXPTW_nner;
        if (1 == banner) {
            this.refresh_XXPTW_WXBanner();
            if (Laya.Browser.onQQMiniGame && WudianMgr_1.default.Get_XXPTW_Ip_XXPTW_Blocked()) {
                var launchScene = QQMiniGameAPI_1.default.get_XXPTW_Launch_XXPTW_Options_XXPTW_Sync().scene;
                var noEnterBySearch = true;
                var wudianSceneList = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().wu_XXPTW_dian_XXPTW_Scene_XXPTW_List;
                for (var i = 0; i < wudianSceneList.length; ++i) {
                    var wudianSceneValue = wudianSceneList[i];
                    if (launchScene == wudianSceneValue) {
                        noEnterBySearch = false;
                    }
                }
                if (noEnterBySearch) {
                    var banner_XXPTW_Recreate_XXPTW_Time = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().banner_XXPTW_Recreate_XXPTW_Time;
                    Laya.timer.loop(banner_XXPTW_Recreate_XXPTW_Time * 1000, this, this.refresh_XXPTW_WXBanner);
                }
            }
        }
        else {
            this.refresh_XXPTW_Banner();
            if (Laya.Browser.onQQMiniGame && WudianMgr_1.default.Get_XXPTW_Ip_XXPTW_Blocked()) {
                var launchScene = QQMiniGameAPI_1.default.get_XXPTW_Launch_XXPTW_Options_XXPTW_Sync().scene;
                var noEnterBySearch = true;
                var wudianSceneList = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().wu_XXPTW_dian_XXPTW_Scene_XXPTW_List;
                for (var i = 0; i < wudianSceneList.length; ++i) {
                    var wudianSceneValue = wudianSceneList[i];
                    if (launchScene == wudianSceneValue) {
                        noEnterBySearch = false;
                    }
                }
                if (noEnterBySearch) {
                    var banner_XXPTW_Recreate_XXPTW_Time = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().banner_XXPTW_Recreate_XXPTW_Time;
                    Laya.timer.loop(banner_XXPTW_Recreate_XXPTW_Time * 1000, this, this.refresh_XXPTW_WXBanner);
                }
            }
        }
    };
    KRQ_XXPTW__Banner_XXPTW_.prototype.refresh_XXPTW_Banner = function () {
        var _this = this;
        if (null == this._XXPTW_Sprite_XXPTW_ || !this._XXPTW_Sprite_XXPTW_.visible)
            return;
        if (this._is_XXPTW_Creating || this._is_XXPTW_Destroyed)
            return;
        this._is_XXPTW_Creating = true;
        _super.prototype.ref_XXPTW_resh.call(this, function () {
            if (null != _this._data) {
                var self_1 = _this;
                _this._XXPTW_Sprite_XXPTW_.loadImage(_this._data.logo, Laya.Handler.create(_this, function () {
                    if (null != self_1._XXPTW_Sprite_XXPTW_ && !self_1._XXPTW_Sprite_XXPTW_.destroyed) {
                        self_1._XXPTW_Sprite_XXPTW_.width = 600;
                        self_1._XXPTW_Sprite_XXPTW_.height = 205;
                    }
                }));
            }
            _this._is_XXPTW_Creating = false;
        });
    };
    KRQ_XXPTW__Banner_XXPTW_.prototype.refresh_XXPTW_WXBanner = function () {
        if ((!Laya.Browser.onMiniGame && !Laya.Browser.onQQMiniGame) || null == this._XXPTW_Sprite_XXPTW_ || this._XXPTW_Sprite_XXPTW_.destroyed || !this._XXPTW_Sprite_XXPTW_.visible) {
            Laya.timer.clearAll(this);
            this.clear_XXPTW_WXBaner();
            return;
        }
        if (this._is_XXPTW_Creating || this._is_XXPTW_Destroyed || this._is_XXPTW_Hide)
            return;
        this.clear_XXPTW_WXBaner();
        var self = this;
        var sysInfo = null;
        if (Laya.Browser.onMiniGame) {
            sysInfo = Laya.Browser.window["wx"].getSystemInfoSync();
        }
        else if (Laya.Browser.onQQMiniGame) {
            sysInfo = Laya.Browser.window["qq"].getSystemInfoSync();
        }
        var sw = sysInfo.screenWidth;
        var sh = sysInfo.screenHeight;
        var pos = this._XXPTW_Sprite_XXPTW_.localToGlobal(new Laya.Point(0, 0));
        var width = 300;
        var scale = self._XXPTW_Sprite_XXPTW_.width / Laya.stage.width;
        var realWidth = sw * scale;
        var offset = (realWidth - width) / 2;
        var left = pos.x / Laya.stage.width * sw + offset;
        var top = pos.y / Laya.stage.height * sh;
        if (Laya.Browser.onMiniGame) {
            self._is_XXPTW_Creating = true;
            var recreateBannerIDList = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().recreate_XXPTW_Banner_XXPTW_IDList;
            var bannerAdUnitId_1 = recreateBannerIDList[Math.floor(Math.random() * recreateBannerIDList.length)];
            if (null == bannerAdUnitId_1) {
                bannerAdUnitId_1 = WXAPI_1.default.banner_XXPTW_AdUnitId;
            }
            this._wx_XXPTW_Banner = Laya.Browser.window["wx"].createBannerAd({
                adUnitId: bannerAdUnitId_1,
                adIntervals: 30,
                style: {
                    left: left,
                    top: top,
                    width: width,
                }
            });
            if (null != self._wx_XXPTW_Banner) {
                self._wx_XXPTW_Banner.onLoad(function (res) {
                    console.log("KRQ  WXBanner广告 加载完成 : ", bannerAdUnitId_1);
                    console.log(res);
                    self._is_XXPTW_Creating = false;
                    if (self._is_XXPTW_Destroyed || null == self._wx_XXPTW_Banner || self._is_XXPTW_Hide) {
                        self.clear_XXPTW_WXBaner();
                        return;
                    }
                    self._wx_XXPTW_Banner.show();
                });
                self._wx_XXPTW_Banner.onError(function (err) {
                    console.log("KRQ WXBanner广告 加载失败 : ", bannerAdUnitId_1);
                    console.log(err);
                    self._is_XXPTW_Creating = false;
                    self.clear_XXPTW_WXBaner();
                    if (self._is_XXPTW_Destroyed || null == self._wx_XXPTW_Banner || self._is_XXPTW_Hide) {
                        return;
                    }
                    self.refresh_XXPTW_Banner();
                });
                self._wx_XXPTW_Banner.onResize(function (res) {
                });
            }
            else {
                self.refresh_XXPTW_Banner();
            }
        }
        else if (Laya.Browser.onQQMiniGame) {
            self._is_XXPTW_Creating = true;
            var recreateBannerIDList = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().recreate_XXPTW_Banner_XXPTW_IDList;
            var bannerAdUnitId_2 = recreateBannerIDList[Math.floor(Math.random() * recreateBannerIDList.length)];
            if (null == bannerAdUnitId_2) {
                bannerAdUnitId_2 = QQMiniGameAPI_1.default.banner_XXPTW_AdUnitId;
            }
            self._wx_XXPTW_Banner = Laya.Browser.window["qq"].createBannerAd({
                adUnitId: bannerAdUnitId_2,
                adIntervals: 30,
                style: {
                    left: left,
                    top: top,
                    width: width,
                }
            });
            if (null != self._wx_XXPTW_Banner) {
                self._on_XXPTW_Load = function (res) {
                    console.log("KRQ QQBanner广告 加载完成 : ", bannerAdUnitId_2);
                    console.log(res);
                    self._is_XXPTW_Creating = false;
                    if (self._is_XXPTW_Destroyed || null == self._wx_XXPTW_Banner || self._is_XXPTW_Hide) {
                        self.clear_XXPTW_WXBaner();
                        return;
                    }
                    self._wx_XXPTW_Banner.show();
                };
                self._wx_XXPTW_Banner.onLoad(self._on_XXPTW_Load);
                self._on_XXPTW_Error = function (err) {
                    console.log("KRQ QQBanner广告 加载失败 : ", bannerAdUnitId_2);
                    console.log(err);
                    self._is_XXPTW_Creating = false;
                    self.clear_XXPTW_WXBaner();
                    if (self._is_XXPTW_Destroyed || null == self._wx_XXPTW_Banner || self._is_XXPTW_Hide) {
                        return;
                    }
                    self.refresh_XXPTW_Banner();
                };
                self._wx_XXPTW_Banner.onError(self._on_XXPTW_Error);
                self._on_XXPTW_Resize = function (res) {
                };
                self._wx_XXPTW_Banner.onResize(self._on_XXPTW_Resize);
            }
            else {
                self.refresh_XXPTW_Banner();
            }
        }
    };
    KRQ_XXPTW__Banner_XXPTW_.prototype.clear_XXPTW_WXBaner = function () {
        if (this._wx_XXPTW_Banner) {
            this._wx_XXPTW_Banner.hide();
            this._wx_XXPTW_Banner.offLoad(this._on_XXPTW_Load);
            this._wx_XXPTW_Banner.offError(this._on_XXPTW_Error);
            this._wx_XXPTW_Banner.offResize(this._on_XXPTW_Resize);
            this._wx_XXPTW_Banner.destroy();
        }
        this._wx_XXPTW_Banner = null;
    };
    KRQ_XXPTW__Banner_XXPTW_.prototype.onViewShow = function () {
        var banner = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().ba_XXPTW_nner;
        if (1 == banner) {
            if (null == this._wx_XXPTW_Banner) {
                this.refresh_XXPTW_WXBanner();
                if (Laya.Browser.onQQMiniGame && WudianMgr_1.default.Get_XXPTW_Ip_XXPTW_Blocked()) {
                    var launchScene = QQMiniGameAPI_1.default.get_XXPTW_Launch_XXPTW_Options_XXPTW_Sync().scene;
                    var noEnterBySearch = true;
                    var wudianSceneList = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().wu_XXPTW_dian_XXPTW_Scene_XXPTW_List;
                    for (var i = 0; i < wudianSceneList.length; ++i) {
                        var wudianSceneValue = wudianSceneList[i];
                        if (launchScene == wudianSceneValue) {
                            noEnterBySearch = false;
                        }
                    }
                    if (noEnterBySearch) {
                        var banner_XXPTW_Recreate_XXPTW_Time = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().banner_XXPTW_Recreate_XXPTW_Time;
                        Laya.timer.loop(banner_XXPTW_Recreate_XXPTW_Time * 1000, this, this.refresh_XXPTW_WXBanner);
                    }
                }
            }
        }
        else {
            this.refresh_XXPTW_Banner();
            if (Laya.Browser.onQQMiniGame && WudianMgr_1.default.Get_XXPTW_Ip_XXPTW_Blocked()) {
                var launchScene = QQMiniGameAPI_1.default.get_XXPTW_Launch_XXPTW_Options_XXPTW_Sync().scene;
                var noEnterBySearch = true;
                var wudianSceneList = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().wu_XXPTW_dian_XXPTW_Scene_XXPTW_List;
                for (var i = 0; i < wudianSceneList.length; ++i) {
                    var wudianSceneValue = wudianSceneList[i];
                    if (launchScene == wudianSceneValue) {
                        noEnterBySearch = false;
                    }
                }
                if (noEnterBySearch) {
                    var banner_XXPTW_Recreate_XXPTW_Time = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().banner_XXPTW_Recreate_XXPTW_Time;
                    Laya.timer.loop(banner_XXPTW_Recreate_XXPTW_Time * 1000, this, this.refresh_XXPTW_WXBanner);
                }
            }
        }
        this._is_XXPTW_Hide = false;
    };
    KRQ_XXPTW__Banner_XXPTW_.prototype.onViewHide = function () {
        this.clear_XXPTW_WXBaner();
        Laya.timer.clearAll(this);
        this._is_XXPTW_Hide = true;
    };
    KRQ_XXPTW__Banner_XXPTW_.prototype.onDestroy = function () {
        this.clear_XXPTW_WXBaner();
        Laya.timer.clearAll(this);
        this._is_XXPTW_Destroyed = true;
    };
    KRQ_XXPTW__Banner_XXPTW_.prototype._XXPTW_show_XXPTW_ = function () {
        _super.prototype._XXPTW_show_XXPTW_.call(this);
        this.onViewShow();
    };
    KRQ_XXPTW__Banner_XXPTW_.prototype._XXPTW_hide_XXPTW_ = function () {
        _super.prototype._XXPTW_hide_XXPTW_.call(this);
        this.onViewHide();
    };
    return KRQ_XXPTW__Banner_XXPTW_;
}(KRQ_ComBase_1.default));
exports.default = KRQ_XXPTW__Banner_XXPTW_;
},{"../../Config/AppSwitchConfig":5,"../../Mgr/WudianMgr":33,"../../QQMiniGameAPI":39,"../../ShareAd/ShareAd":40,"../../WXAPI":78,"./KRQ_ComBase":10}],10:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var WXAPI_1 = require("../../WXAPI");
var ShareAd_1 = require("../../ShareAd/ShareAd");
var ALD_1 = require("../../ALD");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var OPPOAPI_1 = require("../../OPPOAPI");
var QQMiniGameAPI_1 = require("../../QQMiniGameAPI");
var AppConfig_1 = require("../../AppConfig");
var TTAPI_1 = require("../../TTAPI");
var KRQ__XXPTW_Com_XXPTW_Base = /** @class */ (function (_super) {
    __extends(KRQ__XXPTW_Com_XXPTW_Base, _super);
    function KRQ__XXPTW_Com_XXPTW_Base() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.Ad_XXPTW_Pos_XXPTW_ID = -10086;
        _this._datas = [];
        _this._data = null;
        return _this;
    }
    Object.defineProperty(KRQ__XXPTW_Com_XXPTW_Base.prototype, "_XXPTW_Sprite_XXPTW_", {
        get: function () {
            return this.owner;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(KRQ__XXPTW_Com_XXPTW_Base.prototype, "_XXPTW_Data_XXPTW_", {
        get: function () {
            return this._data;
        },
        enumerable: true,
        configurable: true
    });
    KRQ__XXPTW_Com_XXPTW_Base.prototype.ref_XXPTW_resh = function (onComplate) {
        var self = this;
        ShareAd_1.default.get_XXPTW_ADVs(this.Ad_XXPTW_Pos_XXPTW_ID, function (datas) {
            if (null != datas) {
                self._datas = datas;
                self._data = self._datas[Math.floor(Math.random() * datas.length)];
                if (null != onComplate) {
                    onComplate();
                }
            }
        }, false);
    };
    KRQ__XXPTW_Com_XXPTW_Base.prototype.navigate_XXPTW_To_XXPTW_Mini_XXPTW_Program = function (d) {
        var data = null == d ? this._data : d;
        if (data) {
            console.log("跳转游戏： " + data.title);
            if (Laya.Browser.onMiniGame) {
                WXAPI_1.default.navigate_XXPTW_To_XXPTW_MiniProgram(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.report_XXPTW_User_XXPTW_Click(data.appid);
                    ALD_1.default.ald_XXPTW_Send_XXPTW_ReportAdClickSuccess(data);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.ins_XXPTW_tance.dis_XXPTW_patch(EventDef_1.Event_XXPTW_Def.AD_On_XXPTW_ShareAd_XXPTW_Fail);
                    if (res.errMsg == "navigateToMiniProgram:fail cancel") {
                        console.log("用户取消跳转");
                        ALD_1.default.aldSend_XXPTW_ReportAd_XXPTW_ClickFail(data);
                    }
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQGMiniGame) {
                OPPOAPI_1.default.navigate_XXPTW_To_XXPTW_MiniProgram(data.appid, data.title, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.report_XXPTW_User_XXPTW_Click(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.ins_XXPTW_tance.dis_XXPTW_patch(EventDef_1.Event_XXPTW_Def.AD_On_XXPTW_ShareAd_XXPTW_Fail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQQMiniGame) //qq小游戏
             {
                QQMiniGameAPI_1.default.navigate_XXPTW_To_XXPTW_Mini_XXPTW_Program(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.report_XXPTW_User_XXPTW_Click(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.ins_XXPTW_tance.dis_XXPTW_patch(EventDef_1.Event_XXPTW_Def.AD_On_XXPTW_ShareAd_XXPTW_Fail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (AppConfig_1.default.onTTMiniGame) {
                TTAPI_1.default.showMoreGamesModal(function () {
                    console.log("跳转成功");
                    ShareAd_1.default.report_XXPTW_User_XXPTW_Click(data.appid);
                }, function () {
                    console.log("跳转失败");
                    EventMgr_1.default.ins_XXPTW_tance.dis_XXPTW_patch(EventDef_1.Event_XXPTW_Def.AD_On_XXPTW_ShareAd_XXPTW_Fail);
                });
            }
        }
    };
    KRQ__XXPTW_Com_XXPTW_Base.prototype._XXPTW_show_XXPTW_ = function () {
        this._XXPTW_Sprite_XXPTW_.visible = true;
    };
    KRQ__XXPTW_Com_XXPTW_Base.prototype._XXPTW_hide_XXPTW_ = function () {
        this._XXPTW_Sprite_XXPTW_.visible = false;
    };
    KRQ__XXPTW_Com_XXPTW_Base.prototype.auto_XXPTW_Scroll_XXPTW_Text = function (text) {
        if (text.overflow != Laya.Text.SCROLL)
            return;
        var forward = true;
        var deltaDis = 0;
        Laya.timer.frameLoop(1, text, function () {
            var d = Laya.timer.delta / 1000 * 10;
            deltaDis += d;
            if (deltaDis >= text.textWidth / 2) {
                forward = !forward;
                deltaDis = 0;
            }
            if (forward) {
                text.scrollX += d;
            }
            else {
                text.scrollX -= d;
            }
        });
    };
    return KRQ__XXPTW_Com_XXPTW_Base;
}(Laya.Script));
exports.default = KRQ__XXPTW_Com_XXPTW_Base;
},{"../../ALD":1,"../../AppConfig":2,"../../Event/EventDef":6,"../../Event/EventMgr":7,"../../OPPOAPI":38,"../../QQMiniGameAPI":39,"../../ShareAd/ShareAd":40,"../../TTAPI":44,"../../WXAPI":78}],11:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_Banner_1 = require("./KRQ_Banner");
var WXAPI_1 = require("../../WXAPI");
var QQMiniGameAPI_1 = require("../../QQMiniGameAPI");
var AppSwitchConfig_1 = require("../../Config/AppSwitchConfig");
var WudianMgr_1 = require("../../Mgr/WudianMgr");
var KRQ_Gaming_XXPTW_Banner = /** @class */ (function (_super) {
    __extends(KRQ_Gaming_XXPTW_Banner, _super);
    function KRQ_Gaming_XXPTW_Banner() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    KRQ_Gaming_XXPTW_Banner.prototype.ref_XXPTW_resh = function (onComplate) {
        var _this = this;
        var launchScene = null;
        if (Laya.Browser.onMiniGame) {
            launchScene = WXAPI_1.default.get_XXPTW_Launch_XXPTW_Options_XXPTW_Sync().scene;
        }
        else if (Laya.Browser.onQQMiniGame) {
            launchScene = QQMiniGameAPI_1.default.get_XXPTW_Launch_XXPTW_Options_XXPTW_Sync().scene;
        }
        var noEnterBySearch = true;
        var wudianSceneList = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().wu_XXPTW_dian_XXPTW_Scene_XXPTW_List;
        for (var i = 0; i < wudianSceneList.length; ++i) {
            var wudianSceneValue = wudianSceneList[i];
            if (launchScene == wudianSceneValue) {
                noEnterBySearch = false;
            }
        }
        var ipBlocked = WudianMgr_1.default.Get_XXPTW_Ip_XXPTW_Blocked();
        if (!ipBlocked || !noEnterBySearch) {
            this._XXPTW_Sprite_XXPTW_.visible = false;
            if (null != onComplate) {
                onComplate();
            }
            return;
        }
        var banner = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().ba_XXPTW_nner;
        if (1 == banner) {
            this.refresh_XXPTW_WXBanner();
        }
        else {
            _super.prototype.ref_XXPTW_resh.call(this, function () {
                _this.refresh_XXPTW_Banner();
                if (null != onComplate) {
                    onComplate();
                }
            });
        }
    };
    return KRQ_Gaming_XXPTW_Banner;
}(KRQ_Banner_1.default));
exports.default = KRQ_Gaming_XXPTW_Banner;
},{"../../Config/AppSwitchConfig":5,"../../Mgr/WudianMgr":33,"../../QQMiniGameAPI":39,"../../WXAPI":78,"./KRQ_Banner":9}],12:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_HistoryBox_1 = require("./KRQ_HistoryBox");
var KRQ_ComBase_1 = require("../KRQ_ComBase");
var ShareAd_1 = require("../../../ShareAd/ShareAd");
var KRQ_XXPTW__His_XXPTW_tory = /** @class */ (function (_super) {
    __extends(KRQ_XXPTW__His_XXPTW_tory, _super);
    function KRQ_XXPTW__His_XXPTW_tory() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.On_XXPTW_Back_XXPTW_Btn_XXPTW_Click = null;
        _this._top_XXPTW_Zone = null;
        _this._back_XXPTW_Btn = null;
        _this._start_XXPTW_List = new Array();
        return _this;
    }
    KRQ_XXPTW__His_XXPTW_tory.prototype.onAwake = function () {
        this.Ad_XXPTW_Pos_XXPTW_ID = ShareAd_1.default.History_XXPTW_LocationID;
        this._top_XXPTW_Zone = this._XXPTW_Sprite_XXPTW_.getChildByName("TopZone");
        this._back_XXPTW_Btn = this._top_XXPTW_Zone.getChildByName("BackBtn");
        this._list = this._XXPTW_Sprite_XXPTW_.getChildByName("List");
        this._list.renderHandler = Laya.Handler.create(this, this.on_XXPTW_List_XXPTW_Render, null, false);
        this._list.vScrollBarSkin = "";
    };
    KRQ_XXPTW__His_XXPTW_tory.prototype.onStart = function () {
        this.ref_XXPTW_resh();
    };
    KRQ_XXPTW__His_XXPTW_tory.prototype.onEnable = function () {
        this._back_XXPTW_Btn.on(Laya.Event.CLICK, this, this.on_XXPTW_Back_XXPTW_Btn);
    };
    KRQ_XXPTW__His_XXPTW_tory.prototype.onDisable = function () {
        this._back_XXPTW_Btn.off(Laya.Event.CLICK, this, this.on_XXPTW_Back_XXPTW_Btn);
    };
    KRQ_XXPTW__His_XXPTW_tory.prototype.ref_XXPTW_resh = function (onComplate) {
        var self = this;
        ShareAd_1.default.get_XXPTW_ADVs(this.Ad_XXPTW_Pos_XXPTW_ID, function (datas) {
            if (null != datas) {
                self._datas = datas;
                self._start_XXPTW_List.splice(0);
                for (var i = 0; i < self._datas.length; ++i) {
                    self._start_XXPTW_List.push(false);
                }
                var num = Math.floor(self._start_XXPTW_List.length * 0.33);
                while (num > 0) {
                    var index = Math.floor(Math.random() * self._start_XXPTW_List.length);
                    if (false == self._start_XXPTW_List[index]) {
                        self._start_XXPTW_List[index] = true;
                        --num;
                    }
                }
                self._list.array = self._datas;
            }
        }, false);
    };
    KRQ_XXPTW__His_XXPTW_tory.prototype.on_XXPTW_List_XXPTW_Render = function (cell, index) {
        var data = this._list.array[index];
        var star = this._start_XXPTW_List[index];
        var historyBox = cell.getComponent(KRQ_HistoryBox_1.default);
        historyBox.setData(data, star);
    };
    KRQ_XXPTW__His_XXPTW_tory.prototype.on_XXPTW_Back_XXPTW_Btn = function () {
        this._XXPTW_hide_XXPTW_();
        if (null != this.On_XXPTW_Back_XXPTW_Btn_XXPTW_Click) {
            this.On_XXPTW_Back_XXPTW_Btn_XXPTW_Click();
        }
    };
    KRQ_XXPTW__His_XXPTW_tory.prototype._XXPTW_show_XXPTW_ = function () {
        _super.prototype._XXPTW_show_XXPTW_.call(this);
        this.ref_XXPTW_resh();
    };
    return KRQ_XXPTW__His_XXPTW_tory;
}(KRQ_ComBase_1.default));
exports.default = KRQ_XXPTW__His_XXPTW_tory;
},{"../../../ShareAd/ShareAd":40,"../KRQ_ComBase":10,"./KRQ_HistoryBox":13}],13:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_ComBase_1 = require("../../Com/KRQ_ComBase");
var KRQ__XXPTW_History_XXPTW_Box = /** @class */ (function (_super) {
    __extends(KRQ__XXPTW_History_XXPTW_Box, _super);
    function KRQ__XXPTW_History_XXPTW_Box() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.__XXPTW_icon = null;
        _this.__XXPTW_text = null;
        _this.__XXPTW_mark = null;
        return _this;
    }
    KRQ__XXPTW_History_XXPTW_Box.prototype.onAwake = function () {
        this.__XXPTW_icon = this._XXPTW_Sprite_XXPTW_.getChildByName("Icon");
        this.__XXPTW_text = this._XXPTW_Sprite_XXPTW_.getChildByName("Text");
        this.__XXPTW_text.overflow = Laya.Text.SCROLL;
        this.__XXPTW_text.text = "";
        this.__XXPTW_mark = this._XXPTW_Sprite_XXPTW_.getChildByName("Mark");
        this.__XXPTW_mark.visible = false;
    };
    KRQ__XXPTW_History_XXPTW_Box.prototype.onStart = function () {
        this.auto_XXPTW_Scroll_XXPTW_Text(this.__XXPTW_text);
    };
    KRQ__XXPTW_History_XXPTW_Box.prototype.onEnable = function () {
        this._XXPTW_Sprite_XXPTW_.on(Laya.Event.CLICK, this, this.onClic_XXPTW_kAd);
    };
    KRQ__XXPTW_History_XXPTW_Box.prototype.onDisable = function () {
        this._XXPTW_Sprite_XXPTW_.off(Laya.Event.CLICK, this, this.onClic_XXPTW_kAd);
    };
    KRQ__XXPTW_History_XXPTW_Box.prototype.onClic_XXPTW_kAd = function () {
        this.navigate_XXPTW_To_XXPTW_Mini_XXPTW_Program();
    };
    KRQ__XXPTW_History_XXPTW_Box.prototype.setData = function (data, star) {
        this._data = data;
        if (null != this._data) {
            var self = this;
            this.__XXPTW_icon.loadImage(this._data.logo, Laya.Handler.create(this, function () {
                if (!self.__XXPTW_icon.destroyed) {
                    self.__XXPTW_icon.width = 100;
                    self.__XXPTW_icon.height = 100;
                }
            }));
            var str = String(this._data.title);
            this.__XXPTW_text.text = str;
            this.__XXPTW_mark.visible = star;
        }
    };
    return KRQ__XXPTW_History_XXPTW_Box;
}(KRQ_ComBase_1.default));
exports.default = KRQ__XXPTW_History_XXPTW_Box;
},{"../../Com/KRQ_ComBase":10}],14:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_ComBase_1 = require("../KRQ_ComBase");
var KRQ_LoopAdBox_1 = require("./KRQ_LoopAdBox");
var ShareAd_1 = require("../../../ShareAd/ShareAd");
var KRQ_XXPTW__H_XXPTW_Loop_XXPTW_Ad = /** @class */ (function (_super) {
    __extends(KRQ_XXPTW__H_XXPTW_Loop_XXPTW_Ad, _super);
    function KRQ_XXPTW__H_XXPTW_Loop_XXPTW_Ad() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._scroll_XXPTW_Forward = true;
        _this._cell_XXPTW_Size = new Laya.Point();
        _this.isEnable = true;
        _this.useMovePause = true;
        _this.use_XXPTW_Local_XXPTW_Random = true;
        _this.useRandom = true;
        _this.sortDatas = null;
        return _this;
    }
    Object.defineProperty(KRQ_XXPTW__H_XXPTW_Loop_XXPTW_Ad.prototype, "_XXPTW_Clip_XXPTW_", {
        get: function () {
            return this.owner;
        },
        enumerable: true,
        configurable: true
    });
    KRQ_XXPTW__H_XXPTW_Loop_XXPTW_Ad.prototype.onAwake = function () {
        this.Ad_XXPTW_Pos_XXPTW_ID = ShareAd_1.default.LoopAd_XXPTW_LocationID;
        this._XXPTW__list_XXPTW_ = this.owner.getChildByName("List");
        this._XXPTW__list_XXPTW_.renderHandler = Laya.Handler.create(this, this.onListRender, null, false);
        this._XXPTW__list_XXPTW_.hScrollBarSkin = "";
    };
    KRQ_XXPTW__H_XXPTW_Loop_XXPTW_Ad.prototype.onStart = function () {
        var self = this;
        this._XXPTW__list_XXPTW_.width = self._XXPTW_Clip_XXPTW_.width;
        this._XXPTW__list_XXPTW_.height = self._XXPTW_Clip_XXPTW_.height;
        self.ref_XXPTW_resh(function () {
            if (null != self._XXPTW__list_XXPTW_.cells && self._XXPTW__list_XXPTW_.cells.length > 0) {
                var box = self._XXPTW__list_XXPTW_.cells[0];
                self._cell_XXPTW_Size.x = box.width;
                self._cell_XXPTW_Size.y = box.height;
                if (self.useMovePause) {
                    setTimeout(function () {
                        if (self._XXPTW__list_XXPTW_.scrollBar) {
                            self._XXPTW__list_XXPTW_.scrollBar.value = 0;
                            self.move();
                        }
                    }, 2000);
                }
            }
        });
    };
    KRQ_XXPTW__H_XXPTW_Loop_XXPTW_Ad.prototype.ref_XXPTW_resh = function (onComplate) {
        if (!this.isEnable) {
            if (null != onComplate) {
                onComplate();
            }
            return;
        }
        var self = this;
        ShareAd_1.default.get_XXPTW_ADVs(this.Ad_XXPTW_Pos_XXPTW_ID, function (datas) {
            if (null != datas && datas.length > 0) {
                self._datas = datas;
                self._XXPTW__list_XXPTW_.array = self._datas;
                if (null != self._XXPTW_Sprite_XXPTW_ && !self._XXPTW_Sprite_XXPTW_.destroyed) {
                    self._XXPTW_Sprite_XXPTW_.visible = true;
                }
                if (null != onComplate) {
                    onComplate();
                }
            }
            else {
                if (null != self._XXPTW_Sprite_XXPTW_ && !self._XXPTW_Sprite_XXPTW_.destroyed) {
                    self._XXPTW_Sprite_XXPTW_.visible = false;
                }
            }
        }, this.useRandom, this.use_XXPTW_Local_XXPTW_Random, this.sortDatas);
    };
    KRQ_XXPTW__H_XXPTW_Loop_XXPTW_Ad.prototype.onListRender = function (cell, index) {
        var data = this._XXPTW__list_XXPTW_.array[index];
        var loopAdBox = cell.getComponent(KRQ_LoopAdBox_1.default);
        loopAdBox.set_XXPTW_Data(data);
    };
    KRQ_XXPTW__H_XXPTW_Loop_XXPTW_Ad.prototype.move = function () {
        var tonum = this._cell_XXPTW_Size.x + this._XXPTW__list_XXPTW_.spaceX;
        var left = 0;
        if (!this._scroll_XXPTW_Forward) {
            tonum *= -1;
            left = (this._XXPTW__list_XXPTW_.scrollBar.max - this._XXPTW__list_XXPTW_.scrollBar.value) % tonum * -1;
        }
        else {
            left = this._XXPTW__list_XXPTW_.scrollBar.value % tonum;
        }
        if (this._XXPTW__list_XXPTW_.scrollBar) {
            this._XXPTW__list_XXPTW_.scrollBar.stopScroll();
            var scrollDelta = tonum;
            if (0 != left) {
                scrollDelta = 2 * tonum - left;
            }
            var self_1 = this;
            Laya.Tween.to(self_1._XXPTW__list_XXPTW_.scrollBar, { value: self_1._XXPTW__list_XXPTW_.scrollBar.value + scrollDelta }, 1000, null, Laya.Handler.create(self_1, function () {
            }));
            Laya.timer.once(1010, self_1, function () {
                if (self_1._XXPTW__list_XXPTW_.scrollBar.value >= self_1._XXPTW__list_XXPTW_.scrollBar.max) {
                    self_1._scroll_XXPTW_Forward = false;
                }
                else if (self_1._XXPTW__list_XXPTW_.scrollBar.value <= 0) {
                    self_1._scroll_XXPTW_Forward = true;
                }
                Laya.timer.once(3000, self_1, function () {
                    if (self_1._XXPTW__list_XXPTW_.scrollBar) {
                        self_1.move();
                    }
                });
            });
        }
    };
    KRQ_XXPTW__H_XXPTW_Loop_XXPTW_Ad.prototype.onUpdate = function () {
        if (this.useMovePause)
            return;
        if (this._scroll_XXPTW_Forward) {
            this._XXPTW__list_XXPTW_.scrollBar.value += 100 * Laya.timer.delta / 1000;
            if (this._XXPTW__list_XXPTW_.scrollBar.value >= this._XXPTW__list_XXPTW_.scrollBar.max) {
                this._scroll_XXPTW_Forward = false;
            }
        }
        else {
            this._XXPTW__list_XXPTW_.scrollBar.value -= 100 * Laya.timer.delta / 1000;
            if (this._XXPTW__list_XXPTW_.scrollBar.value <= 0) {
                this._scroll_XXPTW_Forward = true;
            }
        }
    };
    return KRQ_XXPTW__H_XXPTW_Loop_XXPTW_Ad;
}(KRQ_ComBase_1.default));
exports.default = KRQ_XXPTW__H_XXPTW_Loop_XXPTW_Ad;
},{"../../../ShareAd/ShareAd":40,"../KRQ_ComBase":10,"./KRQ_LoopAdBox":15}],15:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_ComBase_1 = require("../KRQ_ComBase");
var KRQ_XXPTW__Loop_XXPTW_Ad_XXPTW_Box = /** @class */ (function (_super) {
    __extends(KRQ_XXPTW__Loop_XXPTW_Ad_XXPTW_Box, _super);
    function KRQ_XXPTW__Loop_XXPTW_Ad_XXPTW_Box() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._XXPTW__originW_XXPTW_ = 170;
        _this._XXPTW__originH_XXPTW_ = 170;
        return _this;
    }
    KRQ_XXPTW__Loop_XXPTW_Ad_XXPTW_Box.prototype.onAwake = function () {
        this._display_XXPTW_Sp = this.owner.getChildByName("Display");
        this._XXPTW__originW_XXPTW_ = this._display_XXPTW_Sp.width;
        this._XXPTW__originH_XXPTW_ = this._display_XXPTW_Sp.height;
        this._XXPTW__disText_XXPTW_ = this.owner.getChildByName("TitelText");
        this._XXPTW__disText_XXPTW_.overflow = Laya.Text.SCROLL;
        this._XXPTW__disText_XXPTW_.text = "";
    };
    KRQ_XXPTW__Loop_XXPTW_Ad_XXPTW_Box.prototype.onStart = function () {
        this.auto_XXPTW_Scroll_XXPTW_Text(this._XXPTW__disText_XXPTW_);
    };
    KRQ_XXPTW__Loop_XXPTW_Ad_XXPTW_Box.prototype.onEnable = function () {
        this._XXPTW_Sprite_XXPTW_.on(Laya.Event.CLICK, this, this.on_XXPTW_Click_XXPTW_Ad);
    };
    KRQ_XXPTW__Loop_XXPTW_Ad_XXPTW_Box.prototype.onDisable = function () {
        this._XXPTW_Sprite_XXPTW_.off(Laya.Event.CLICK, this, this.on_XXPTW_Click_XXPTW_Ad);
    };
    KRQ_XXPTW__Loop_XXPTW_Ad_XXPTW_Box.prototype.on_XXPTW_Click_XXPTW_Ad = function () {
        this.navigate_XXPTW_To_XXPTW_Mini_XXPTW_Program();
    };
    KRQ_XXPTW__Loop_XXPTW_Ad_XXPTW_Box.prototype.set_XXPTW_Data = function (data) {
        this._data = data;
        if (null != this._data) {
            var self_1 = this;
            this._display_XXPTW_Sp.loadImage(this._data.logo, Laya.Handler.create(this, function () {
                if (!self_1._display_XXPTW_Sp.destroyed) {
                    self_1._display_XXPTW_Sp.width = self_1._XXPTW__originW_XXPTW_;
                    self_1._display_XXPTW_Sp.height = self_1._XXPTW__originH_XXPTW_;
                }
            }));
            var str = String(this._data.title);
            this._XXPTW__disText_XXPTW_.text = str;
        }
    };
    return KRQ_XXPTW__Loop_XXPTW_Ad_XXPTW_Box;
}(KRQ_ComBase_1.default));
exports.default = KRQ_XXPTW__Loop_XXPTW_Ad_XXPTW_Box;
},{"../KRQ_ComBase":10}],16:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_HLoopAd_1 = require("./KRQ_HLoopAd");
var ShareAd_1 = require("../../../ShareAd/ShareAd");
var KRQ_XXPTW__V_XXPTW_Loop_XXPTW_Ad = /** @class */ (function (_super) {
    __extends(KRQ_XXPTW__V_XXPTW_Loop_XXPTW_Ad, _super);
    function KRQ_XXPTW__V_XXPTW_Loop_XXPTW_Ad() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    KRQ_XXPTW__V_XXPTW_Loop_XXPTW_Ad.prototype.onAwake = function () {
        this.Ad_XXPTW_Pos_XXPTW_ID = ShareAd_1.default.LoopAd_XXPTW_LocationID;
        this._XXPTW__list_XXPTW_ = this.owner.getChildByName("List");
        this._XXPTW__list_XXPTW_.renderHandler = Laya.Handler.create(this, this.onListRender, null, false);
        this._XXPTW__list_XXPTW_.vScrollBarSkin = "";
    };
    KRQ_XXPTW__V_XXPTW_Loop_XXPTW_Ad.prototype.move = function () {
        var tonum = this._cell_XXPTW_Size.y + this._XXPTW__list_XXPTW_.spaceY;
        var left = 0;
        if (!this._scroll_XXPTW_Forward) {
            tonum *= -1;
            left = (this._XXPTW__list_XXPTW_.scrollBar.max - this._XXPTW__list_XXPTW_.scrollBar.value) % tonum * -1;
        }
        else {
            left = this._XXPTW__list_XXPTW_.scrollBar.value % tonum;
        }
        if (this._XXPTW__list_XXPTW_.scrollBar) {
            this._XXPTW__list_XXPTW_.scrollBar.stopScroll();
            var scrollDelta = tonum;
            if (0 != left) {
                scrollDelta = 2 * tonum - left;
            }
            var self_1 = this;
            Laya.Tween.to(self_1._XXPTW__list_XXPTW_.scrollBar, { value: self_1._XXPTW__list_XXPTW_.scrollBar.value + scrollDelta }, 1000, null, Laya.Handler.create(self_1, function () {
            }));
            Laya.timer.once(1010, self_1, function () {
                if (self_1._XXPTW__list_XXPTW_.scrollBar.value >= self_1._XXPTW__list_XXPTW_.scrollBar.max) {
                    self_1._scroll_XXPTW_Forward = false;
                }
                else if (self_1._XXPTW__list_XXPTW_.scrollBar.value <= 0) {
                    self_1._scroll_XXPTW_Forward = true;
                }
                Laya.timer.once(3000, self_1, function () {
                    if (self_1._XXPTW__list_XXPTW_.scrollBar) {
                        self_1.move();
                    }
                });
            });
        }
    };
    return KRQ_XXPTW__V_XXPTW_Loop_XXPTW_Ad;
}(KRQ_HLoopAd_1.default));
exports.default = KRQ_XXPTW__V_XXPTW_Loop_XXPTW_Ad;
},{"../../../ShareAd/ShareAd":40,"./KRQ_HLoopAd":14}],17:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_SingleAd_1 = require("./KRQ_SingleAd");
var KRQ_XXPTW__Rock_XXPTW_Single_XXPTW_Ad = /** @class */ (function (_super) {
    __extends(KRQ_XXPTW__Rock_XXPTW_Single_XXPTW_Ad, _super);
    function KRQ_XXPTW__Rock_XXPTW_Single_XXPTW_Ad() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    KRQ_XXPTW__Rock_XXPTW_Single_XXPTW_Ad.prototype.play_XXPTW_Ani = function (onComplate) {
        var self = this;
        self._XXPTW_Sprite_XXPTW_.rotation = 0;
        Laya.Tween.to(self._XXPTW_Sprite_XXPTW_, {
            rotation: 20,
        }, 250, Laya.Ease.linearNone, Laya.Handler.create(self, function () {
            Laya.Tween.to(self._XXPTW_Sprite_XXPTW_, {
                rotation: 0,
            }, 250, Laya.Ease.linearNone, Laya.Handler.create(self, function () {
                self._XXPTW_Sprite_XXPTW_.rotation = 0;
                if (null != onComplate) {
                    onComplate();
                }
            }));
        }));
    };
    return KRQ_XXPTW__Rock_XXPTW_Single_XXPTW_Ad;
}(KRQ_SingleAd_1.default));
exports.default = KRQ_XXPTW__Rock_XXPTW_Single_XXPTW_Ad;
},{"./KRQ_SingleAd":19}],18:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_SingleAd_1 = require("./KRQ_SingleAd");
var KRQ_Roll_XXPTW_Single_XXPTW_Ad = /** @class */ (function (_super) {
    __extends(KRQ_Roll_XXPTW_Single_XXPTW_Ad, _super);
    function KRQ_Roll_XXPTW_Single_XXPTW_Ad() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._originX = null;
        return _this;
    }
    KRQ_Roll_XXPTW_Single_XXPTW_Ad.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._originX = this._XXPTW_Sprite_XXPTW_.x;
        this._XXPTW_Sprite_XXPTW_.x -= Laya.stage.width;
    };
    KRQ_Roll_XXPTW_Single_XXPTW_Ad.prototype.play_XXPTW_Ani = function (onComplate) {
        var _this = this;
        var cur = this._originX;
        var next = cur - Laya.stage.width;
        this._XXPTW_Sprite_XXPTW_.x = next;
        Laya.Tween.to(this._XXPTW_Sprite_XXPTW_, {
            rotation: 360,
        }, 500, Laya.Ease.linearNone, Laya.Handler.create(this, function () {
            _this._XXPTW_Sprite_XXPTW_.rotation = 0;
        }));
        Laya.Tween.to(this._XXPTW_Sprite_XXPTW_, {
            x: cur,
        }, 500, Laya.Ease.linearNone, Laya.Handler.create(this, function () {
            _this._XXPTW_Sprite_XXPTW_.x = cur;
            if (null != onComplate) {
                onComplate();
            }
        }));
    };
    return KRQ_Roll_XXPTW_Single_XXPTW_Ad;
}(KRQ_SingleAd_1.default));
exports.default = KRQ_Roll_XXPTW_Single_XXPTW_Ad;
},{"./KRQ_SingleAd":19}],19:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_ComBase_1 = require("./KRQ_ComBase");
var ShareAd_1 = require("../../ShareAd/ShareAd");
var KRQ_XXPTW__Single_XXPTW_Ad = /** @class */ (function (_super) {
    __extends(KRQ_XXPTW__Single_XXPTW_Ad, _super);
    function KRQ_XXPTW__Single_XXPTW_Ad() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._XXPTW__originW_XXPTW_ = 300;
        _this._XXPTW__originH_XXPTW_ = 300;
        return _this;
    }
    KRQ_XXPTW__Single_XXPTW_Ad.prototype.onAwake = function () {
        this.Ad_XXPTW_Pos_XXPTW_ID = ShareAd_1.default.LoopAd_XXPTW_LocationID;
        this._XXPTW__display_XXPTW_ = this._XXPTW_Sprite_XXPTW_.getChildByName("Display");
        this._XXPTW__text_XXPTW_ = this._XXPTW_Sprite_XXPTW_.getChildByName("Text");
        this._XXPTW__text_XXPTW_.overflow = Laya.Text.SCROLL;
        this._XXPTW__text_XXPTW_.text = "";
    };
    KRQ_XXPTW__Single_XXPTW_Ad.prototype.onEnable = function () {
        this._XXPTW_Sprite_XXPTW_.on(Laya.Event.CLICK, this, this.on_XXPTW_Click_XXPTW_Ad);
    };
    KRQ_XXPTW__Single_XXPTW_Ad.prototype.onDisable = function () {
        this._XXPTW_Sprite_XXPTW_.off(Laya.Event.CLICK, this, this.on_XXPTW_Click_XXPTW_Ad);
    };
    KRQ_XXPTW__Single_XXPTW_Ad.prototype.onStart = function () {
        this.auto_XXPTW_Scroll_XXPTW_Text(this._XXPTW__text_XXPTW_);
        this.ref_XXPTW_resh();
    };
    KRQ_XXPTW__Single_XXPTW_Ad.prototype.ref_XXPTW_resh = function (onComplate) {
        var self = this;
        ShareAd_1.default.get_XXPTW_ADVs(this.Ad_XXPTW_Pos_XXPTW_ID, function (datas) {
            if (null != datas) {
                self._datas = datas;
                if (self._XXPTW_Sprite_XXPTW_ && !self._XXPTW_Sprite_XXPTW_.destroyed) {
                    for (var i = 0; i < self._datas.length; ++i) {
                        var find = false;
                        var data = self._datas[i];
                        for (var j = 0; j < KRQ_XXPTW__Single_XXPTW_Ad._repeatCheckList.length; ++j) {
                            var appid = KRQ_XXPTW__Single_XXPTW_Ad._repeatCheckList[j];
                            if (appid == data.appid) {
                                find = true;
                                break;
                            }
                        }
                        if (!find) {
                            self.clear_XXPTW_Repeat();
                            self._data = data;
                            break;
                        }
                    }
                    if (null == self._data) {
                        self._data = self._datas[Math.floor(Math.random() * datas.length)];
                    }
                    if (null != self._data) {
                        self._XXPTW__display_XXPTW_.loadImage(self._data.logo, Laya.Handler.create(self, function () {
                            if (null != self._XXPTW_Sprite_XXPTW_ && !self._XXPTW_Sprite_XXPTW_.destroy) {
                                self._XXPTW_Sprite_XXPTW_.visible = true;
                                if (onComplate) {
                                    onComplate();
                                }
                            }
                        }));
                        var str = self._data.title;
                        self._XXPTW__text_XXPTW_.text = str;
                        var isHas = false;
                        for (var j = 0; j < KRQ_XXPTW__Single_XXPTW_Ad._repeatCheckList.length; ++j) {
                            var appid = KRQ_XXPTW__Single_XXPTW_Ad._repeatCheckList[j];
                            if (appid == self._data.appid) {
                                isHas = true;
                                break;
                            }
                        }
                        if (!isHas) {
                            KRQ_XXPTW__Single_XXPTW_Ad._repeatCheckList.push(self._data.appid);
                        }
                    }
                    else {
                        if (null != self._XXPTW_Sprite_XXPTW_ && !self._XXPTW_Sprite_XXPTW_.destroy) {
                            self._XXPTW_Sprite_XXPTW_.visible = false;
                        }
                        if (onComplate) {
                            onComplate();
                        }
                    }
                }
            }
            else {
                self._XXPTW_Sprite_XXPTW_.visible = false;
                if (onComplate) {
                    onComplate();
                }
            }
        });
    };
    KRQ_XXPTW__Single_XXPTW_Ad.prototype._XXPTW_hide_XXPTW_ = function () {
        this._XXPTW_Sprite_XXPTW_.visible = false;
        this.clear_XXPTW_Repeat();
    };
    KRQ_XXPTW__Single_XXPTW_Ad.prototype.clear_XXPTW_Repeat = function () {
        if (null != this._data) {
            for (var i = 0; i < KRQ_XXPTW__Single_XXPTW_Ad._repeatCheckList.length; ++i) {
                var appid = KRQ_XXPTW__Single_XXPTW_Ad._repeatCheckList[i];
                if (appid == this._data.appid) {
                    KRQ_XXPTW__Single_XXPTW_Ad._repeatCheckList.splice(i, 1);
                    break;
                }
            }
        }
    };
    KRQ_XXPTW__Single_XXPTW_Ad.prototype.on_XXPTW_Click_XXPTW_Ad = function () {
        this.navigate_XXPTW_To_XXPTW_Mini_XXPTW_Program();
        this.ref_XXPTW_resh();
    };
    KRQ_XXPTW__Single_XXPTW_Ad.prototype.onDestroy = function () {
        this.clear_XXPTW_Repeat();
    };
    KRQ_XXPTW__Single_XXPTW_Ad._repeatCheckList = new Array();
    return KRQ_XXPTW__Single_XXPTW_Ad;
}(KRQ_ComBase_1.default));
exports.default = KRQ_XXPTW__Single_XXPTW_Ad;
},{"../../ShareAd/ShareAd":40,"./KRQ_ComBase":10}],20:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_ViewComBase_1 = require("./KRQ_ViewComBase");
var Utilit_1 = require("../../Utilit");
var KRQ_XXPTW__Export_XXPTW_ = /** @class */ (function (_super) {
    __extends(KRQ_XXPTW__Export_XXPTW_, _super);
    function KRQ_XXPTW__Export_XXPTW_() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.on_XXPTW_Continue_XXPTW_Btn_XXPTW_Click = null;
        _this._top_XXPTW_Zone_XXPTW_ = null;
        _this._back_XXPTW_Btn = null;
        _this._center_XXPTW_Zone = null;
        _this._continue_XXPTW_Btn = null;
        return _this;
    }
    Object.defineProperty(KRQ_XXPTW__Export_XXPTW_.prototype, "Back_XXPTW_Btn", {
        get: function () {
            if (null == this._back_XXPTW_Btn) {
                this._back_XXPTW_Btn = this._XXPTW_Sprite_XXPTW_.getChildByName("TopZone").getChildByName("BackBtn");
            }
            return this._back_XXPTW_Btn;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(KRQ_XXPTW__Export_XXPTW_.prototype, "Continue_XXPTW_Btn", {
        get: function () {
            if (null == this._continue_XXPTW_Btn) {
                this._continue_XXPTW_Btn = this._XXPTW_Sprite_XXPTW_.getChildByName("CenterZone").getChildByName("ContinueBtn");
            }
            return this._continue_XXPTW_Btn;
        },
        enumerable: true,
        configurable: true
    });
    KRQ_XXPTW__Export_XXPTW_.prototype.onAwake = function () {
        this._top_XXPTW_Zone_XXPTW_ = this._XXPTW_Sprite_XXPTW_.getChildByName("TopZone");
        if (Utilit_1.default.is_XXPTW_IphoneX()) {
            this._top_XXPTW_Zone_XXPTW_.top = this._top_XXPTW_Zone_XXPTW_.top + 75;
        }
        this._back_XXPTW_Btn = this._top_XXPTW_Zone_XXPTW_.getChildByName("BackBtn");
        this._center_XXPTW_Zone = this._XXPTW_Sprite_XXPTW_.getChildByName("CenterZone");
        if (Utilit_1.default.is_XXPTW_IphoneX()) {
            this._center_XXPTW_Zone.top = this._center_XXPTW_Zone.top + 75;
        }
        this._continue_XXPTW_Btn = this._center_XXPTW_Zone.getChildByName("ContinueBtn");
    };
    KRQ_XXPTW__Export_XXPTW_.prototype.onEnable = function () {
        this._back_XXPTW_Btn.on(Laya.Event.CLICK, this, this.on_XXPTW_Back_XXPTW_Btn);
        this._continue_XXPTW_Btn.on(Laya.Event.CLICK, this, this.on_XXPTW_Continue_XXPTW_Btn);
    };
    KRQ_XXPTW__Export_XXPTW_.prototype.onDisable = function () {
        this._back_XXPTW_Btn.off(Laya.Event.CLICK, this, this.on_XXPTW_Back_XXPTW_Btn);
        this._continue_XXPTW_Btn.off(Laya.Event.CLICK, this, this.on_XXPTW_Continue_XXPTW_Btn);
    };
    KRQ_XXPTW__Export_XXPTW_.prototype.on_XXPTW_Back_XXPTW_Btn = function () {
        this._XXPTW_hide_XXPTW_();
    };
    KRQ_XXPTW__Export_XXPTW_.prototype.on_XXPTW_Continue_XXPTW_Btn = function () {
        if (null != this.on_XXPTW_Continue_XXPTW_Btn_XXPTW_Click) {
            this.on_XXPTW_Continue_XXPTW_Btn_XXPTW_Click();
        }
    };
    return KRQ_XXPTW__Export_XXPTW_;
}(KRQ_ViewComBase_1.default));
exports.default = KRQ_XXPTW__Export_XXPTW_;
},{"../../Utilit":46,"./KRQ_ViewComBase":25}],21:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_ViewComBase_1 = require("./KRQ_ViewComBase");
var KRQ_RockSingleAd_1 = require("../Com/KRQ_RockSingleAd");
var KRQ_XXPTW__Floating_XXPTW_ = /** @class */ (function (_super) {
    __extends(KRQ_XXPTW__Floating_XXPTW_, _super);
    function KRQ_XXPTW__Floating_XXPTW_() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._center_XXPTW_Zone = null;
        _this._rock_XXPTW_Single_XXPTW_Ads = new Array();
        _this._ani_XXPTW_Spaceing = 3000;
        return _this;
    }
    KRQ_XXPTW__Floating_XXPTW_.prototype.onAwake = function () {
        this._center_XXPTW_Zone = this._XXPTW_Sprite_XXPTW_.getChildByName("CenterZone");
        for (var i = 0; i < this._center_XXPTW_Zone.numChildren; ++i) {
            var child = this._center_XXPTW_Zone.getChildAt(i);
            if (child.visible) {
                var rockAd = child.getComponent(KRQ_RockSingleAd_1.default);
                this._rock_XXPTW_Single_XXPTW_Ads.push(rockAd);
            }
        }
    };
    KRQ_XXPTW__Floating_XXPTW_.prototype.onStart = function () {
        var self = this;
        self.play_XXPTW_Ani();
        Laya.timer.loop(this._rock_XXPTW_Single_XXPTW_Ads.length * (this._ani_XXPTW_Spaceing + 500), this, function () {
            self.play_XXPTW_Ani(function () {
                self.refresh_XXPTW_Ad();
            });
        });
    };
    KRQ_XXPTW__Floating_XXPTW_.prototype.refresh_XXPTW_Ad = function () {
        for (var i = 0; i < this._rock_XXPTW_Single_XXPTW_Ads.length; ++i) {
            var ad = this._rock_XXPTW_Single_XXPTW_Ads[i];
            if (null == ad._XXPTW_Data_XXPTW_) {
                ad._XXPTW_Sprite_XXPTW_.visible = false;
            }
            ad.ref_XXPTW_resh();
        }
    };
    KRQ_XXPTW__Floating_XXPTW_.prototype.play_XXPTW_Ani = function (onComplate) {
        var len = this._rock_XXPTW_Single_XXPTW_Ads.length;
        var _loop_1 = function (i) {
            var index = i;
            var ad = this_1._rock_XXPTW_Single_XXPTW_Ads[index];
            Laya.timer.once(this_1._ani_XXPTW_Spaceing * i, ad, function () {
                if (index == len - 1) {
                    ad.play_XXPTW_Ani(onComplate);
                }
                else {
                    ad.play_XXPTW_Ani();
                }
            });
        };
        var this_1 = this;
        for (var i = 0; i < this._rock_XXPTW_Single_XXPTW_Ads.length; ++i) {
            _loop_1(i);
        }
    };
    return KRQ_XXPTW__Floating_XXPTW_;
}(KRQ_ViewComBase_1.default));
exports.default = KRQ_XXPTW__Floating_XXPTW_;
},{"../Com/KRQ_RockSingleAd":17,"./KRQ_ViewComBase":25}],22:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_ViewComBase_1 = require("./KRQ_ViewComBase");
var KRQ_RollSingleAd_1 = require("../Com/KRQ_RollSingleAd");
var KRQ_XXPTW__Game_XXPTW_Over = /** @class */ (function (_super) {
    __extends(KRQ_XXPTW__Game_XXPTW_Over, _super);
    function KRQ_XXPTW__Game_XXPTW_Over() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._center_XXPTW_Zone = null;
        _this._roll_XXPTW_SingleAd_XXPTW_s = new Array();
        return _this;
    }
    KRQ_XXPTW__Game_XXPTW_Over.prototype.onAwake = function () {
        this._center_XXPTW_Zone = this._XXPTW_Sprite_XXPTW_.getChildByName("CenterZone");
        for (var i = 0; i < this._center_XXPTW_Zone.numChildren; ++i) {
            var ad = this._center_XXPTW_Zone.getChildAt(i).getComponent(KRQ_RollSingleAd_1.default);
            this._roll_XXPTW_SingleAd_XXPTW_s.push(ad);
        }
    };
    KRQ_XXPTW__Game_XXPTW_Over.prototype.onStart = function () {
        var _loop_1 = function (i) {
            var ad = this_1._roll_XXPTW_SingleAd_XXPTW_s[i];
            Laya.timer.once((this_1._roll_XXPTW_SingleAd_XXPTW_s.length - i) * 150, this_1, function () {
                ad.play_XXPTW_Ani();
            });
        };
        var this_1 = this;
        for (var i = 0; i < this._roll_XXPTW_SingleAd_XXPTW_s.length; ++i) {
            _loop_1(i);
        }
    };
    return KRQ_XXPTW__Game_XXPTW_Over;
}(KRQ_ViewComBase_1.default));
exports.default = KRQ_XXPTW__Game_XXPTW_Over;
},{"../Com/KRQ_RollSingleAd":18,"./KRQ_ViewComBase":25}],23:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_Banner_1 = require("../Com/KRQ_Banner");
var KRQ_ViewComBase_1 = require("./KRQ_ViewComBase");
var KRQ_History_1 = require("../Com/KRQ_History/KRQ_History");
var KRQ_HLoopAd_1 = require("../Com/KRQ_LoopAd/KRQ_HLoopAd");
var Utilit_1 = require("../../Utilit");
var KRQ_Main_XXPTW_State;
(function (KRQ_Main_XXPTW_State) {
    KRQ_Main_XXPTW_State[KRQ_Main_XXPTW_State["_XXPTW_Normal_XXPTW_"] = 0] = "_XXPTW_Normal_XXPTW_";
    KRQ_Main_XXPTW_State[KRQ_Main_XXPTW_State["_XXPTW_NoLoopAd_XXPTW_"] = 1] = "_XXPTW_NoLoopAd_XXPTW_";
    KRQ_Main_XXPTW_State[KRQ_Main_XXPTW_State["_XXPTW_NoBannerAd_XXPTW_"] = 2] = "_XXPTW_NoBannerAd_XXPTW_";
})(KRQ_Main_XXPTW_State = exports.KRQ_Main_XXPTW_State || (exports.KRQ_Main_XXPTW_State = {}));
var KRQ_XXPTW__Main_XXPTW_ = /** @class */ (function (_super) {
    __extends(KRQ_XXPTW__Main_XXPTW_, _super);
    function KRQ_XXPTW__Main_XXPTW_() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._top_XXPTW_Zone = null;
        _this._history_XXPTW_Btn = null;
        _this._krq_XXPTW_Loop_XXPTW_Ad = null;
        _this._bottom_XXPTW_Zone = null;
        _this._krq_XXPTW_Banner = null;
        _this._krq_XXPTW_History = null;
        return _this;
    }
    KRQ_XXPTW__Main_XXPTW_.prototype.onAwake = function () {
        this._top_XXPTW_Zone = this._XXPTW_Sprite_XXPTW_.getChildByName("TopZone");
        this._history_XXPTW_Btn = this._top_XXPTW_Zone.getChildByName("HistoryBtn");
        this._history_XXPTW_Btn.visible = false;
        if (Utilit_1.default.is_XXPTW_IphoneX()) {
            this._top_XXPTW_Zone.top = this._top_XXPTW_Zone.top + 75;
        }
        this._krq_XXPTW_Loop_XXPTW_Ad = this._XXPTW_Sprite_XXPTW_.getChildByName("KRQ_HLoopAd").getComponent(KRQ_HLoopAd_1.default);
        this._krq_XXPTW_Banner = this._XXPTW_Sprite_XXPTW_.getChildByName("KRQ_Banner").getComponent(KRQ_Banner_1.default);
        this._krq_XXPTW_History = this._XXPTW_Sprite_XXPTW_.getChildByName("KRQ_History").getComponent(KRQ_History_1.default);
        var self = this;
        var aspectRatio = Laya.stage.width / Laya.stage.height;
        this._krq_XXPTW_History.On_XXPTW_Back_XXPTW_Btn_XXPTW_Click = function () {
            if (aspectRatio < 0.5) {
                self._krq_XXPTW_Banner._XXPTW_show_XXPTW_();
            }
        };
        this._krq_XXPTW_Loop_XXPTW_Ad._XXPTW_Sprite_XXPTW_.visible = false;
        if (aspectRatio < 0.5) {
            this._krq_XXPTW_Loop_XXPTW_Ad._XXPTW_Clip_XXPTW_.top = 100;
            if (Utilit_1.default.is_XXPTW_IphoneX()) {
                this._krq_XXPTW_Loop_XXPTW_Ad._XXPTW_Clip_XXPTW_.top = this._krq_XXPTW_Loop_XXPTW_Ad._XXPTW_Clip_XXPTW_.top + 75;
            }
            this._krq_XXPTW_Banner._XXPTW_Sprite_XXPTW_.visible = true;
        }
        else {
            this._krq_XXPTW_Loop_XXPTW_Ad._XXPTW_Clip_XXPTW_.top = Laya.stage.height - 280;
            this._krq_XXPTW_Banner._XXPTW_Sprite_XXPTW_.visible = false;
        }
    };
    KRQ_XXPTW__Main_XXPTW_.prototype.switchState = function (state) {
        if (state == KRQ_Main_XXPTW_State._XXPTW_Normal_XXPTW_) {
            var aspectRatio = Laya.stage.width / Laya.stage.height;
            if (aspectRatio < 0.5) {
                this._krq_XXPTW_Loop_XXPTW_Ad._XXPTW_Clip_XXPTW_.top = 100;
                if (Utilit_1.default.is_XXPTW_IphoneX()) {
                    this._krq_XXPTW_Loop_XXPTW_Ad._XXPTW_Clip_XXPTW_.top = this._krq_XXPTW_Loop_XXPTW_Ad._XXPTW_Clip_XXPTW_.top + 75;
                }
                this._krq_XXPTW_Banner._XXPTW_Sprite_XXPTW_.visible = true;
            }
            else {
                this._krq_XXPTW_Loop_XXPTW_Ad._XXPTW_Clip_XXPTW_.top = Laya.stage.height - 280;
                this._krq_XXPTW_Banner._XXPTW_Sprite_XXPTW_.visible = false;
            }
        }
        else if (state == KRQ_Main_XXPTW_State._XXPTW_NoLoopAd_XXPTW_) {
            this._krq_XXPTW_Loop_XXPTW_Ad.isEnable = false;
            this._krq_XXPTW_Loop_XXPTW_Ad._XXPTW_Sprite_XXPTW_.visible = false;
            this._krq_XXPTW_Banner._XXPTW_Sprite_XXPTW_.visible = true;
        }
        else if (state == KRQ_Main_XXPTW_State._XXPTW_NoBannerAd_XXPTW_) {
            this._krq_XXPTW_Loop_XXPTW_Ad._XXPTW_Clip_XXPTW_.top = Laya.stage.height - 280;
            this._krq_XXPTW_Banner.Ad_XXPTW_Pos_XXPTW_ID = -1;
            this._krq_XXPTW_Banner._XXPTW_Sprite_XXPTW_.visible = false;
        }
    };
    KRQ_XXPTW__Main_XXPTW_.prototype.onEnable = function () {
        this._history_XXPTW_Btn.on(Laya.Event.CLICK, this, this.on_XXPTW_History_XXPTW_Btn);
    };
    KRQ_XXPTW__Main_XXPTW_.prototype.onDisable = function () {
        this._history_XXPTW_Btn.off(Laya.Event.CLICK, this, this.on_XXPTW_History_XXPTW_Btn);
    };
    KRQ_XXPTW__Main_XXPTW_.prototype.on_XXPTW_History_XXPTW_Btn = function () {
        this._krq_XXPTW_History._XXPTW_show_XXPTW_();
        this._krq_XXPTW_Banner._XXPTW_hide_XXPTW_();
    };
    return KRQ_XXPTW__Main_XXPTW_;
}(KRQ_ViewComBase_1.default));
exports.default = KRQ_XXPTW__Main_XXPTW_;
},{"../../Utilit":46,"../Com/KRQ_Banner":9,"../Com/KRQ_History/KRQ_History":12,"../Com/KRQ_LoopAd/KRQ_HLoopAd":14,"./KRQ_ViewComBase":25}],24:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_ViewComBase_1 = require("./KRQ_ViewComBase");
var KRQ_VLoopAd_1 = require("../Com/KRQ_LoopAd/KRQ_VLoopAd");
var KRQ_XXPTW__Side_XXPTW_Pull = /** @class */ (function (_super) {
    __extends(KRQ_XXPTW__Side_XXPTW_Pull, _super);
    function KRQ_XXPTW__Side_XXPTW_Pull() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._krq_XXPTW_VLoopAd = null;
        _this._pull_XXPTW_Btn = null;
        return _this;
    }
    KRQ_XXPTW__Side_XXPTW_Pull.prototype.onAwake = function () {
        this._krq_XXPTW_VLoopAd = this._XXPTW_Sprite_XXPTW_.getChildByName("KRQ_VLoopAd").getComponent(KRQ_VLoopAd_1.default);
        this._pull_XXPTW_Btn = this._krq_XXPTW_VLoopAd._XXPTW_Sprite_XXPTW_.getChildByName("PullBtn");
        this._krq_XXPTW_VLoopAd._XXPTW_Sprite_XXPTW_.x = -this._krq_XXPTW_VLoopAd._XXPTW_Sprite_XXPTW_.width;
    };
    KRQ_XXPTW__Side_XXPTW_Pull.prototype.onEnable = function () {
        this._pull_XXPTW_Btn.on(Laya.Event.CLICK, this, this.onPull_XXPTW_Btn);
    };
    KRQ_XXPTW__Side_XXPTW_Pull.prototype.onDisable = function () {
        this._pull_XXPTW_Btn.off(Laya.Event.CLICK, this, this.onPull_XXPTW_Btn);
    };
    KRQ_XXPTW__Side_XXPTW_Pull.prototype.onPull_XXPTW_Btn = function () {
        if (this._krq_XXPTW_VLoopAd._XXPTW_Sprite_XXPTW_.x < 0) {
            this._XXPTW_pull_XXPTW_();
        }
        else {
            this._XXPTW_push_XXPTW_();
        }
    };
    KRQ_XXPTW__Side_XXPTW_Pull.prototype._XXPTW_pull_XXPTW_ = function () {
        Laya.Tween.to(this._krq_XXPTW_VLoopAd._XXPTW_Sprite_XXPTW_, {
            x: 0
        }, 200, Laya.Ease.linearNone, null, 0, true);
    };
    KRQ_XXPTW__Side_XXPTW_Pull.prototype._XXPTW_push_XXPTW_ = function () {
        Laya.Tween.to(this._krq_XXPTW_VLoopAd._XXPTW_Sprite_XXPTW_, {
            x: -this._krq_XXPTW_VLoopAd._XXPTW_Sprite_XXPTW_.width
        }, 200, Laya.Ease.linearNone, null, 0, true);
    };
    KRQ_XXPTW__Side_XXPTW_Pull.prototype.on_XXPTW_ShareAd_XXPTW_Fail = function () {
        this._XXPTW_pull_XXPTW_();
    };
    return KRQ_XXPTW__Side_XXPTW_Pull;
}(KRQ_ViewComBase_1.default));
exports.default = KRQ_XXPTW__Side_XXPTW_Pull;
},{"../Com/KRQ_LoopAd/KRQ_VLoopAd":16,"./KRQ_ViewComBase":25}],25:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ__XXPTW_View_XXPTW_Com_XXPTW_Base = /** @class */ (function (_super) {
    __extends(KRQ__XXPTW_View_XXPTW_Com_XXPTW_Base, _super);
    function KRQ__XXPTW_View_XXPTW_Com_XXPTW_Base() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.on_XXPTW_Show = null;
        _this.on_XXPTW_Hide = null;
        return _this;
    }
    Object.defineProperty(KRQ__XXPTW_View_XXPTW_Com_XXPTW_Base.prototype, "_XXPTW_Sprite_XXPTW_", {
        get: function () {
            return this.owner;
        },
        enumerable: true,
        configurable: true
    });
    KRQ__XXPTW_View_XXPTW_Com_XXPTW_Base.prototype._XXPTW_show_XXPTW_ = function () {
        this._XXPTW_Sprite_XXPTW_.visible = true;
        if (null != this.on_XXPTW_Show) {
            this.on_XXPTW_Show();
        }
    };
    KRQ__XXPTW_View_XXPTW_Com_XXPTW_Base.prototype._XXPTW_hide_XXPTW_ = function () {
        this._XXPTW_Sprite_XXPTW_.visible = false;
        if (null != this.on_XXPTW_Hide) {
            this.on_XXPTW_Hide();
        }
    };
    return KRQ__XXPTW_View_XXPTW_Com_XXPTW_Base;
}(Laya.Script));
exports.default = KRQ__XXPTW_View_XXPTW_Com_XXPTW_Base;
},{}],26:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var HttpUnit_1 = require("../Net/HttpUnit");
var AppConfig_1 = require("../AppConfig");
var WXAPI_1 = require("../WXAPI");
var User_1 = require("../User/User");
var OPPOAPI_1 = require("../OPPOAPI");
/**
 * 用于买量上报,以及停留时间上报的的类，本质上是对wx和买量接口做一个集成化的封装方便使用
 *
 * @export
 * @class MaiLiang
 */
var Mai_XXPTW_Liang = /** @class */ (function () {
    function Mai_XXPTW_Liang() {
    }
    /**
     * 发送数据的类
     *
     * @protected
     * @static
     * @param {request_XXPTW_Data} req
     * @memberof MaiLiang
     */
    Mai_XXPTW_Liang.req_XXPTW_uest = function (req) {
        if (req.url_XXPTW_.indexOf("https://") > -1 ||
            req.url_XXPTW_.indexOf("http://") > -1) {
            req.url_XXPTW_ = req.url_XXPTW_;
        }
        else {
            req.url_XXPTW_ = Mai_XXPTW_Liang._XXPTW_mainUr_XXPTW_l + req.url_XXPTW_;
        }
        var completeFunc = function (res) {
            console.log(res, "MaiLiang http Success");
            res = JSON.parse(res);
            if (res.Status == "200") {
                if (res.Result["OpenId"] != null && res.Result["OpenId"] != "") {
                    Mai_XXPTW_Liang.Mai_XXPTW_Liang_XXPTW_OpenId = res.Result["OpenId"];
                    Mai_XXPTW_Liang._XXPTW_time_XXPTW_ = req._XXPTW_data_XXPTW_.posttime;
                    console.log("获得买量系统OpenId " + Mai_XXPTW_Liang.Mai_XXPTW_Liang_XXPTW_OpenId);
                }
                else {
                    console.log("上报买量系统停留时间成功");
                }
                if (req.on_XXPTW_Success) {
                    req.on_XXPTW_Success(res);
                }
            }
            else {
                if (req.on_XXPTW_Fail) {
                    req.on_XXPTW_Fail(res);
                }
            }
            req.on_XXPTW_Success = null;
            req = null;
        };
        var errorFunc = function (res) {
            console.log(res, "MaiLiang http fail");
            if (req.on_XXPTW_Fail) {
                req.on_XXPTW_Fail(res);
            }
            req.on_XXPTW_Fail = null;
            req = null;
        };
        var xhr = new Laya.HttpRequest();
        xhr.once(Laya.Event.COMPLETE, Mai_XXPTW_Liang, completeFunc);
        xhr.once(Laya.Event.ERROR, Mai_XXPTW_Liang, errorFunc);
        if (req.meth_XXPTW_ == "get") {
            var para = "";
            for (var _i = 0, _a = Object.keys(req._XXPTW_data_XXPTW_); _i < _a.length; _i++) {
                var key = _a[_i];
                var value = req._XXPTW_data_XXPTW_[key];
                para += key + "=" + value + "&";
            }
            req.url_XXPTW_ = req.url_XXPTW_ + "?" + para;
            xhr.send(req.url_XXPTW_, null, req.meth_XXPTW_);
        }
        else {
            var para = "";
            for (var _b = 0, _c = Object.keys(req._XXPTW_data_XXPTW_); _b < _c.length; _b++) {
                var key = _c[_b];
                var value = req._XXPTW_data_XXPTW_[key];
                para += key + "=" + value + "&";
            }
            xhr.send(req.url_XXPTW_, para, req.meth_XXPTW_, null, ["Content-Type", "application/x-www-form-urlencoded"]);
        }
    };
    /**
     * 获得买量系统唯一标识ID,此ID的作用是用来上报游戏时间
     *
     * @param {Function} res
     * @memberof MaiLiang
     */
    Mai_XXPTW_Liang.Get_XXPTW_Mai_XXPTW_Liang_XXPTW_OpenId = function (onSuccess, onFail) {
        if (Laya.Browser.onMiniGame) {
            var option = WXAPI_1.default.get_XXPTW_Launch_XXPTW_Options_XXPTW_Sync();
            if (option != null) {
                var key = option.query["key"];
                if (key != null && key != "" && User_1.default.openId_XXPTW_ != "") {
                    Mai_XXPTW_Liang._XXPTW_key_XXPTW_ = key;
                    var req = new HttpUnit_1.request_XXPTW_Data();
                    req.url_XXPTW_ = Mai_XXPTW_Liang.u_XXPTW_click;
                    req.on_XXPTW_Success = onSuccess;
                    req.on_XXPTW_Fail = onFail;
                    req._XXPTW_data_XXPTW_.appid = AppConfig_1.default.App_XXPTW_ID;
                    req._XXPTW_data_XXPTW_.openid = "";
                    var time = new Date().getTime() / 1000;
                    req._XXPTW_data_XXPTW_.posttime = time;
                    req._XXPTW_data_XXPTW_.auth = 0;
                    req._XXPTW_data_XXPTW_.key = key;
                    req._XXPTW_data_XXPTW_.wxopenid = User_1.default.openId_XXPTW_;
                    req.meth_XXPTW_ = "POST";
                    console.log("发送买量数据接口");
                    Mai_XXPTW_Liang.req_XXPTW_uest(req);
                }
            }
            else {
                console.log("上报买量数据失败");
                onFail(null);
            }
        }
        else if (Laya.Browser.onQGMiniGame) {
            var option = OPPOAPI_1.default.get_XXPTW_LaunchOpt_XXPTW_ionsSync();
            HttpUnit_1.default.report_XXPTW_Import(option.referrerInfo.package, option.referrerInfo.extraData.appid, function (result) {
                if (1 == result.code) {
                    console.log("OPPO 上报买量数据成功");
                }
                else {
                    console.log("OPPO 上报买量数据失败", result.msg);
                }
            }, function (result) {
                console.log("OPPO 上报买量数据失败");
                for (var key in result) {
                    console.log(key, result[key]);
                }
            });
        }
        else {
            console.log("不在微信模式下调用，默认上报买量数据失败");
            onFail(null);
        }
    };
    /**
     * 上报买量接口停留时间
     *
        appid －主体小程序appid
        openid －买量系统唯一标识（不可空）
        posttime － 请求时间刻度（精确到秒）
        time － 停留时长（精确到秒）
     * @static
     * @memberof MaiLiang
     */
    Mai_XXPTW_Liang.Report_XXPTW_Stay_XXPTW_Time = function (onSuccess, onFail) {
        if (Laya.Browser.onMiniGame) {
            if (Mai_XXPTW_Liang.Mai_XXPTW_Liang_XXPTW_OpenId != "") {
                var req = new HttpUnit_1.request_XXPTW_Data();
                req.url_XXPTW_ = Mai_XXPTW_Liang._XXPTW_stay_XXPTW_;
                req.on_XXPTW_Success = onSuccess;
                req.on_XXPTW_Fail = onFail;
                req._XXPTW_data_XXPTW_.appid = AppConfig_1.default.App_XXPTW_ID;
                req._XXPTW_data_XXPTW_.openid = Mai_XXPTW_Liang.Mai_XXPTW_Liang_XXPTW_OpenId;
                var time = new Date().getTime() / 1000;
                req._XXPTW_data_XXPTW_.posttime = time;
                var staytime = Mai_XXPTW_Liang._XXPTW_time_XXPTW_ != 0 ? time - Mai_XXPTW_Liang._XXPTW_time_XXPTW_ : 0;
                req._XXPTW_data_XXPTW_.time = staytime;
                req.meth_XXPTW_ = "POST";
                console.log("发送停留时间至买量接口");
                Mai_XXPTW_Liang.req_XXPTW_uest(req);
            }
        }
        else {
            console.log("不在微信模式下调用，默认发送停留时间至买量接口失败");
            onFail(null);
        }
    };
    Mai_XXPTW_Liang._XXPTW_mainUr_XXPTW_l = "https://swtj.mrkzx.cn";
    Mai_XXPTW_Liang.u_XXPTW_click = "/v1.1/api/Activity/uclick.html";
    Mai_XXPTW_Liang._XXPTW_stay_XXPTW_ = "/v1.1/api/Activity/stay.html";
    Mai_XXPTW_Liang._XXPTW_key_XXPTW_ = ""; //推广路径中同名参数，需要调用方法WXAPi.getLaunchOptionsSync()，从返回的参数中获得。
    Mai_XXPTW_Liang.Mai_XXPTW_Liang_XXPTW_OpenId = ""; //买量系统唯一标识,执行GetMaiLiangOpenId()方法成功后自动获得。
    Mai_XXPTW_Liang._XXPTW_time_XXPTW_ = 0; //买量系统唯一标识后，记录当前时间（精确到秒）。
    return Mai_XXPTW_Liang;
}());
exports.default = Mai_XXPTW_Liang;
},{"../AppConfig":2,"../Net/HttpUnit":35,"../OPPOAPI":38,"../User/User":45,"../WXAPI":78}],27:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var User_1 = require("./User/User");
var layaMaxUI_1 = require("./ui/layaMaxUI");
var LoadingView_1 = require("./View/LoadingView/LoadingView");
var HttpUnit_1 = require("./Net/HttpUnit");
var WXAPI_1 = require("./WXAPI");
var AppConfig_1 = require("./AppConfig");
var EventMgr_1 = require("./Event/EventMgr");
var EventDef_1 = require("./Event/EventDef");
var OPPOAPI_1 = require("./OPPOAPI");
var QQMiniGameAPI_1 = require("./QQMiniGameAPI");
var TTAPI_1 = require("./TTAPI");
var ALD_1 = require("./ALD");
var Main = /** @class */ (function () {
    function Main() {
        this._loadingUI = null;
        this._loadingView = null;
        //预加载列表
        this._preLoadRes = new Array();
        Config.isAntialias = true;
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        if (true == AppConfig_1.default.onTTMiniGame) {
            Laya.Browser.onMiniGame = false;
        }
        if (!Laya.Browser.onMiniGame
            && !Laya.Browser.onQGMiniGame
            && !Laya.Browser.onQQMiniGame
            && !AppConfig_1.default.onTTMiniGame) //如果不是小游戏，资源服务器设置为本地测试地址
         {
            AppConfig_1.default.Res_XXPTW_Server = AppConfig_1.default.Local_XXPTW_Test_XXPTW_ReServer;
        }
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        Laya.loader.maxLoader = 50;
        this.initLoadingView();
        //加载重要配置，这些配置必须在游戏启动前加载完成
        var firstConfigs = [
            { url: AppConfig_1.default.Res_XXPTW_Server + "/json/appswitch.json", type: Laya.Loader.JSON }
        ];
        var self = this;
        Laya.loader.load(firstConfigs, Laya.Handler.create(this, function () {
            self.loadRes(); //加载资源
        }));
        EventMgr_1.default.ins_XXPTW_tance.reg_XXPTW_OnceEvent(EventDef_1.Event_XXPTW_Def.App_Close_XXPTW_First_XXPTW_Loading_XXPTW_View, this, this.closeloadingUI);
    };
    Main.prototype.initLoadingView = function () {
        this._loadingUI = new layaMaxUI_1.ui.View.LoadingUI();
        Laya.stage.addChild(this._loadingUI);
        this._loadingUI.width = Laya.stage.width;
        this._loadingUI.height = Laya.stage.height;
        this._loadingView = this._loadingUI.getComponent(LoadingView_1.default);
        this._loadingView.set_XXPTW_Process(0);
    };
    Main.prototype.postResToOpenDataContext = function (onComplate) {
        if (Laya.Browser.onMiniGame) {
            console.log("开始透传资源数据到开放域");
            Laya.loader.load([
                "openRes/Rank.atlas",
            ], Laya.Handler.create(null, function () {
                Laya.MiniAdpter.sendAtlasToOpenDataContext("openRes/Rank.atlas");
                console.log("透传资源数据到开放域  完毕！！！");
                if (onComplate) {
                    onComplate();
                }
            }));
        }
        else {
            if (onComplate) {
                onComplate();
            }
        }
    };
    Main.prototype.preLoad = function () {
        //这里添加你需要预加载的资源
        //this._preLoadRes.push({ url: AppConfig.ResServer + "/json/example.json", type: Laya.Loader.JSON });
    };
    Main.prototype.loadRes = function () {
        var _this = this;
        this.preLoad();
        var resource = this._preLoadRes;
        var self = this;
        if (Laya.Browser.onMiniGame) {
            //开始加载分包
            var loadSubResTask = Laya.Browser.window["wx"].loadSubpackage({
                name: 'subRes',
                success: function (res) {
                    // 分包加载成功,开始预加载资源
                    if (resource.length > 0) {
                        Laya.loader.load(resource, Laya.Handler.create(_this, function () {
                            self.onLoadResComplate(); //预加载完成
                        }), Laya.Handler.create(_this, function (res) {
                            //todo:跟新进度条
                            self._loadingView.set_XXPTW_Process(res / 2 + 0.5);
                        }));
                    }
                    else {
                        self.onLoadResComplate(); //预加载完成
                    }
                },
                fail: function (res) {
                    _this.loadRes(); //加载失败，重新加载
                }
            });
            loadSubResTask.onProgressUpdate(function (res) {
                self._loadingView.set_XXPTW_Process(res / 2);
            });
        }
        else if (Laya.Browser.onQGMiniGame) //oppo小游戏
         {
            //开始加载分包
            var loadSubResTask = Laya.Browser.window["qg"].loadSubpackage({
                name: 'subRes',
                success: function (res) {
                    // 分包加载成功,开始预加载资源
                    if (resource.length > 0) {
                        Laya.loader.load(resource, Laya.Handler.create(_this, function () {
                            self.onLoadResComplate(); //预加载完成
                        }), Laya.Handler.create(_this, function (res) {
                            //todo:跟新进度条
                            self._loadingView.set_XXPTW_Process(res / 2 + 0.5);
                        }));
                    }
                    else {
                        self.onLoadResComplate(); //预加载完成
                    }
                },
                fail: function (res) {
                    _this.loadRes(); //加载失败，重新加载
                }
            });
            loadSubResTask.onProgressUpdate(function (res) {
                // 加载进度百分比
                var progress = res["progress"];
                // 下载数据
                var totalBytesWritten = res["totalBytesWritten"];
                // 总长度
                var totalBytesExpectedToWrite = res["totalBytesExpectedToWrite"];
                self._loadingView.set_XXPTW_Process(progress / 2);
            });
        }
        else if (Laya.Browser.onQQMiniGame) {
            //开始加载分包
            var loadSubResTask = Laya.Browser.window["qq"].loadSubpackage({
                name: 'subRes',
                success: function (res) {
                    // 分包加载成功,开始预加载资源
                    if (resource.length > 0) {
                        Laya.loader.load(resource, Laya.Handler.create(_this, function () {
                            self.onLoadResComplate(); //预加载完成
                        }), Laya.Handler.create(_this, function (res) {
                            //todo:跟新进度条
                            self._loadingView.set_XXPTW_Process(res / 2 + 0.5);
                        }));
                    }
                    else {
                        self.onLoadResComplate(); //预加载完成
                    }
                },
                fail: function (res) {
                    _this.loadRes(); //加载失败，重新加载
                }
            });
            loadSubResTask.onProgressUpdate(function (res) {
                self._loadingView.set_XXPTW_Process(res / 2);
            });
        }
        else { //字节跳动没有分包
            if (resource.length > 0) {
                Laya.loader.load(resource, Laya.Handler.create(this, function () {
                    self.onLoadResComplate();
                }), Laya.Handler.create(this, function (res) {
                    self._loadingView.set_XXPTW_Process(res);
                }));
            }
            else {
                self.onLoadResComplate();
            }
        }
    };
    Main.prototype.onLoadResComplate = function () {
        var _this = this;
        var self = this;
        this._loadingView.set_XXPTW_Process(1);
        if (Laya.Browser.onMiniGame) {
            WXAPI_1.default._XXPTW_wxLogin_XXPTW_(function (code) {
                var _this = this;
                User_1.default.code_XXPTW_ = code;
                HttpUnit_1.default.login_XXPTW_(function (res) {
                    if (res.code == 1) {
                        console.log("登陆成功！！！");
                        User_1.default._XXPTW_token = res.data.token;
                        User_1.default.openId_XXPTW_ = res.data.openid;
                        ALD_1.default.ald_XXPTW_Send_XXPTW_OpenId(User_1.default.openId_XXPTW_);
                        HttpUnit_1.default.get_XXPTW_Game_XXPTW_Data(function (res) {
                            console.log("获取用户数据成功！！！");
                            if (1 == res.code) {
                                User_1.default.initi_XXPTW_User(res.data);
                            }
                            else {
                                User_1.default.initi_XXPTW_User(null);
                            }
                            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                            }));
                        }, function (res) {
                            console.log("获取用户数据失败！！！");
                            User_1.default._XXPTW_token = "";
                            User_1.default.openId_XXPTW_ = "";
                            User_1.default.initi_XXPTW_User(null);
                            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                            }));
                        });
                    }
                    else {
                        console.log("登陆失败！！！" + res);
                        User_1.default.initi_XXPTW_User(null);
                        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                        }));
                    }
                }, function (res) {
                    console.log("登陆失败！！！" + res);
                    User_1.default.initi_XXPTW_User(null);
                    GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                    }));
                });
            }, null);
        }
        else if (Laya.Browser.onQGMiniGame) //oppo小游戏
         {
            OPPOAPI_1.default.init_XXPTW_AdService(function () {
            }, function () {
            }, function () {
            });
            OPPOAPI_1.default._XXPTW_Login_XXPTW_(function (token) {
                var _this = this;
                User_1.default.code_XXPTW_ = token;
                HttpUnit_1.default.login_XXPTW_(function (res) {
                    if (res.code == 1) {
                        console.log("登陆成功！！！");
                        User_1.default._XXPTW_token = res.data.token;
                        User_1.default.openId_XXPTW_ = res.data.openid;
                        HttpUnit_1.default.get_XXPTW_Game_XXPTW_Data(function (res) {
                            console.log("获取用户数据成功！！！");
                            if (1 == res.code) {
                                User_1.default.initi_XXPTW_User(res.data);
                                console.log("获取用户数据--------------------Start");
                                for (var key in res.data) {
                                    console.log(key, res.data[key]);
                                }
                                console.log("获取用户数据--------------------End");
                            }
                            else {
                                User_1.default.initi_XXPTW_User(null);
                            }
                            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                            }));
                        }, function (res) {
                            console.log("获取用户数据失败！！！");
                            User_1.default._XXPTW_token = "";
                            User_1.default.openId_XXPTW_ = "";
                            User_1.default.initi_XXPTW_User(null);
                            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                            }));
                        });
                    }
                    else {
                        console.log("登陆失败！！！", res);
                        User_1.default.initi_XXPTW_User(null);
                        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                        }));
                    }
                }, function (res) {
                    console.log("登陆失败！！！", res);
                    User_1.default.initi_XXPTW_User(null);
                    GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                    }));
                });
            }, null);
        }
        else if (Laya.Browser.onQQMiniGame) //qq小游戏
         {
            QQMiniGameAPI_1.default._XXPTW_Login_XXPTW_(function (code) {
                var _this = this;
                User_1.default.code_XXPTW_ = code;
                HttpUnit_1.default.login_XXPTW_(function (res) {
                    if (res.code == 1) {
                        console.log("登陆成功！！！");
                        User_1.default._XXPTW_token = res.data.token;
                        User_1.default.openId_XXPTW_ = res.data.openid;
                        ALD_1.default.ald_XXPTW_Send_XXPTW_OpenId(User_1.default.openId_XXPTW_);
                        HttpUnit_1.default.get_XXPTW_Game_XXPTW_Data(function (res) {
                            console.log("获取用户数据成功！！！");
                            if (1 == res.code) {
                                User_1.default.initi_XXPTW_User(res.data);
                            }
                            else {
                                User_1.default.initi_XXPTW_User(null);
                            }
                            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                            }));
                        }, function (res) {
                            console.log("获取用户数据失败！！！");
                            User_1.default._XXPTW_token = "";
                            User_1.default.openId_XXPTW_ = "";
                            User_1.default.initi_XXPTW_User(null);
                            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                            }));
                        });
                    }
                    else {
                        console.log("登陆失败！！！" + res);
                        User_1.default.initi_XXPTW_User(null);
                        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                        }));
                    }
                }, function (res) {
                    console.log("登陆失败！！！" + res);
                    User_1.default.initi_XXPTW_User(null);
                    GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                    }));
                });
            }, null);
        }
        else if (AppConfig_1.default.onTTMiniGame) //头条，字节跳动
         {
            TTAPI_1.default._XXPTW_ttLogin_XXPTW_(function (code) {
                var _this = this;
                User_1.default.code_XXPTW_ = code;
                HttpUnit_1.default.login_XXPTW_(function (res) {
                    if (res.code == 1) {
                        console.log("登陆成功！！！");
                        User_1.default._XXPTW_token = res.data.token;
                        User_1.default.openId_XXPTW_ = res.data.openid;
                        HttpUnit_1.default.get_XXPTW_Game_XXPTW_Data(function (res) {
                            console.log("获取用户数据成功！！！");
                            if (1 == res.code) {
                                User_1.default.initi_XXPTW_User(res.data);
                            }
                            else {
                                User_1.default.initi_XXPTW_User(null);
                            }
                            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                            }));
                        }, function (res) {
                            console.log("获取用户数据失败！！！");
                            User_1.default._XXPTW_token = "";
                            User_1.default.openId_XXPTW_ = "";
                            User_1.default.initi_XXPTW_User(null);
                            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                            }));
                        });
                    }
                    else {
                        console.log("登陆失败！！！" + res);
                        User_1.default.initi_XXPTW_User(null);
                        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                        }));
                    }
                }, function (res) {
                    console.log("登陆失败！！！" + res);
                    User_1.default.initi_XXPTW_User(null);
                    GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                    }));
                });
            }, function () {
                User_1.default.initi_XXPTW_User(null);
                GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                }));
            });
        }
        else {
            User_1.default.test_XXPTW_InitUser(); //测试
            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(this, function () {
            }));
        }
    };
    Main.prototype.closeloadingUI = function () {
        if (this._loadingUI && !this._loadingUI.destroyed) {
            this._loadingUI.destroy();
        }
    };
    return Main;
}());
//激活启动类
new Main();
},{"./ALD":1,"./AppConfig":2,"./Event/EventDef":6,"./Event/EventMgr":7,"./GameConfig":8,"./Net/HttpUnit":35,"./OPPOAPI":38,"./QQMiniGameAPI":39,"./TTAPI":44,"./User/User":45,"./View/LoadingView/LoadingView":51,"./WXAPI":78,"./ui/layaMaxUI":92}],28:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewMgr_1 = require("./ViewMgr");
var User_1 = require("../User/User");
var HttpUnit_1 = require("../Net/HttpUnit");
var MaiLiang_1 = require("../MaiLiangAPI/MaiLiang");
var EventMgr_1 = require("../Event/EventMgr");
var EventDef_1 = require("../Event/EventDef");
var WXAPI_1 = require("../WXAPI");
var WudianMgr_1 = require("./WudianMgr");
var CachedWXBannerAd_1 = require("../CachedWXBannerAd");
var ALD_1 = require("../ALD");
var QQMiniGameAPI_1 = require("../QQMiniGameAPI");
var WXADMgr_1 = require("./WXADMgr");
var appRun_1 = require("../myGameScript/appRun");
var gameData_1 = require("../myGameScript/data/gameData");
var SoundMgr_1 = require("./SoundMgr");
var CachedQQBannerAd_1 = require("../CachedQQBannerAd");
//游戏管理器，游戏代码的入口
var Game_XXPTW_Mgr = /** @class */ (function (_super) {
    __extends(Game_XXPTW_Mgr, _super);
    function Game_XXPTW_Mgr() {
        var _this = _super.call(this) || this;
        Game_XXPTW_Mgr._instance = _this;
        return _this;
    }
    Game_XXPTW_Mgr.get_XXPTW_Instance = function () { return Game_XXPTW_Mgr._instance; };
    Game_XXPTW_Mgr.prototype.onAwake = function () {
        MaiLiang_1.default.Get_XXPTW_Mai_XXPTW_Liang_XXPTW_OpenId(function (res) {
            console.log("GameUI 买量数据上报成功");
            Laya.Browser.window["wx"].onShow(function () {
                MaiLiang_1.default.Get_XXPTW_Mai_XXPTW_Liang_XXPTW_OpenId(null, null);
            });
            Laya.Browser.window["wx"].onHide(function () {
                MaiLiang_1.default.Report_XXPTW_Stay_XXPTW_Time(null, null);
            });
        }, function (res) {
            console.log("GameUI 买量数据上报失败");
        });
        WXAPI_1.default.Set_XXPTW_Share_XXPTW_Menu("", "", function () {
        }, function () {
        }, function () {
        });
        WudianMgr_1.default.Update_XXPTW_IpBlock_XXPTW_State();
        this.report_XXPTW_Launch_XXPTW_Options();
        if (Laya.Browser.onMiniGame) {
            CachedWXBannerAd_1.default.pre_XXPTW_load_XXPTW_Banner();
            WXADMgr_1.default._XXPTW_init_XXPTW_();
        }
        else if (Laya.Browser.onQQMiniGame) {
            CachedQQBannerAd_1.default.pre_XXPTW_load_XXPTW_Banner();
            QQMiniGameAPI_1.default.Load_XXPTW_App_XXPTW_BoxAd(function () { }, function () { });
        }
        else if (Laya.Browser.onQGMiniGame) {
            if (null != Laya.Browser.window["qg"].reportMonitor && typeof (Laya.Browser.window["qg"].reportMonitor) == 'function') {
                Laya.Browser.window["qg"].reportMonitor('game_scene', 0);
            }
        }
    };
    Game_XXPTW_Mgr.prototype.onStart = function () {
        this.pre_XXPTW_Create_XXPTW_Game();
        setTimeout(function () {
            Laya.MouseManager.multiTouchEnabled = false;
            gameData_1.default.isSceneLoadedSuc = false;
            ViewMgr_1.default.ins_XXPTW_tance.open_XXPTW_View(ViewMgr_1.View_XXPTW_Def.indexView, null, function () {
                SoundMgr_1.default.ins_XXPTW_tance.play_XXPTW_BGM("背景音乐");
                EventMgr_1.default.ins_XXPTW_tance.dis_XXPTW_patch(EventDef_1.Event_XXPTW_Def.App_Close_XXPTW_First_XXPTW_Loading_XXPTW_View);
                if (Laya.Browser.onMiniGame) {
                    wx.showToast({
                        title: '加载中',
                        icon: 'loading',
                        image: null,
                        duration: 30000,
                        mask: true,
                        success: function () { },
                        fail: function () { },
                        complete: function () { }
                    });
                }
            });
        }, 5000);
    };
    Game_XXPTW_Mgr.prototype.pre_XXPTW_Create_XXPTW_Game = function () {
        //todo：这里添加初始化主场景的代码。EventMgr.instance.dispatch(EventDef.App_CloseFirstLoadingView); 添加到你的关卡加载完成的回调中，关闭加载界面
        //关闭多点触控
        appRun_1.default.Instance.init(function () {
        });
    };
    //游戏存档,仅当作示例，实际存档根据实际项目各自实现
    Game_XXPTW_Mgr.prototype.save_XXPTW_Game_XXPTW_Data = function () {
        HttpUnit_1.default.save_XXPTW_Game_XXPTW_Data(User_1.default.get_XXPTW_Save_XXPTW_Data(), function (res) {
            if (res.code == 1) {
                console.log("存档成功");
            }
            else {
                console.log("存档失败");
            }
        }, function (res) {
            console.log("存档失败");
        });
    };
    Game_XXPTW_Mgr.prototype.report_XXPTW_Launch_XXPTW_Options = function () {
        HttpUnit_1.default.Get_XXPTW_user_XXPTW_ip(function (res) {
            if (1 == res.code) {
                console.log("获取玩家ip,地区成功 ：", res.data.dqip, res.data.ipxq);
                var opt = null;
                if (Laya.Browser.onMiniGame) {
                    opt = WXAPI_1.default.get_XXPTW_Launch_XXPTW_Options_XXPTW_Sync();
                }
                else if (Laya.Browser.onQQMiniGame) {
                    opt = QQMiniGameAPI_1.default.get_XXPTW_Launch_XXPTW_Options_XXPTW_Sync();
                }
                if (null != opt) {
                    ALD_1.default.ald_XXPTW_Send_XXPTW_Report_XXPTW_LaunchOptions(opt.scene, res.data.dqip, res.data.ipxq);
                }
            }
        }, function (res) {
            console.log("获取玩家ip,地区失败");
            var opt = null;
            if (Laya.Browser.onMiniGame) {
                opt = WXAPI_1.default.get_XXPTW_Launch_XXPTW_Options_XXPTW_Sync();
            }
            else if (Laya.Browser.onQQMiniGame) {
                opt = QQMiniGameAPI_1.default.get_XXPTW_Launch_XXPTW_Options_XXPTW_Sync();
            }
            if (null != opt) {
                ALD_1.default.ald_XXPTW_Send_XXPTW_Report_XXPTW_LaunchOptions(opt.scene, "", "");
            }
        });
    };
    Game_XXPTW_Mgr._instance = null;
    return Game_XXPTW_Mgr;
}(Laya.Script));
exports.default = Game_XXPTW_Mgr;
},{"../ALD":1,"../CachedQQBannerAd":3,"../CachedWXBannerAd":4,"../Event/EventDef":6,"../Event/EventMgr":7,"../MaiLiangAPI/MaiLiang":26,"../Net/HttpUnit":35,"../QQMiniGameAPI":39,"../User/User":45,"../WXAPI":78,"../myGameScript/appRun":79,"../myGameScript/data/gameData":80,"./SoundMgr":29,"./ViewMgr":31,"./WXADMgr":32,"./WudianMgr":33}],29:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Sound_XXPTW_Mgr = /** @class */ (function () {
    function Sound_XXPTW_Mgr() {
        this._enabled_XXPTW_ = true;
    }
    Object.defineProperty(Sound_XXPTW_Mgr.prototype, "_XXPTW_Enabled_XXPTW_", {
        get: function () {
            return this._enabled_XXPTW_;
        },
        set: function (e) {
            if (!e) {
                this.stop_XXPTW_BGM();
            }
            this._enabled_XXPTW_ = e;
        },
        enumerable: true,
        configurable: true
    });
    Sound_XXPTW_Mgr.prototype.get_XXPTW_Sound_XXPTW_Url = function (name) {
        var url = Sound_XXPTW_Mgr.sound_XXPTW_Res_XXPTW_Path + name + ".mp3";
        return url;
    };
    Sound_XXPTW_Mgr.prototype.play_XXPTW_Sound = function (name) {
        if (!this._enabled_XXPTW_)
            return;
        var url = this.get_XXPTW_Sound_XXPTW_Url(name);
        if (Laya.Browser.onMiniGame) {
            var sound = laya.utils.Pool.getItem(name);
            if (sound == null) {
                sound = wx.createInnerAudioContext();
                sound.src = Sound_XXPTW_Mgr.sound_XXPTW_Res_XXPTW_Path + name + ".mp3";
                sound.onEnded(function () {
                    laya.utils.Pool.recover(name, sound);
                    sound.offEnded();
                });
            }
            sound.play();
        }
        else {
            Laya.SoundManager.playSound(url, 1);
        }
    };
    Sound_XXPTW_Mgr.prototype.play_XXPTW_BGM = function (name) {
        if (!this._enabled_XXPTW_)
            return;
        var url = this.get_XXPTW_Sound_XXPTW_Url(name);
        if (Laya.Browser.onMiniGame) {
            if (!this._XXPTW_bgm_XXPTW_) {
                this._XXPTW_bgm_XXPTW_ = wx.createInnerAudioContext();
            }
            this._XXPTW_bgm_XXPTW_.pause();
            this._XXPTW_bgm_XXPTW_.src = url;
            this._XXPTW_bgm_XXPTW_.loop = true;
            this._XXPTW_bgm_XXPTW_.play();
        }
        else {
            Laya.SoundManager.playMusic(url, 0);
        }
    };
    Sound_XXPTW_Mgr.prototype.stop_XXPTW_BGM = function () {
        if (Laya.Browser.onMiniGame) {
            if (this._XXPTW_bgm_XXPTW_) {
                this._XXPTW_bgm_XXPTW_.pause();
            }
        }
        else {
            Laya.SoundManager.stopMusic();
        }
    };
    Sound_XXPTW_Mgr.sound_XXPTW_Res_XXPTW_Path = "subRes/sound/";
    Sound_XXPTW_Mgr.ins_XXPTW_tance = new Sound_XXPTW_Mgr();
    return Sound_XXPTW_Mgr;
}());
exports.default = Sound_XXPTW_Mgr;
},{}],30:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Vibrate_XXPTW_Mgr = /** @class */ (function () {
    function Vibrate_XXPTW_Mgr() {
    }
    //短震动
    Vibrate_XXPTW_Mgr.vibrate_XXPTW_Short = function () {
        if (!Vibrate_XXPTW_Mgr.is_XXPTW_Enable)
            return;
        if (Laya.Browser.onMiniGame) {
            Laya.Browser.window["wx"].vibrateShort();
        }
        else if (Laya.Browser.onQGMiniGame) {
            Laya.Browser.window["qg"].vibrateShort();
        }
        else if (Laya.Browser.onQQMiniGame) { //qq小游戏
            Laya.Browser.window["qq"].vibrateShort();
        }
    };
    //长震动
    Vibrate_XXPTW_Mgr.vibrate_XXPTW_Long = function () {
        if (!Vibrate_XXPTW_Mgr.is_XXPTW_Enable)
            return;
        if (Laya.Browser.onMiniGame) {
            Laya.Browser.window["wx"].vibrateLong();
        }
        else if (Laya.Browser.onQGMiniGame) {
            Laya.Browser.window["qg"].vibrateLong();
        }
        else if (Laya.Browser.onQQMiniGame) { //qq小游戏
            Laya.Browser.window["qq"].vibrateLong();
        }
    };
    //定时震动,毫秒
    Vibrate_XXPTW_Mgr.vibrate_XXPTW_ = function (time) {
        if (!Vibrate_XXPTW_Mgr.is_XXPTW_Enable)
            return;
        if (Laya.Browser.onMiniGame) {
            var count_1 = time / 15; //微信小游戏中震动的时间是15毫秒的整数倍时间，本质是对短震动的封装
            var index_1 = 0;
            var obj_1 = { count: count_1, index: index_1 };
            Laya.timer.loop(16, obj_1, function () {
                Vibrate_XXPTW_Mgr.vibrate_XXPTW_Short();
                index_1++;
                if (index_1 > count_1) {
                    Laya.timer.clearAll(obj_1);
                }
            });
        }
        else if (Laya.Browser.onQGMiniGame) {
            var count_2 = time / 20; //OPPO小游戏中震动的时间是20毫秒的整数倍时间，本质是对短震动的封装
            var index_2 = 0;
            var obj_2 = { count: count_2, index: index_2 };
            Laya.timer.loop(21, obj_2, function () {
                Vibrate_XXPTW_Mgr.vibrate_XXPTW_Short();
                index_2++;
                if (index_2 > count_2) {
                    Laya.timer.clearAll(obj_2);
                }
            });
        }
        else if (Laya.Browser.onQQMiniGame) //qq小游戏
         {
            var count_3 = time / 20; //OPPO小游戏中震动的时间是20毫秒的整数倍时间，本质是对短震动的封装
            var index_3 = 0;
            var obj_3 = { count: count_3, index: index_3 };
            Laya.timer.loop(21, obj_3, function () {
                Vibrate_XXPTW_Mgr.vibrate_XXPTW_Short();
                index_3++;
                if (index_3 > count_3) {
                    Laya.timer.clearAll(obj_3);
                }
            });
        }
    };
    Vibrate_XXPTW_Mgr.is_XXPTW_Enable = true;
    return Vibrate_XXPTW_Mgr;
}());
exports.default = Vibrate_XXPTW_Mgr;
},{}],31:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var View_XXPTW_Def;
(function (View_XXPTW_Def) {
    View_XXPTW_Def["None"] = "";
    View_XXPTW_Def["TipsView"] = "View/TipsView.json";
    View_XXPTW_Def["ClickGetPrize"] = "View/ClickGetPrize.json";
    View_XXPTW_Def["MainView"] = "View/Template/MainViewTemplate.json";
    View_XXPTW_Def["MiniGameView"] = "View/Template/MiniGameViewTemplate.json";
    View_XXPTW_Def["RewardView"] = "View/Template/RewardViewTemplate.json";
    View_XXPTW_Def["InGameView"] = "View/Template/InGameViewTemplate.json";
    View_XXPTW_Def["GameWinView"] = "View/Template/GameWinViewTemplate.json";
    View_XXPTW_Def["GameFailView"] = "View/Template/GameFailViewTemplate.json";
    View_XXPTW_Def["ExportView"] = "View/Template/ExportViewTemplate.json";
    View_XXPTW_Def["Export2View"] = "View/Template/Export2ViewTemplate.json";
    View_XXPTW_Def["OPPONativeView"] = "View/Template/OPPONativeViewTemplate.json";
    View_XXPTW_Def["QQCrazyClickView"] = "View/Template/QQ/QQCrazyClick.json";
    View_XXPTW_Def["QQCrazyClickView2"] = "View/Template/QQ/QQCrazyClick2.json";
    //todo:添加你的界面
    View_XXPTW_Def["indexView"] = "View/IndexView.json";
    View_XXPTW_Def["gameView"] = "View/GameView.json";
    View_XXPTW_Def["endView"] = "View/EndView.json";
    View_XXPTW_Def["leadingOutView"] = "View/LeadingOutView.json";
})(View_XXPTW_Def = exports.View_XXPTW_Def || (exports.View_XXPTW_Def = {}));
//界面管理器
var View_XXPTW_Mgr = /** @class */ (function () {
    function View_XXPTW_Mgr() {
        this._XXPTW__views_XXPTW_ = {};
        this._loading_XXPTW_List = new Array();
    }
    View_XXPTW_Mgr.prototype.open_XXPTW_View = function (viewType, data, oncomplate) {
        if (this._XXPTW__views_XXPTW_[viewType]) {
            var view = this._XXPTW__views_XXPTW_[viewType];
            var coms = view._components;
            var viewBase = null;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (element._viewBase) {
                        viewBase = element;
                        viewBase.open_XXPTW_View(data);
                        break;
                    }
                }
            }
            if (oncomplate) {
                oncomplate(viewBase);
            }
            return;
        }
        for (var i = 0; i < this._loading_XXPTW_List.length; ++i) {
            var def = this._loading_XXPTW_List[i];
            if (def == viewType) {
                console.log("界面 : " + String(def) + " 正在加载中，请不要重复加载");
                return;
            }
        }
        var viewUrl = String(viewType);
        var self = this;
        this._loading_XXPTW_List.push(viewType);
        Laya.Scene.load(viewUrl, Laya.Handler.create(this, function (owner) {
            Laya.stage.addChild(owner);
            var view = owner;
            self._XXPTW__views_XXPTW_[viewType] = view;
            var coms = owner._components;
            var viewBase = null;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (element._viewBase) {
                        viewBase = element;
                        element._viewDef = viewType;
                        viewBase.open_XXPTW_View(data);
                        break;
                    }
                }
            }
            for (var i = 0; i < self._loading_XXPTW_List.length; ++i) {
                var def = self._loading_XXPTW_List[i];
                if (def == viewType) {
                    self._loading_XXPTW_List.splice(i, 1);
                    break;
                }
            }
            if (oncomplate) {
                oncomplate(viewBase);
            }
        }));
    };
    View_XXPTW_Mgr.prototype.close_XXPTW_View = function (viewType) {
        var view = this._XXPTW__views_XXPTW_[viewType];
        if (view) {
            var owner = view;
            var coms = owner._components;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (element._viewBase) {
                        element.onClose();
                        break;
                    }
                }
            }
            view.removeSelf();
            view.destroy();
            this._XXPTW__views_XXPTW_[viewType] = null;
        }
    };
    View_XXPTW_Mgr.prototype.Show_XXPTW_View = function (viewType) {
        var view = this._XXPTW__views_XXPTW_[viewType];
        if (view) {
            var coms = view._components;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (element._viewBase) {
                        element.show();
                        break;
                    }
                }
            }
        }
    };
    View_XXPTW_Mgr.prototype.hide_XXPTW_View = function (viewType) {
        var view = this._XXPTW__views_XXPTW_[viewType];
        if (view) {
            var coms = view._components;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (element._viewBase) {
                        element.hide();
                        break;
                    }
                }
            }
        }
    };
    View_XXPTW_Mgr.prototype.get_XXPTW_View = function (viewType) {
        return this._XXPTW__views_XXPTW_[viewType];
    };
    View_XXPTW_Mgr.prototype.show_XXPTW_Tips = function (msg) {
        this.open_XXPTW_View(View_XXPTW_Def.TipsView, msg);
    };
    View_XXPTW_Mgr.ins_XXPTW_tance = new View_XXPTW_Mgr();
    return View_XXPTW_Mgr;
}());
exports.default = View_XXPTW_Mgr;
},{}],32:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppSwitchConfig_1 = require("../Config/AppSwitchConfig");
var WX_XXPTW_BannderAd = /** @class */ (function () {
    function WX_XXPTW_BannderAd(bannerid) {
        this._id_XXPTW_ = null;
        this._banner_XXPTW_ = null;
        this._create_XXPTW_Time = 0;
        this._destroyed_XXPTW_ = false;
        this._XXPTW__error_XXPTW_ = null;
        this._loading_XXPTW_ = false;
        this._retry_XXPTW_Count = 0;
        this._banner_XXPTW_Total_XXPTW_ShowTime = 0;
        this._last_XXPTW_Show_XXPTW_Time = 0;
        this._id_XXPTW_ = bannerid;
    }
    Object.defineProperty(WX_XXPTW_BannderAd.prototype, "_XXPTW_Id_XXPTW_", {
        get: function () {
            return this._id_XXPTW_;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WX_XXPTW_BannderAd.prototype, "Create_XXPTW_Time", {
        get: function () {
            return this._create_XXPTW_Time;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WX_XXPTW_BannderAd.prototype, "Destroyed_XXPTW_", {
        get: function () {
            return this._destroyed_XXPTW_;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WX_XXPTW_BannderAd.prototype, "is_XXPTW_Ready", {
        get: function () {
            return null != this._banner_XXPTW_;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WX_XXPTW_BannderAd.prototype, "is_XXPTW_Error", {
        get: function () {
            return null != this._XXPTW__error_XXPTW_;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WX_XXPTW_BannderAd.prototype, "_XXPTW_Error_XXPTW_", {
        get: function () {
            return this._XXPTW__error_XXPTW_;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WX_XXPTW_BannderAd.prototype, "Load_XXPTW_ing", {
        get: function () {
            return this._loading_XXPTW_;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WX_XXPTW_BannderAd.prototype, "Retry_XXPTW_Count", {
        get: function () {
            return this._retry_XXPTW_Count;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WX_XXPTW_BannderAd.prototype, "Banner_XXPTW_Total_XXPTW_ShowTime", {
        get: function () {
            return this._banner_XXPTW_Total_XXPTW_ShowTime;
        },
        enumerable: true,
        configurable: true
    });
    WX_XXPTW_BannderAd.prototype._XXPTW_show_XXPTW_ = function () {
        if (this.is_XXPTW_Ready) {
            this._banner_XXPTW_.hide();
            var self_1 = this;
            var sysInfo = Laya.Browser.window["wx"].getSystemInfoSync();
            var sw = sysInfo.screenWidth;
            var sh = sysInfo.screenHeight;
            var pos = new Laya.Point(0, 0);
            var width = 300;
            var left = sw / 2 - width / 2;
            var top_1 = sh - 130;
            this._banner_XXPTW_.style.left = left;
            this._banner_XXPTW_.style.top = top_1;
            this._last_XXPTW_Show_XXPTW_Time = Laya.timer.currTimer;
            this._banner_XXPTW_.show();
        }
    };
    WX_XXPTW_BannderAd.prototype._XXPTW_hide_XXPTW_ = function () {
        if (this.is_XXPTW_Ready) {
            this._banner_XXPTW_.hide();
            this._banner_XXPTW_Total_XXPTW_ShowTime += (Laya.timer.currTimer - this._last_XXPTW_Show_XXPTW_Time);
        }
    };
    WX_XXPTW_BannderAd.prototype.des_XXPTW_troy = function () {
        if (this._destroyed_XXPTW_) {
            console.log("BannerAd 已经被销毁");
            return;
        }
        if (this._loading_XXPTW_) {
            console.log("BannerAd 正在加载中，无法进行销毁");
            return;
        }
        if (null != this._banner_XXPTW_) {
            this._banner_XXPTW_.destroy();
        }
        this._banner_XXPTW_ = null;
        this._destroyed_XXPTW_ = true;
    };
    WX_XXPTW_BannderAd.prototype._XXPTW_retry_XXPTW_ = function (callBack) {
        if (this._destroyed_XXPTW_) {
            console.log("BannerAd 已被销毁，无法重试");
            return;
        }
        if (this.is_XXPTW_Ready) {
            console.log("BannerAd 已创建成功，无需重试");
            return;
        }
        if (this._loading_XXPTW_) {
            console.log("BannerAd 正在创建中");
            return;
        }
        if (this._retry_XXPTW_Count >= WX_XXPTW_BannderAd.MAX__XXPTW_RETRY_COUNT_XXPTW_) {
            console.log("此 BannerAd 重试次数已达最大");
            return;
        }
        var self = this;
        this._create_XXPTW_(function (isOk) {
            if (null != callBack) {
                callBack(isOk);
            }
            ++self._retry_XXPTW_Count;
        });
    };
    WX_XXPTW_BannderAd.prototype._create_XXPTW_ = function (callBack) {
        if (!Laya.Browser.onMiniGame) {
            if (null != callBack) {
                callBack(false);
            }
            return;
        }
        var banner = null;
        if (Laya.Browser.onMiniGame) {
            banner = Laya.Browser.window["wx"].createBannerAd({
                adUnitId: this._id_XXPTW_,
                adIntervals: 30,
                style: {
                    left: 0,
                    top: 0,
                    width: 300,
                }
            });
        }
        else if (Laya.Browser.onQQMiniGame) {
            banner = Laya.Browser.window["qq"].createBannerAd({
                adUnitId: this._id_XXPTW_,
                adIntervals: 30,
                style: {
                    left: 0,
                    top: 0,
                    width: 300,
                }
            });
        }
        if (null != banner) {
            var self_2 = this;
            this._loading_XXPTW_ = true;
            banner.onLoad(function (res) {
                console.log("BannderAd 加载完成", self_2._id_XXPTW_, res);
                self_2._banner_XXPTW_ = banner;
                self_2._create_XXPTW_Time = Laya.timer.currTimer;
                self_2._loading_XXPTW_ = false;
                if (null != callBack) {
                    callBack(true);
                }
            });
            banner.onError(function (err) {
                console.log("BannderAd 加载失败", self_2._id_XXPTW_, err);
                self_2._XXPTW__error_XXPTW_ = err;
                self_2._loading_XXPTW_ = false;
                banner.destroy();
                if (null != callBack) {
                    callBack(false);
                }
            });
        }
    };
    WX_XXPTW_BannderAd.MAX__XXPTW_RETRY_COUNT_XXPTW_ = 3;
    return WX_XXPTW_BannderAd;
}());
exports.WX_XXPTW_BannderAd = WX_XXPTW_BannderAd;
var WX_XXPTW_GridAd = /** @class */ (function () {
    function WX_XXPTW_GridAd(bannerid) {
        this._id_XXPTW_ = null;
        this._grid_XXPTW_Ad = null;
        this._create_XXPTW_Time = 0;
        this._des_XXPTW_troyed = false;
        this._XXPTW__error_XXPTW_ = null;
        this._load_XXPTW_ing = false;
        this._id_XXPTW_ = bannerid;
    }
    Object.defineProperty(WX_XXPTW_GridAd.prototype, "Create_XXPTW_Time", {
        get: function () {
            return this._create_XXPTW_Time;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WX_XXPTW_GridAd.prototype, "Des_XXPTW_troyed", {
        get: function () {
            return this._des_XXPTW_troyed;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WX_XXPTW_GridAd.prototype, "is_XXPTW_Ready", {
        get: function () {
            return null != this._grid_XXPTW_Ad;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WX_XXPTW_GridAd.prototype, "is_XXPTW_Error", {
        get: function () {
            return null != this._XXPTW__error_XXPTW_;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WX_XXPTW_GridAd.prototype, "_XXPTW_Error_XXPTW_", {
        get: function () {
            return this._XXPTW__error_XXPTW_;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WX_XXPTW_GridAd.prototype, "Load_XXPTW_ing", {
        get: function () {
            return this._load_XXPTW_ing;
        },
        enumerable: true,
        configurable: true
    });
    WX_XXPTW_GridAd.prototype._XXPTW_show_XXPTW_ = function () {
        if (this.is_XXPTW_Ready) {
            this._grid_XXPTW_Ad.show();
        }
    };
    WX_XXPTW_GridAd.prototype._XXPTW_hide_XXPTW_ = function () {
        if (this.is_XXPTW_Ready) {
            this._grid_XXPTW_Ad.hide();
        }
    };
    WX_XXPTW_GridAd.prototype.des_XXPTW_troy = function () {
        if (this._des_XXPTW_troyed) {
            console.log("GridAD 已经被销毁");
            return;
        }
        if (this._load_XXPTW_ing) {
            console.log("GridAD 正在加载中，无法进行销毁");
            return;
        }
        if (null != this._grid_XXPTW_Ad) {
            this._grid_XXPTW_Ad.destroy();
        }
        this._grid_XXPTW_Ad = null;
        this._des_XXPTW_troyed = true;
    };
    WX_XXPTW_GridAd.prototype._XXPTW_retry_XXPTW_ = function (callBack) {
        if (this._des_XXPTW_troyed) {
            console.log("GridAD 已被销毁，无法重试");
            return;
        }
        if (this.is_XXPTW_Ready) {
            console.log("GridAD 已创建成功，无需重试");
            return;
        }
        if (this._load_XXPTW_ing) {
            console.log("GridAD 正在创建中");
            return;
        }
        var self = this;
        this._XXPTW__create_XXPTW_(function (isOk) {
            if (null != callBack) {
                callBack(isOk);
            }
        });
    };
    WX_XXPTW_GridAd.prototype._XXPTW__create_XXPTW_ = function (callBack) {
        if (!Laya.Browser.onMiniGame) {
            if (null != callBack) {
                callBack(false);
            }
            return;
        }
        var gridAd = Laya.Browser.window["wx"].createGridAd({
            adUnitId: this._id_XXPTW_,
            adIntervals: 30,
            style: {
                left: 0,
                top: 0,
                width: 300,
                height: 150,
            }
        });
        if (null != gridAd) {
            var self_3 = this;
            this._load_XXPTW_ing = true;
            gridAd.onLoad(function (res) {
                console.log("GridAD 加载完成", self_3._id_XXPTW_, res);
                self_3._grid_XXPTW_Ad = gridAd;
                self_3._create_XXPTW_Time = Laya.timer.currTimer;
                self_3._load_XXPTW_ing = false;
                if (null != callBack) {
                    callBack(true);
                }
            });
            gridAd.onError(function (err) {
                console.log("GridAD 加载失败", self_3._id_XXPTW_, err);
                self_3._XXPTW__error_XXPTW_ = err;
                self_3._load_XXPTW_ing = false;
                gridAd.destroy();
                if (null != callBack) {
                    callBack(false);
                }
            });
        }
    };
    return WX_XXPTW_GridAd;
}());
exports.WX_XXPTW_GridAd = WX_XXPTW_GridAd;
var WX_XXPTW_ADMgr = /** @class */ (function () {
    function WX_XXPTW_ADMgr() {
    }
    WX_XXPTW_ADMgr._XXPTW_init_XXPTW_ = function () {
        if (WX_XXPTW_ADMgr._inited_XXPTW_)
            return;
        var banners = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().wx_XXPTW_Wu_XXPTW_Dian_XXPTW_Banners;
        for (var i = 0; i < banners.length; ++i) {
            WX_XXPTW_ADMgr._banner_XXPTW_Ids.push(banners[i]);
        }
        for (var i = 0; i < WX_XXPTW_ADMgr._banner_XXPTW_Ids.length; ++i) {
            var cur = WX_XXPTW_ADMgr._banner_XXPTW_Ids[i];
            WX_XXPTW_ADMgr._banner_XXPTW_Ids[i] = banners[Math.floor(Math.random() * banners.length)];
        }
        WX_XXPTW_ADMgr._create_XXPTW_BannerAd_XXPTW_();
        var bannerRecreateTime = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().banner_XXPTW_Create_XXPTW_FailNum * 1000;
        Laya.timer.loop(bannerRecreateTime, WX_XXPTW_ADMgr, function () {
            WX_XXPTW_ADMgr._check_XXPTW_BannerAd_XXPTW_();
            WX_XXPTW_ADMgr._create_XXPTW_BannerAd_XXPTW_();
        });
        //WX_XXPTW_ADMgr._create_XXPTW_GirdAd();
        WX_XXPTW_ADMgr._inited_XXPTW_ = true;
    };
    WX_XXPTW_ADMgr.get_XXPTW_Banner = function (callBack) {
        var readyBannerAd = [];
        var UnreadyBannerAd = [];
        for (var i = 0; i < WX_XXPTW_ADMgr._banners_XXPTW_.length; ++i) {
            var bannerAd_1 = WX_XXPTW_ADMgr._banners_XXPTW_[i];
            if (!bannerAd_1.Destroyed_XXPTW_) {
                if (bannerAd_1.is_XXPTW_Ready) {
                    readyBannerAd.push(bannerAd_1);
                }
                else {
                    UnreadyBannerAd.push(bannerAd_1);
                }
            }
        }
        if (WX_XXPTW_ADMgr._cur_XXPTW_Banner_XXPTW_GetIndex >= readyBannerAd.length) {
            WX_XXPTW_ADMgr._cur_XXPTW_Banner_XXPTW_GetIndex = 0;
        }
        var bannerAd = readyBannerAd[WX_XXPTW_ADMgr._cur_XXPTW_Banner_XXPTW_GetIndex];
        ++WX_XXPTW_ADMgr._cur_XXPTW_Banner_XXPTW_GetIndex;
        if (null != bannerAd) {
            callBack(bannerAd);
        }
        else {
            bannerAd = WX_XXPTW_ADMgr._create_XXPTW_BannerAd_XXPTW_();
            if (null == bannerAd) {
                bannerAd = WX_XXPTW_ADMgr._banners_XXPTW_[Math.floor(Math.random() * WX_XXPTW_ADMgr._banners_XXPTW_.length)];
            }
            if (null == bannerAd) {
                callBack(null);
            }
            else {
                bannerAd._XXPTW_retry_XXPTW_(function (ok) {
                    if (ok) {
                        callBack(bannerAd);
                    }
                    else {
                        callBack(null);
                    }
                });
            }
        }
    };
    WX_XXPTW_ADMgr._create_XXPTW_BannerAd_XXPTW_ = function () {
        if (WX_XXPTW_ADMgr._cur_XXPTW_Banner_XXPTW_CreateIndex >= WX_XXPTW_ADMgr._banner_XXPTW_Ids.length)
            return null;
        var bannerAd = new WX_XXPTW_BannderAd(WX_XXPTW_ADMgr._banner_XXPTW_Ids[WX_XXPTW_ADMgr._cur_XXPTW_Banner_XXPTW_CreateIndex]);
        WX_XXPTW_ADMgr._banners_XXPTW_.push(bannerAd);
        bannerAd._XXPTW_retry_XXPTW_();
        ++WX_XXPTW_ADMgr._cur_XXPTW_Banner_XXPTW_CreateIndex;
        return bannerAd;
    };
    WX_XXPTW_ADMgr._check_XXPTW_BannerAd_XXPTW_ = function () {
        var readyBannerAd = [];
        var UnreadyBannerAd = [];
        for (var i = 0; i < WX_XXPTW_ADMgr._banners_XXPTW_.length; ++i) {
            var bannerAd = WX_XXPTW_ADMgr._banners_XXPTW_[i];
            if (!bannerAd.Destroyed_XXPTW_) {
                if (bannerAd.is_XXPTW_Ready) {
                    readyBannerAd.push(bannerAd);
                }
                else {
                    UnreadyBannerAd.push(bannerAd);
                }
            }
        }
        for (var i = 0; i < WX_XXPTW_ADMgr._banners_XXPTW_.length; ++i) {
            var bannerAd = WX_XXPTW_ADMgr._banners_XXPTW_[i];
            var bannerShowTime = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().banner_XXPTW_Show_XXPTW_Time;
            if (!bannerAd.is_XXPTW_Ready) {
                if (bannerAd.Retry_XXPTW_Count >= WX_XXPTW_BannderAd.MAX__XXPTW_RETRY_COUNT_XXPTW_) {
                    console.log("BannerAd 超过重试次数，销毁 : ", bannerAd._XXPTW_Id_XXPTW_);
                    bannerAd.des_XXPTW_troy();
                }
                else {
                    bannerAd._XXPTW_retry_XXPTW_();
                }
            }
            else if (readyBannerAd.length >= 2 && bannerAd.Banner_XXPTW_Total_XXPTW_ShowTime >= bannerShowTime * 1000) {
                console.log("BannerAd 展示时间超过限制，销毁 : ", bannerAd._XXPTW_Id_XXPTW_);
                bannerAd.des_XXPTW_troy();
            }
        }
    };
    WX_XXPTW_ADMgr.get_XXPTW_Box_XXPTW_Ad = function (callBack) {
        if (WX_XXPTW_ADMgr._wx_XXPTW_GridAd.is_XXPTW_Ready) {
            callBack(WX_XXPTW_ADMgr._wx_XXPTW_GridAd);
        }
        else {
            var gridAd_1 = WX_XXPTW_ADMgr._wx_XXPTW_GridAd;
            gridAd_1._XXPTW_retry_XXPTW_(function (isOk) {
                if (isOk) {
                    callBack(gridAd_1);
                }
                else {
                    callBack(null);
                }
            });
        }
    };
    WX_XXPTW_ADMgr._create_XXPTW_GirdAd = function () {
        if (null != WX_XXPTW_ADMgr._wx_XXPTW_GridAd)
            return;
        var gridAd = new WX_XXPTW_GridAd("");
        gridAd._XXPTW_retry_XXPTW_();
        WX_XXPTW_ADMgr._wx_XXPTW_GridAd = gridAd;
    };
    WX_XXPTW_ADMgr._inited_XXPTW_ = false;
    WX_XXPTW_ADMgr._banner_XXPTW_Ids = new Array();
    WX_XXPTW_ADMgr._banners_XXPTW_ = new Array();
    WX_XXPTW_ADMgr._cur_XXPTW_Banner_XXPTW_CreateIndex = 0;
    WX_XXPTW_ADMgr._cur_XXPTW_Banner_XXPTW_GetIndex = 0;
    WX_XXPTW_ADMgr._wx_XXPTW_GridAd = null;
    return WX_XXPTW_ADMgr;
}());
exports.default = WX_XXPTW_ADMgr;
},{"../Config/AppSwitchConfig":5}],33:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var HttpUnit_1 = require("../Net/HttpUnit");
var AppSwitchConfig_1 = require("../Config/AppSwitchConfig");
var WXAPI_1 = require("../WXAPI");
var QQMiniGameAPI_1 = require("../QQMiniGameAPI");
var EventMgr_1 = require("../Event/EventMgr");
var EventDef_1 = require("../Event/EventDef");
var Wu_XXPTW_dian_XXPTW_Mgr = /** @class */ (function () {
    function Wu_XXPTW_dian_XXPTW_Mgr() {
    }
    Wu_XXPTW_dian_XXPTW_Mgr.Ip_XXPTW_Block_XXPTW_Flag = function () {
        return Wu_XXPTW_dian_XXPTW_Mgr._ipBlockFlag;
    };
    /**
     * 此方法调用很慢，所以要在游戏初始化的时候调用一次此方法
     *
     * @static
     * @memberof WudianMgr
     */
    Wu_XXPTW_dian_XXPTW_Mgr.Update_XXPTW_IpBlock_XXPTW_State = function () {
        HttpUnit_1.default.Get_XXPTW_Ip_XXPTW_Block(function (res) {
            console.log("调用IpBlock接口成功,结果为:", res);
            Wu_XXPTW_dian_XXPTW_Mgr._ipBlockFlag = res.code;
            EventMgr_1.default.ins_XXPTW_tance.dis_XXPTW_patch(EventDef_1.Event_XXPTW_Def.App_On_XXPTW_Update_XXPTW_IpBlockState, { ipBlockFlag: Wu_XXPTW_dian_XXPTW_Mgr._ipBlockFlag });
        }, null);
    };
    /**
     * IP是否被屏蔽
     *
     * @static
     * @returns {boolean}
     * @memberof WudianMgr
     */
    Wu_XXPTW_dian_XXPTW_Mgr.Get_XXPTW_Ip_XXPTW_Blocked = function () {
        return Wu_XXPTW_dian_XXPTW_Mgr._ipBlockFlag == 0;
    };
    /**
     * 得到用户进入的场景值
     *
     * @static
     * @returns {number}
     * @memberof WudianMgr
     */
    Wu_XXPTW_dian_XXPTW_Mgr.Get_XXPTW_Entry_XXPTW_Scene = function () {
        return WXAPI_1.default.get_XXPTW_Launch_XXPTW_Options_XXPTW_Sync().scene == 1006;
    };
    /**
     * 误点开关是否打开，包括了总开关和分时开关
     *
     * @static
     * @returns {boolean}
     * @memberof WudianMgr
     */
    Wu_XXPTW_dian_XXPTW_Mgr.Is_XXPTW_Switch_XXPTW_Open = function () {
        var mainSwitch = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().wu_XXPTW_dian == 1;
        var isOpenTime = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().wudianTimeAvaliable;
        console.log("误点Flag状态: ", "总开关:", mainSwitch, "打开时间", isOpenTime);
        return mainSwitch && isOpenTime;
    };
    Object.defineProperty(Wu_XXPTW_dian_XXPTW_Mgr, "Wu_XXPTW_dian_XXPTW_Flag", {
        /**
         * 完全封装好的误点Flag
         *
         * @readonly
         * @static
         * @type {boolean}
         * @memberof WudianMgr
         */
        get: function () {
            var mainSwitch = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().wu_XXPTW_dian == 1;
            var launchScene = null;
            if (Laya.Browser.onMiniGame) {
                launchScene = WXAPI_1.default.get_XXPTW_Launch_XXPTW_Options_XXPTW_Sync().scene;
            }
            else if (Laya.Browser.onQQMiniGame) {
                launchScene = QQMiniGameAPI_1.default.get_XXPTW_Launch_XXPTW_Options_XXPTW_Sync().scene;
            }
            var noEnterBySearch = true;
            var wudianSceneList = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().wu_XXPTW_dian_XXPTW_Scene_XXPTW_List;
            for (var i = 0; i < wudianSceneList.length; ++i) {
                var wudianSceneValue = wudianSceneList[i];
                if (launchScene == wudianSceneValue) {
                    noEnterBySearch = false;
                }
            }
            var isOpenTime = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().wudianTimeAvaliable;
            var ipnotBlock = Wu_XXPTW_dian_XXPTW_Mgr._ipBlockFlag == 0;
            /* 测试功能，等删 */
            // ipnotBlock = true;
            console.log("误点Flag状态: ", "总开关:", mainSwitch, "场景进入", noEnterBySearch, "IP未被屏蔽", ipnotBlock, "打开时间", isOpenTime);
            return mainSwitch && noEnterBySearch && ipnotBlock && isOpenTime;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Wu_XXPTW_dian_XXPTW_Mgr, "No_XXPTW_Time_XXPTW_Wudian_XXPTW_Flag", {
        /**
         * 没有涉及到定时开关的wudianFlag,自行整合按照时间开关的效果
         *
         * @static
         * @returns {boolean}
         * @memberof WudianMgr
         */
        get: function () {
            var mainSwitch = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().wu_XXPTW_dian == 1;
            var launchScene = null;
            if (Laya.Browser.onMiniGame) {
                launchScene = WXAPI_1.default.get_XXPTW_Launch_XXPTW_Options_XXPTW_Sync().scene;
            }
            else if (Laya.Browser.onQQMiniGame) {
                launchScene = QQMiniGameAPI_1.default.get_XXPTW_Launch_XXPTW_Options_XXPTW_Sync().scene;
            }
            var noEnterBySearch = true;
            var wudianSceneList = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().wu_XXPTW_dian_XXPTW_Scene_XXPTW_List;
            for (var i = 0; i < wudianSceneList.length; ++i) {
                var wudianSceneValue = wudianSceneList[i];
                if (launchScene == wudianSceneValue) {
                    noEnterBySearch = false;
                }
            }
            var ipnotBlock = Wu_XXPTW_dian_XXPTW_Mgr._ipBlockFlag == 0;
            /* 测试功能，等删 */
            // ipnotBlock = true;
            console.log("误点Flag状态: ", "总开关:", mainSwitch, "场景进入", noEnterBySearch, "IP未被屏蔽");
            return mainSwitch && noEnterBySearch && ipnotBlock;
        },
        enumerable: true,
        configurable: true
    });
    Wu_XXPTW_dian_XXPTW_Mgr._ipBlockFlag = -1;
    return Wu_XXPTW_dian_XXPTW_Mgr;
}());
exports.default = Wu_XXPTW_dian_XXPTW_Mgr;
},{"../Config/AppSwitchConfig":5,"../Event/EventDef":6,"../Event/EventMgr":7,"../Net/HttpUnit":35,"../QQMiniGameAPI":39,"../WXAPI":78}],34:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CryptoJS = require("./aes.js");
var Aes_XXPTW_Tools = /** @class */ (function () {
    function Aes_XXPTW_Tools() {
    }
    //加密
    Aes_XXPTW_Tools.en_XXPTW_crypt = function (str) {
        var key = CryptoJS.enc.Utf8.parse(Aes_XXPTW_Tools._XXPTW_KEY_XXPTW_); // 秘钥
        var iv = CryptoJS.enc.Utf8.parse(Aes_XXPTW_Tools._XXPTW_IV_XXPTW_); //向量iv
        var encrypted = CryptoJS.AES.encrypt(str, key, { iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });
        return encrypted.toString();
    };
    //解密
    Aes_XXPTW_Tools.de_XXPTW_crypt = function (str) {
        var key = CryptoJS.enc.Utf8.parse(Aes_XXPTW_Tools._XXPTW_KEY_XXPTW_); // 秘钥
        var iv = CryptoJS.enc.Utf8.parse(Aes_XXPTW_Tools._XXPTW_IV_XXPTW_); //向量iv
        var decrypted = CryptoJS.AES.decrypt(str, key, { iv: iv, padding: CryptoJS.pad.Pkcs7 });
        return decrypted.toString(CryptoJS.enc.Utf8);
    };
    Aes_XXPTW_Tools._XXPTW_KEY_XXPTW_ = 'b#63fFJ6AvkK3YT*';
    Aes_XXPTW_Tools._XXPTW_IV_XXPTW_ = 'J$f4DU%sNL73M&Go';
    return Aes_XXPTW_Tools;
}());
exports.default = Aes_XXPTW_Tools;
},{"./aes.js":37}],35:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var NetConfig_1 = require("./NetConfig");
var User_1 = require("../User/User");
var AesTools_1 = require("./AesTools");
var AppConfig_1 = require("../AppConfig");
var request_XXPTW_Data = /** @class */ (function () {
    function request_XXPTW_Data() {
        this.meth_XXPTW_ = "post";
        this.url_XXPTW_ = "";
        this.on_XXPTW_Success = null;
        this.on_XXPTW_Fail = null;
        this._XXPTW_data_XXPTW_ = {};
    }
    return request_XXPTW_Data;
}());
exports.request_XXPTW_Data = request_XXPTW_Data;
var Http_XXPTW_Unit = /** @class */ (function () {
    function Http_XXPTW_Unit() {
    }
    Http_XXPTW_Unit.request_XXPTW_ = function (req) {
        if (req.url_XXPTW_.indexOf("https://") > -1 ||
            req.url_XXPTW_.indexOf("http://") > -1) {
            req.url_XXPTW_ = req.url_XXPTW_;
        }
        else {
            req.url_XXPTW_ = NetConfig_1.default.server_XXPTW_Url + req.url_XXPTW_;
        }
        var completeFunc = function (res) {
            console.log(res, "http Success");
            if (req.on_XXPTW_Success) {
                req.on_XXPTW_Success(res);
            }
            req.on_XXPTW_Success = null;
            req = null;
        };
        var errorFunc = function (res) {
            console.log(res, "http fail");
            if (req.on_XXPTW_Fail) {
                req.on_XXPTW_Fail(res);
            }
            req.on_XXPTW_Fail = null;
            req = null;
        };
        var xhr = new Laya.HttpRequest();
        xhr.once(Laya.Event.COMPLETE, Http_XXPTW_Unit, completeFunc);
        xhr.once(Laya.Event.ERROR, Http_XXPTW_Unit, errorFunc);
        var dataStr = JSON.stringify(req._XXPTW_data_XXPTW_);
        if (Laya.Browser.onMiniGame || AppConfig_1.default.onTTMiniGame) {
            req._XXPTW_data_XXPTW_.code = User_1.default.code_XXPTW_;
        }
        else if (Laya.Browser.onQGMiniGame) //OPPO小游戏
         {
            req._XXPTW_data_XXPTW_.oppotoken = User_1.default.code_XXPTW_;
        }
        else if (Laya.Browser.onQQMiniGame) //qq小游戏
         {
            req._XXPTW_data_XXPTW_.code = User_1.default.code_XXPTW_;
        }
        else {
            req._XXPTW_data_XXPTW_.code = User_1.default.code_XXPTW_;
        }
        var time = "time=" + String(Date.now());
        var header = [
            "Content-Type", "application/json",
            "state", NetConfig_1.default.state_XXPTW_,
            "gameid", NetConfig_1.default.game_XXPTW_id,
            "sign", AesTools_1.default.en_XXPTW_crypt(time),
        ];
        if (User_1.default._XXPTW_token) {
            header.push("token");
            header.push(User_1.default._XXPTW_token);
        }
        xhr.send(req.url_XXPTW_, JSON.stringify(req._XXPTW_data_XXPTW_), req.meth_XXPTW_, "json", header);
    };
    //todo:这里添加你们和服务器相互的接口
    Http_XXPTW_Unit.login_XXPTW_ = function (onSuccess, onFail) {
        var req = new request_XXPTW_Data();
        req.url_XXPTW_ = NetConfig_1.default.Login_XXPTW_;
        req.on_XXPTW_Success = onSuccess;
        req.on_XXPTW_Fail = onFail;
        Http_XXPTW_Unit.request_XXPTW_(req);
    };
    Http_XXPTW_Unit.save_XXPTW_Game_XXPTW_Data = function (gameData, onSuccess, onFail) {
        var req = new request_XXPTW_Data();
        req.url_XXPTW_ = NetConfig_1.default.Save_XXPTW_Game_XXPTW_Data;
        req._XXPTW_data_XXPTW_.gameData = gameData;
        req.on_XXPTW_Success = onSuccess;
        req.on_XXPTW_Fail = onFail;
        Http_XXPTW_Unit.request_XXPTW_(req);
    };
    Http_XXPTW_Unit.get_XXPTW_Game_XXPTW_Data = function (onSuccess, onFail) {
        var req = new request_XXPTW_Data();
        req.url_XXPTW_ = NetConfig_1.default.Get_XXPTW_User;
        req.on_XXPTW_Success = onSuccess;
        req.on_XXPTW_Fail = onFail;
        Http_XXPTW_Unit.request_XXPTW_(req);
    };
    /**
     * IP屏蔽方法，需要在NetConfig类中设置IpBlock的接口地址
     * onSuccess方法返回参数的范例为 Object {code: 0, msg: "准一线", time: "1571034447", data: null}
     * @static
     * @memberof HttpUnit
     */
    Http_XXPTW_Unit.Get_XXPTW_Ip_XXPTW_Block = function (onSuccess, onFail) {
        if (-1 != NetConfig_1.default.game_XXPTW_id) {
            var req = new request_XXPTW_Data();
            req.url_XXPTW_ = NetConfig_1.default.Ip_XXPTW_Block;
            req.on_XXPTW_Success = onSuccess;
            req.on_XXPTW_Fail = onFail;
            Http_XXPTW_Unit.request_XXPTW_(req);
        }
    };
    Http_XXPTW_Unit.report_XXPTW_Export = function (appid, game_name, onSuccess, onFail) {
        var req = new request_XXPTW_Data();
        req.url_XXPTW_ = NetConfig_1.default.report_XXPTW_Export;
        req._XXPTW_data_XXPTW_.wbappid = appid;
        req._XXPTW_data_XXPTW_.game_name = game_name;
        req.on_XXPTW_Success = onSuccess;
        req.on_XXPTW_Fail = onFail;
        Http_XXPTW_Unit.request_XXPTW_(req);
    };
    Http_XXPTW_Unit.report_XXPTW_Import = function (appid, channel, onSuccess, onFail) {
        var req = new request_XXPTW_Data();
        req.url_XXPTW_ = NetConfig_1.default.report_XXPTW_Import;
        req._XXPTW_data_XXPTW_.wbappid = appid;
        req._XXPTW_data_XXPTW_.channel = channel;
        req.on_XXPTW_Success = onSuccess;
        req.on_XXPTW_Fail = onFail;
        Http_XXPTW_Unit.request_XXPTW_(req);
    };
    Http_XXPTW_Unit.Get_XXPTW_user_XXPTW_ip = function (onSuccess, onFail) {
        var req = new request_XXPTW_Data();
        req.url_XXPTW_ = NetConfig_1.default.get_XXPTW_user_XXPTW_ip;
        req.on_XXPTW_Success = onSuccess;
        req.on_XXPTW_Fail = onFail;
        Http_XXPTW_Unit.request_XXPTW_(req);
    };
    return Http_XXPTW_Unit;
}());
exports.default = Http_XXPTW_Unit;
},{"../AppConfig":2,"../User/User":45,"./AesTools":34,"./NetConfig":36}],36:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Net_XXPTW_Config = /** @class */ (function () {
    function Net_XXPTW_Config() {
    }
    Net_XXPTW_Config.state_XXPTW_ = 0;
    Net_XXPTW_Config.game_XXPTW_id = 113;
    Net_XXPTW_Config.server_XXPTW_Url = "https://sysxue.5iape.com";
    Net_XXPTW_Config.Login_XXPTW_ = "https://sysxue.5iape.com/api/login/login/wxclogin";
    Net_XXPTW_Config.Save_XXPTW_Game_XXPTW_Data = "/api/allgame/index/savecd";
    Net_XXPTW_Config.Get_XXPTW_User = "/api/allgame/index/getuser";
    /* 用来对IP地址进行屏蔽的接口地址，可以使用接口的返回值让某些广告逻辑在微信的审核地区(广州)发生变化 */
    Net_XXPTW_Config.Ip_XXPTW_Block = "https://sysxue.5iape.com/api/share/ip_select";
    Net_XXPTW_Config.report_XXPTW_Export = "/api/share/getwaibuad";
    Net_XXPTW_Config.report_XXPTW_Import = "/api/share/getzjadml";
    Net_XXPTW_Config.get_XXPTW_user_XXPTW_ip = "/api/share/getuserip";
    return Net_XXPTW_Config;
}());
exports.default = Net_XXPTW_Config;
},{}],37:[function(require,module,exports){
var CryptoJS = CryptoJS || function (u, p) {
  var d = {}, l = d.lib = {}, s = function () { }, t = l.Base = { extend: function (a) { s.prototype = this; var c = new s; a && c.mixIn(a); c.hasOwnProperty("init") || (c.init = function () { c.$super.init.apply(this, arguments) }); c.init.prototype = c; c.$super = this; return c }, create: function () { var a = this.extend(); a.init.apply(a, arguments); return a }, init: function () { }, mixIn: function (a) { for (var c in a) a.hasOwnProperty(c) && (this[c] = a[c]); a.hasOwnProperty("toString") && (this.toString = a.toString) }, clone: function () { return this.init.prototype.extend(this) } },
  r = l.WordArray = t.extend({
    init: function (a, c) { a = this.words = a || []; this.sigBytes = c != p ? c : 4 * a.length }, toString: function (a) { return (a || v).stringify(this) }, concat: function (a) { var c = this.words, e = a.words, j = this.sigBytes; a = a.sigBytes; this.clamp(); if (j % 4) for (var k = 0; k < a; k++)c[j + k >>> 2] |= (e[k >>> 2] >>> 24 - 8 * (k % 4) & 255) << 24 - 8 * ((j + k) % 4); else if (65535 < e.length) for (k = 0; k < a; k += 4)c[j + k >>> 2] = e[k >>> 2]; else c.push.apply(c, e); this.sigBytes += a; return this }, clamp: function () {
      var a = this.words, c = this.sigBytes; a[c >>> 2] &= 4294967295 <<
        32 - 8 * (c % 4); a.length = u.ceil(c / 4)
    }, clone: function () { var a = t.clone.call(this); a.words = this.words.slice(0); return a }, random: function (a) { for (var c = [], e = 0; e < a; e += 4)c.push(4294967296 * u.random() | 0); return new r.init(c, a) }
  }), w = d.enc = {}, v = w.Hex = {
    stringify: function (a) { var c = a.words; a = a.sigBytes; for (var e = [], j = 0; j < a; j++) { var k = c[j >>> 2] >>> 24 - 8 * (j % 4) & 255; e.push((k >>> 4).toString(16)); e.push((k & 15).toString(16)) } return e.join("") }, parse: function (a) {
      for (var c = a.length, e = [], j = 0; j < c; j += 2)e[j >>> 3] |= parseInt(a.substr(j,
        2), 16) << 24 - 4 * (j % 8); return new r.init(e, c / 2)
    }
  }, b = w.Latin1 = { stringify: function (a) { var c = a.words; a = a.sigBytes; for (var e = [], j = 0; j < a; j++)e.push(String.fromCharCode(c[j >>> 2] >>> 24 - 8 * (j % 4) & 255)); return e.join("") }, parse: function (a) { for (var c = a.length, e = [], j = 0; j < c; j++)e[j >>> 2] |= (a.charCodeAt(j) & 255) << 24 - 8 * (j % 4); return new r.init(e, c) } }, x = w.Utf8 = { stringify: function (a) { try { return decodeURIComponent(escape(b.stringify(a))) } catch (c) { throw Error("Malformed UTF-8 data"); } }, parse: function (a) { return b.parse(unescape(encodeURIComponent(a))) } },
  q = l.BufferedBlockAlgorithm = t.extend({
    reset: function () { this._data = new r.init; this._nDataBytes = 0 }, _append: function (a) { "string" == typeof a && (a = x.parse(a)); this._data.concat(a); this._nDataBytes += a.sigBytes }, _process: function (a) { var c = this._data, e = c.words, j = c.sigBytes, k = this.blockSize, b = j / (4 * k), b = a ? u.ceil(b) : u.max((b | 0) - this._minBufferSize, 0); a = b * k; j = u.min(4 * a, j); if (a) { for (var q = 0; q < a; q += k)this._doProcessBlock(e, q); q = e.splice(0, a); c.sigBytes -= j } return new r.init(q, j) }, clone: function () {
      var a = t.clone.call(this);
      a._data = this._data.clone(); return a
    }, _minBufferSize: 0
  }); l.Hasher = q.extend({
    cfg: t.extend(), init: function (a) { this.cfg = this.cfg.extend(a); this.reset() }, reset: function () { q.reset.call(this); this._doReset() }, update: function (a) { this._append(a); this._process(); return this }, finalize: function (a) { a && this._append(a); return this._doFinalize() }, blockSize: 16, _createHelper: function (a) { return function (b, e) { return (new a.init(e)).finalize(b) } }, _createHmacHelper: function (a) {
      return function (b, e) {
        return (new n.HMAC.init(a,
          e)).finalize(b)
      }
    }
  }); var n = d.algo = {}; return d
}(Math);
(function () {
  var u = CryptoJS, p = u.lib.WordArray; u.enc.Base64 = {
    stringify: function (d) { var l = d.words, p = d.sigBytes, t = this._map; d.clamp(); d = []; for (var r = 0; r < p; r += 3)for (var w = (l[r >>> 2] >>> 24 - 8 * (r % 4) & 255) << 16 | (l[r + 1 >>> 2] >>> 24 - 8 * ((r + 1) % 4) & 255) << 8 | l[r + 2 >>> 2] >>> 24 - 8 * ((r + 2) % 4) & 255, v = 0; 4 > v && r + 0.75 * v < p; v++)d.push(t.charAt(w >>> 6 * (3 - v) & 63)); if (l = t.charAt(64)) for (; d.length % 4;)d.push(l); return d.join("") }, parse: function (d) {
      var l = d.length, s = this._map, t = s.charAt(64); t && (t = d.indexOf(t), -1 != t && (l = t)); for (var t = [], r = 0, w = 0; w <
        l; w++)if (w % 4) { var v = s.indexOf(d.charAt(w - 1)) << 2 * (w % 4), b = s.indexOf(d.charAt(w)) >>> 6 - 2 * (w % 4); t[r >>> 2] |= (v | b) << 24 - 8 * (r % 4); r++ } return p.create(t, r)
    }, _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="
  }
})();
(function (u) {
  function p(b, n, a, c, e, j, k) { b = b + (n & a | ~n & c) + e + k; return (b << j | b >>> 32 - j) + n } function d(b, n, a, c, e, j, k) { b = b + (n & c | a & ~c) + e + k; return (b << j | b >>> 32 - j) + n } function l(b, n, a, c, e, j, k) { b = b + (n ^ a ^ c) + e + k; return (b << j | b >>> 32 - j) + n } function s(b, n, a, c, e, j, k) { b = b + (a ^ (n | ~c)) + e + k; return (b << j | b >>> 32 - j) + n } for (var t = CryptoJS, r = t.lib, w = r.WordArray, v = r.Hasher, r = t.algo, b = [], x = 0; 64 > x; x++)b[x] = 4294967296 * u.abs(u.sin(x + 1)) | 0; r = r.MD5 = v.extend({
    _doReset: function () { this._hash = new w.init([1732584193, 4023233417, 2562383102, 271733878]) },
    _doProcessBlock: function (q, n) {
      for (var a = 0; 16 > a; a++) { var c = n + a, e = q[c]; q[c] = (e << 8 | e >>> 24) & 16711935 | (e << 24 | e >>> 8) & 4278255360 } var a = this._hash.words, c = q[n + 0], e = q[n + 1], j = q[n + 2], k = q[n + 3], z = q[n + 4], r = q[n + 5], t = q[n + 6], w = q[n + 7], v = q[n + 8], A = q[n + 9], B = q[n + 10], C = q[n + 11], u = q[n + 12], D = q[n + 13], E = q[n + 14], x = q[n + 15], f = a[0], m = a[1], g = a[2], h = a[3], f = p(f, m, g, h, c, 7, b[0]), h = p(h, f, m, g, e, 12, b[1]), g = p(g, h, f, m, j, 17, b[2]), m = p(m, g, h, f, k, 22, b[3]), f = p(f, m, g, h, z, 7, b[4]), h = p(h, f, m, g, r, 12, b[5]), g = p(g, h, f, m, t, 17, b[6]), m = p(m, g, h, f, w, 22, b[7]),
        f = p(f, m, g, h, v, 7, b[8]), h = p(h, f, m, g, A, 12, b[9]), g = p(g, h, f, m, B, 17, b[10]), m = p(m, g, h, f, C, 22, b[11]), f = p(f, m, g, h, u, 7, b[12]), h = p(h, f, m, g, D, 12, b[13]), g = p(g, h, f, m, E, 17, b[14]), m = p(m, g, h, f, x, 22, b[15]), f = d(f, m, g, h, e, 5, b[16]), h = d(h, f, m, g, t, 9, b[17]), g = d(g, h, f, m, C, 14, b[18]), m = d(m, g, h, f, c, 20, b[19]), f = d(f, m, g, h, r, 5, b[20]), h = d(h, f, m, g, B, 9, b[21]), g = d(g, h, f, m, x, 14, b[22]), m = d(m, g, h, f, z, 20, b[23]), f = d(f, m, g, h, A, 5, b[24]), h = d(h, f, m, g, E, 9, b[25]), g = d(g, h, f, m, k, 14, b[26]), m = d(m, g, h, f, v, 20, b[27]), f = d(f, m, g, h, D, 5, b[28]), h = d(h, f,
          m, g, j, 9, b[29]), g = d(g, h, f, m, w, 14, b[30]), m = d(m, g, h, f, u, 20, b[31]), f = l(f, m, g, h, r, 4, b[32]), h = l(h, f, m, g, v, 11, b[33]), g = l(g, h, f, m, C, 16, b[34]), m = l(m, g, h, f, E, 23, b[35]), f = l(f, m, g, h, e, 4, b[36]), h = l(h, f, m, g, z, 11, b[37]), g = l(g, h, f, m, w, 16, b[38]), m = l(m, g, h, f, B, 23, b[39]), f = l(f, m, g, h, D, 4, b[40]), h = l(h, f, m, g, c, 11, b[41]), g = l(g, h, f, m, k, 16, b[42]), m = l(m, g, h, f, t, 23, b[43]), f = l(f, m, g, h, A, 4, b[44]), h = l(h, f, m, g, u, 11, b[45]), g = l(g, h, f, m, x, 16, b[46]), m = l(m, g, h, f, j, 23, b[47]), f = s(f, m, g, h, c, 6, b[48]), h = s(h, f, m, g, w, 10, b[49]), g = s(g, h, f, m,
            E, 15, b[50]), m = s(m, g, h, f, r, 21, b[51]), f = s(f, m, g, h, u, 6, b[52]), h = s(h, f, m, g, k, 10, b[53]), g = s(g, h, f, m, B, 15, b[54]), m = s(m, g, h, f, e, 21, b[55]), f = s(f, m, g, h, v, 6, b[56]), h = s(h, f, m, g, x, 10, b[57]), g = s(g, h, f, m, t, 15, b[58]), m = s(m, g, h, f, D, 21, b[59]), f = s(f, m, g, h, z, 6, b[60]), h = s(h, f, m, g, C, 10, b[61]), g = s(g, h, f, m, j, 15, b[62]), m = s(m, g, h, f, A, 21, b[63]); a[0] = a[0] + f | 0; a[1] = a[1] + m | 0; a[2] = a[2] + g | 0; a[3] = a[3] + h | 0
    }, _doFinalize: function () {
      var b = this._data, n = b.words, a = 8 * this._nDataBytes, c = 8 * b.sigBytes; n[c >>> 5] |= 128 << 24 - c % 32; var e = u.floor(a /
        4294967296); n[(c + 64 >>> 9 << 4) + 15] = (e << 8 | e >>> 24) & 16711935 | (e << 24 | e >>> 8) & 4278255360; n[(c + 64 >>> 9 << 4) + 14] = (a << 8 | a >>> 24) & 16711935 | (a << 24 | a >>> 8) & 4278255360; b.sigBytes = 4 * (n.length + 1); this._process(); b = this._hash; n = b.words; for (a = 0; 4 > a; a++)c = n[a], n[a] = (c << 8 | c >>> 24) & 16711935 | (c << 24 | c >>> 8) & 4278255360; return b
    }, clone: function () { var b = v.clone.call(this); b._hash = this._hash.clone(); return b }
  }); t.MD5 = v._createHelper(r); t.HmacMD5 = v._createHmacHelper(r)
})(Math);
(function () {
  var u = CryptoJS, p = u.lib, d = p.Base, l = p.WordArray, p = u.algo, s = p.EvpKDF = d.extend({ cfg: d.extend({ keySize: 4, hasher: p.MD5, iterations: 1 }), init: function (d) { this.cfg = this.cfg.extend(d) }, compute: function (d, r) { for (var p = this.cfg, s = p.hasher.create(), b = l.create(), u = b.words, q = p.keySize, p = p.iterations; u.length < q;) { n && s.update(n); var n = s.update(d).finalize(r); s.reset(); for (var a = 1; a < p; a++)n = s.finalize(n), s.reset(); b.concat(n) } b.sigBytes = 4 * q; return b } }); u.EvpKDF = function (d, l, p) {
    return s.create(p).compute(d,
      l)
  }
})();
CryptoJS.lib.Cipher || function (u) {
  var p = CryptoJS, d = p.lib, l = d.Base, s = d.WordArray, t = d.BufferedBlockAlgorithm, r = p.enc.Base64, w = p.algo.EvpKDF, v = d.Cipher = t.extend({
    cfg: l.extend(), createEncryptor: function (e, a) { return this.create(this._ENC_XFORM_MODE, e, a) }, createDecryptor: function (e, a) { return this.create(this._DEC_XFORM_MODE, e, a) }, init: function (e, a, b) { this.cfg = this.cfg.extend(b); this._xformMode = e; this._key = a; this.reset() }, reset: function () { t.reset.call(this); this._doReset() }, process: function (e) { this._append(e); return this._process() },
    finalize: function (e) { e && this._append(e); return this._doFinalize() }, keySize: 4, ivSize: 4, _ENC_XFORM_MODE: 1, _DEC_XFORM_MODE: 2, _createHelper: function (e) { return { encrypt: function (b, k, d) { return ("string" == typeof k ? c : a).encrypt(e, b, k, d) }, decrypt: function (b, k, d) { return ("string" == typeof k ? c : a).decrypt(e, b, k, d) } } }
  }); d.StreamCipher = v.extend({ _doFinalize: function () { return this._process(!0) }, blockSize: 1 }); var b = p.mode = {}, x = function (e, a, b) {
    var c = this._iv; c ? this._iv = u : c = this._prevBlock; for (var d = 0; d < b; d++)e[a + d] ^=
      c[d]
  }, q = (d.BlockCipherMode = l.extend({ createEncryptor: function (e, a) { return this.Encryptor.create(e, a) }, createDecryptor: function (e, a) { return this.Decryptor.create(e, a) }, init: function (e, a) { this._cipher = e; this._iv = a } })).extend(); q.Encryptor = q.extend({ processBlock: function (e, a) { var b = this._cipher, c = b.blockSize; x.call(this, e, a, c); b.encryptBlock(e, a); this._prevBlock = e.slice(a, a + c) } }); q.Decryptor = q.extend({
    processBlock: function (e, a) {
      var b = this._cipher, c = b.blockSize, d = e.slice(a, a + c); b.decryptBlock(e, a); x.call(this,
        e, a, c); this._prevBlock = d
    }
  }); b = b.CBC = q; q = (p.pad = {}).Pkcs7 = { pad: function (a, b) { for (var c = 4 * b, c = c - a.sigBytes % c, d = c << 24 | c << 16 | c << 8 | c, l = [], n = 0; n < c; n += 4)l.push(d); c = s.create(l, c); a.concat(c) }, unpad: function (a) { a.sigBytes -= a.words[a.sigBytes - 1 >>> 2] & 255 } }; d.BlockCipher = v.extend({
    cfg: v.cfg.extend({ mode: b, padding: q }), reset: function () {
      v.reset.call(this); var a = this.cfg, b = a.iv, a = a.mode; if (this._xformMode == this._ENC_XFORM_MODE) var c = a.createEncryptor; else c = a.createDecryptor, this._minBufferSize = 1; this._mode = c.call(a,
        this, b && b.words)
    }, _doProcessBlock: function (a, b) { this._mode.processBlock(a, b) }, _doFinalize: function () { var a = this.cfg.padding; if (this._xformMode == this._ENC_XFORM_MODE) { a.pad(this._data, this.blockSize); var b = this._process(!0) } else b = this._process(!0), a.unpad(b); return b }, blockSize: 4
  }); var n = d.CipherParams = l.extend({ init: function (a) { this.mixIn(a) }, toString: function (a) { return (a || this.formatter).stringify(this) } }), b = (p.format = {}).OpenSSL = {
    stringify: function (a) {
      var b = a.ciphertext; a = a.salt; return (a ? s.create([1398893684,
        1701076831]).concat(a).concat(b) : b).toString(r)
    }, parse: function (a) { a = r.parse(a); var b = a.words; if (1398893684 == b[0] && 1701076831 == b[1]) { var c = s.create(b.slice(2, 4)); b.splice(0, 4); a.sigBytes -= 16 } return n.create({ ciphertext: a, salt: c }) }
  }, a = d.SerializableCipher = l.extend({
    cfg: l.extend({ format: b }), encrypt: function (a, b, c, d) { d = this.cfg.extend(d); var l = a.createEncryptor(c, d); b = l.finalize(b); l = l.cfg; return n.create({ ciphertext: b, key: c, iv: l.iv, algorithm: a, mode: l.mode, padding: l.padding, blockSize: a.blockSize, formatter: d.format }) },
    decrypt: function (a, b, c, d) { d = this.cfg.extend(d); b = this._parse(b, d.format); return a.createDecryptor(c, d).finalize(b.ciphertext) }, _parse: function (a, b) { return "string" == typeof a ? b.parse(a, this) : a }
  }), p = (p.kdf = {}).OpenSSL = { execute: function (a, b, c, d) { d || (d = s.random(8)); a = w.create({ keySize: b + c }).compute(a, d); c = s.create(a.words.slice(b), 4 * c); a.sigBytes = 4 * b; return n.create({ key: a, iv: c, salt: d }) } }, c = d.PasswordBasedCipher = a.extend({
    cfg: a.cfg.extend({ kdf: p }), encrypt: function (b, c, d, l) {
      l = this.cfg.extend(l); d = l.kdf.execute(d,
        b.keySize, b.ivSize); l.iv = d.iv; b = a.encrypt.call(this, b, c, d.key, l); b.mixIn(d); return b
    }, decrypt: function (b, c, d, l) { l = this.cfg.extend(l); c = this._parse(c, l.format); d = l.kdf.execute(d, b.keySize, b.ivSize, c.salt); l.iv = d.iv; return a.decrypt.call(this, b, c, d.key, l) }
  })
}();
(function () {
  for (var u = CryptoJS, p = u.lib.BlockCipher, d = u.algo, l = [], s = [], t = [], r = [], w = [], v = [], b = [], x = [], q = [], n = [], a = [], c = 0; 256 > c; c++)a[c] = 128 > c ? c << 1 : c << 1 ^ 283; for (var e = 0, j = 0, c = 0; 256 > c; c++) { var k = j ^ j << 1 ^ j << 2 ^ j << 3 ^ j << 4, k = k >>> 8 ^ k & 255 ^ 99; l[e] = k; s[k] = e; var z = a[e], F = a[z], G = a[F], y = 257 * a[k] ^ 16843008 * k; t[e] = y << 24 | y >>> 8; r[e] = y << 16 | y >>> 16; w[e] = y << 8 | y >>> 24; v[e] = y; y = 16843009 * G ^ 65537 * F ^ 257 * z ^ 16843008 * e; b[k] = y << 24 | y >>> 8; x[k] = y << 16 | y >>> 16; q[k] = y << 8 | y >>> 24; n[k] = y; e ? (e = z ^ a[a[a[G ^ z]]], j ^= a[a[j]]) : e = j = 1 } var H = [0, 1, 2, 4, 8,
    16, 32, 64, 128, 27, 54], d = d.AES = p.extend({
      _doReset: function () {
        for (var a = this._key, c = a.words, d = a.sigBytes / 4, a = 4 * ((this._nRounds = d + 6) + 1), e = this._keySchedule = [], j = 0; j < a; j++)if (j < d) e[j] = c[j]; else { var k = e[j - 1]; j % d ? 6 < d && 4 == j % d && (k = l[k >>> 24] << 24 | l[k >>> 16 & 255] << 16 | l[k >>> 8 & 255] << 8 | l[k & 255]) : (k = k << 8 | k >>> 24, k = l[k >>> 24] << 24 | l[k >>> 16 & 255] << 16 | l[k >>> 8 & 255] << 8 | l[k & 255], k ^= H[j / d | 0] << 24); e[j] = e[j - d] ^ k } c = this._invKeySchedule = []; for (d = 0; d < a; d++)j = a - d, k = d % 4 ? e[j] : e[j - 4], c[d] = 4 > d || 4 >= j ? k : b[l[k >>> 24]] ^ x[l[k >>> 16 & 255]] ^ q[l[k >>>
          8 & 255]] ^ n[l[k & 255]]
      }, encryptBlock: function (a, b) { this._doCryptBlock(a, b, this._keySchedule, t, r, w, v, l) }, decryptBlock: function (a, c) { var d = a[c + 1]; a[c + 1] = a[c + 3]; a[c + 3] = d; this._doCryptBlock(a, c, this._invKeySchedule, b, x, q, n, s); d = a[c + 1]; a[c + 1] = a[c + 3]; a[c + 3] = d }, _doCryptBlock: function (a, b, c, d, e, j, l, f) {
        for (var m = this._nRounds, g = a[b] ^ c[0], h = a[b + 1] ^ c[1], k = a[b + 2] ^ c[2], n = a[b + 3] ^ c[3], p = 4, r = 1; r < m; r++)var q = d[g >>> 24] ^ e[h >>> 16 & 255] ^ j[k >>> 8 & 255] ^ l[n & 255] ^ c[p++], s = d[h >>> 24] ^ e[k >>> 16 & 255] ^ j[n >>> 8 & 255] ^ l[g & 255] ^ c[p++], t =
          d[k >>> 24] ^ e[n >>> 16 & 255] ^ j[g >>> 8 & 255] ^ l[h & 255] ^ c[p++], n = d[n >>> 24] ^ e[g >>> 16 & 255] ^ j[h >>> 8 & 255] ^ l[k & 255] ^ c[p++], g = q, h = s, k = t; q = (f[g >>> 24] << 24 | f[h >>> 16 & 255] << 16 | f[k >>> 8 & 255] << 8 | f[n & 255]) ^ c[p++]; s = (f[h >>> 24] << 24 | f[k >>> 16 & 255] << 16 | f[n >>> 8 & 255] << 8 | f[g & 255]) ^ c[p++]; t = (f[k >>> 24] << 24 | f[n >>> 16 & 255] << 16 | f[g >>> 8 & 255] << 8 | f[h & 255]) ^ c[p++]; n = (f[n >>> 24] << 24 | f[g >>> 16 & 255] << 16 | f[h >>> 8 & 255] << 8 | f[k & 255]) ^ c[p++]; a[b] = q; a[b + 1] = s; a[b + 2] = t; a[b + 3] = n
      }, keySize: 8
    }); u.AES = p._createHelper(d)
})();

module.exports = CryptoJS;
},{}],38:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppConfig_1 = require("./AppConfig");
var HttpUnit_1 = require("./Net/HttpUnit");
var AppSwitchConfig_1 = require("./Config/AppSwitchConfig");
var ViewMgr_1 = require("./Mgr/ViewMgr");
var OPPO_XXPTW_API = /** @class */ (function () {
    function OPPO_XXPTW_API() {
    }
    Object.defineProperty(OPPO_XXPTW_API, "Banner_XXPTW_Instance", {
        get: function () {
            return OPPO_XXPTW_API._banner_XXPTW_;
        },
        enumerable: true,
        configurable: true
    });
    OPPO_XXPTW_API._XXPTW_Login_XXPTW_ = function (onSuccess, onFail) {
        if (Laya.Browser.onQGMiniGame) {
            Laya.Browser.window["qg"].login({
                success: function (res) {
                    var token = res.data.token;
                    onSuccess(token);
                    console.log("OPPO 登陆成功,获取到 token : " + token);
                    for (var key in res) {
                        console.log(key, res[key]);
                    }
                },
                fail: function (res) {
                    console.log("OPPO 登陆失败", res);
                    for (var key in res) {
                        console.log(key, res[key]);
                    }
                }
            });
        }
    };
    OPPO_XXPTW_API.init_XXPTW_AdService = function (onSuccess, onFail, onComplete) {
        Laya.Browser.window["qg"].initAdService({
            appId: AppConfig_1.default.App_XXPTW_ID,
            isDebug: false,
            success: function (res) {
                console.log("oppo initAdService success");
                if (onSuccess) {
                    onSuccess(res);
                }
            },
            fail: function (res) {
                console.log("oppo initAdService fail: ", res.code, res.msg);
                if (onFail) {
                    onFail(res);
                }
            },
            complete: function (res) {
                console.log("oppo initAdService complete");
                if (onComplete) {
                    onComplete(res);
                }
            }
        });
    };
    OPPO_XXPTW_API.show_XXPTW_Reward_XXPTW_edVideoAd = function (onAdClose, onFailed) {
        if (Laya.Browser.onQGMiniGame) {
            var videoAd = Laya.Browser.window["qg"].createRewardedVideoAd({
                posId: OPPO_XXPTW_API.ad_XXPTW_UnitId,
            });
            videoAd.onLoad(function () {
                console.log("oppo 视频广告加载完成");
                videoAd.show();
            });
            videoAd.onVideoStart(function () {
                console.log("oppo 视频广告开始播放");
            });
            videoAd.onClose(function (res) {
                if (res.isEnded) {
                    console.log("oppo 视频广告观看 完成");
                    onAdClose(true);
                }
                else {
                    console.log("oppo 视频广告观看 未完成");
                    onAdClose(false);
                }
                videoAd.destroy();
            });
            videoAd.onError(function (err) {
                console.log("oppo 视频广告获取失败", err);
                videoAd.destroy();
                onFailed();
            });
            videoAd.load();
        }
        else {
            onAdClose(true);
        }
    };
    OPPO_XXPTW_API.navigate_XXPTW_To_XXPTW_MiniProgram = function (pkgName, gameName, path, onSuccess, onFail, onComplate) {
        if (Laya.Browser.onQGMiniGame) {
            console.log("OPPO 跳转游戏： " + pkgName);
            HttpUnit_1.default.report_XXPTW_Export(pkgName, gameName, function (result) {
                if (1 == result.code) {
                    console.log("OPPO 导出上报成功");
                }
                else {
                    console.log("OPPO 导出上报失败", result.msg);
                }
            }, function (result) {
                console.log("OPPO 导出上报失败");
                for (var key in result) {
                    console.log(key, result[key]);
                }
            });
            var time = Date.now();
            while (Date.now() - time <= 500) {
            }
            Laya.Browser.window["qg"].navigateToMiniGame({
                pkgName: pkgName,
                path: path,
                extraData: {
                    from: AppConfig_1.default.App_XXPTW_ID
                },
                envVersion: 'release',
                success: function (res) {
                    if (onSuccess) {
                        onSuccess(res);
                    }
                },
                fail: function (res) {
                    if (onFail) {
                        onFail(res);
                    }
                },
            });
        }
    };
    OPPO_XXPTW_API.show_XXPTW_Interstitial_XXPTW_Ad = function (onAdClose, onFailed) {
        if (Laya.Browser.onQGMiniGame) {
            var insertAd = qg.createInsertAd({
                posId: OPPO_XXPTW_API.Ins_XXPTW_AdUnitId
            });
            insertAd.load();
            insertAd.onLoad(function () {
                console.log("插屏广告加载完成");
                insertAd.show();
            });
            insertAd.onShow(function () {
                console.log("插屏广告显示成功");
            });
            insertAd.onError(function (err) {
                console.log("插屏广告拉取失败", err);
                insertAd.destroy();
                if (onFailed) {
                    onFailed();
                }
            });
        }
        else {
            onAdClose();
        }
    };
    OPPO_XXPTW_API.show_XXPTW_Bannaer = function () {
        if (OPPO_XXPTW_API._banner_XXPTW_) {
            OPPO_XXPTW_API._banner_XXPTW_.show();
            return;
        }
        var bannerAd = qg.createBannerAd({
            posId: OPPO_XXPTW_API.banner_XXPTW_AdUnitId
        });
        bannerAd.show();
        OPPO_XXPTW_API._banner_XXPTW_ = bannerAd;
    };
    OPPO_XXPTW_API.hide_XXPTW_Banner = function () {
        if (OPPO_XXPTW_API._banner_XXPTW_) {
            OPPO_XXPTW_API._banner_XXPTW_.hide();
        }
    };
    OPPO_XXPTW_API.destroyBanner = function () {
        if (OPPO_XXPTW_API._banner_XXPTW_) {
            OPPO_XXPTW_API._banner_XXPTW_.destroy();
        }
        OPPO_XXPTW_API._banner_XXPTW_ = null;
    };
    OPPO_XXPTW_API.get_XXPTW_LaunchOpt_XXPTW_ionsSync = function () {
        var obj = { query: "", referrerInfo: { package: "", extraData: { appid: "" } } };
        if (Laya.Browser.onQGMiniGame) {
            var options = Laya.Browser.window["qg"].getLaunchOptionsSync();
            if (null != options && options != "") {
                obj = options;
            }
            else {
                console.log("没有启动设置！！！");
            }
            return obj;
        }
        return obj;
    };
    OPPO_XXPTW_API._XXPTW_share_XXPTW_ = function (complate, titel, imageUrl) {
        complate(false);
    };
    OPPO_XXPTW_API.create_XXPTW_DesktopIcon = function (onSuccess, onFail) {
        if (Laya.Browser.onQGMiniGame) {
            Laya.Browser.window["qg"].hasShortcutInstalled({
                success: function (res) {
                    if (res == false) {
                        Laya.Browser.window["qg"].installShortcut({
                            success: function () {
                                if (onSuccess) {
                                    onSuccess();
                                }
                            },
                            fail: function (err) {
                                if (onFail) {
                                    onFail();
                                }
                                console.log("创建桌面图标失败！！！！", err);
                                for (var key in err) {
                                    console.log(key, err);
                                }
                            },
                            complete: function () {
                            }
                        });
                    }
                    else {
                        console.log("桌面图标已存在！！！！");
                        if (onFail) {
                            onFail();
                        }
                    }
                },
                fail: function (err) {
                    if (onFail) {
                        onFail();
                    }
                    console.log("判断桌面图标是否存在失败！！！", err);
                    for (var key in err) {
                        console.log(key, err);
                    }
                },
                complete: function () {
                }
            });
        }
        else {
            if (onFail) {
                onFail();
            }
        }
    };
    //根据配置的概率自动弹出创建图标确认框
    OPPO_XXPTW_API.auto_XXPTW_Pop_XXPTW_Create_XXPTW_DestopIcon = function (onSuccess, onFail) {
        if (!Laya.Browser.onQGMiniGame) {
            if (null != onFail) {
                onFail();
            }
            return;
        }
        var rate = Math.floor(Math.random() * 100);
        if (rate <= AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().oppo_XXPTW_cfg.add_XXPTW_To_XXPTW_Desktop) {
            OPPO_XXPTW_API.create_XXPTW_DesktopIcon(onSuccess, onFail);
        }
        else {
            if (null != onFail) {
                onFail();
            }
        }
    };
    //显示OPPO原生界面
    OPPO_XXPTW_API.show_XXPTW_NativeAd = function (onSuccess, onFail) {
        if (!Laya.Browser.onQGMiniGame) {
            if (null != onFail) {
                onFail();
            }
            return;
        }
        if (1 == AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().oppo_XXPTW_cfg.yuan_XXPTW_sheng_XXPTW_Switch) {
            ViewMgr_1.default.ins_XXPTW_tance.open_XXPTW_View(ViewMgr_1.View_XXPTW_Def.OPPONativeView, null, function (v) {
                if (null != onSuccess) {
                    onSuccess(v);
                }
            });
        }
        else {
            if (null != onFail) {
                onFail();
            }
        }
    };
    OPPO_XXPTW_API.ad_XXPTW_UnitId = "";
    OPPO_XXPTW_API.banner_XXPTW_AdUnitId = "";
    OPPO_XXPTW_API.Ins_XXPTW_AdUnitId = "";
    OPPO_XXPTW_API.Open_XXPTW_Screen_XXPTW_AdUnitId = "";
    OPPO_XXPTW_API.Native_XXPTW_AdId = "";
    OPPO_XXPTW_API._banner_XXPTW_ = null;
    return OPPO_XXPTW_API;
}());
exports.default = OPPO_XXPTW_API;
},{"./AppConfig":2,"./Config/AppSwitchConfig":5,"./Mgr/ViewMgr":31,"./Net/HttpUnit":35}],39:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var QQ_XXPTW_Mini_XXPTW_GameAPI = /** @class */ (function () {
    function QQ_XXPTW_Mini_XXPTW_GameAPI() {
    }
    QQ_XXPTW_Mini_XXPTW_GameAPI._XXPTW_Login_XXPTW_ = function (onSuccess, onFail) {
        if (Laya.Browser.onQQMiniGame) {
            Laya.Browser.window["qq"].login({
                success: function (res) {
                    if (res.code) {
                        var code = res.code;
                        onSuccess(code);
                        console.log("登陆成功,获取到code : " + code);
                    }
                }
            });
        }
    };
    QQ_XXPTW_Mini_XXPTW_GameAPI.onRewarded_XXPTW_VideoAd_XXPTW_Load = function () {
        console.log('激励视频 广告加载完成');
    };
    QQ_XXPTW_Mini_XXPTW_GameAPI.onRewarded_XXPTW_VideoAd_XXPTW_Error = function (err) {
        console.log('激励视频 广告加载失败' + err);
        if (QQ_XXPTW_Mini_XXPTW_GameAPI._onRewarded_XXPTW_VideoAd_XXPTW_Failed) {
            QQ_XXPTW_Mini_XXPTW_GameAPI._onRewarded_XXPTW_VideoAd_XXPTW_Failed();
        }
    };
    QQ_XXPTW_Mini_XXPTW_GameAPI.onRewarded_XXPTW_Video_XXPTW_AdClose = function (res) {
        if ((res && res.isEnded) || res == null) {
            console.log('激励视频 已完整观看');
            if (QQ_XXPTW_Mini_XXPTW_GameAPI._onRewarded_XXPTW_VideoAd_XXPTW_Close) {
                QQ_XXPTW_Mini_XXPTW_GameAPI._onRewarded_XXPTW_VideoAd_XXPTW_Close(true);
            }
        }
        else {
            console.log('激励视频 未完整观看');
            if (QQ_XXPTW_Mini_XXPTW_GameAPI._onRewarded_XXPTW_VideoAd_XXPTW_Close) {
                QQ_XXPTW_Mini_XXPTW_GameAPI._onRewarded_XXPTW_VideoAd_XXPTW_Close(false);
            }
        }
    };
    QQ_XXPTW_Mini_XXPTW_GameAPI.reg_XXPTW_Rewarded_XXPTW_Video_XXPTW_AdEvent = function (rewardedVideoAd) {
        rewardedVideoAd.onLoad(QQ_XXPTW_Mini_XXPTW_GameAPI.onRewarded_XXPTW_VideoAd_XXPTW_Load);
        rewardedVideoAd.onError(QQ_XXPTW_Mini_XXPTW_GameAPI.onRewarded_XXPTW_VideoAd_XXPTW_Error);
        rewardedVideoAd.onClose(QQ_XXPTW_Mini_XXPTW_GameAPI.onRewarded_XXPTW_Video_XXPTW_AdClose);
        QQ_XXPTW_Mini_XXPTW_GameAPI._isReg_XXPTW_Rewarded_XXPTW_VideoAdEvent = true;
    };
    QQ_XXPTW_Mini_XXPTW_GameAPI.show_XXPTW_Rewarded_XXPTW_VideoAd = function (onAdClose, onFailed) {
        if (Laya.Browser.onQQMiniGame) {
            QQ_XXPTW_Mini_XXPTW_GameAPI._onRewarded_XXPTW_VideoAd_XXPTW_Close = onAdClose;
            QQ_XXPTW_Mini_XXPTW_GameAPI._onRewarded_XXPTW_VideoAd_XXPTW_Failed = onFailed;
            var rewardedVideoAd = Laya.Browser.window["qq"].createRewardedVideoAd({
                adUnitId: QQ_XXPTW_Mini_XXPTW_GameAPI.ad_XXPTW_UnitId,
            });
            if (!QQ_XXPTW_Mini_XXPTW_GameAPI._isReg_XXPTW_Rewarded_XXPTW_VideoAdEvent) {
                QQ_XXPTW_Mini_XXPTW_GameAPI.reg_XXPTW_Rewarded_XXPTW_Video_XXPTW_AdEvent(rewardedVideoAd);
            }
            rewardedVideoAd.load().then(function () {
                var promise = rewardedVideoAd.show();
                promise.then(function () { return console.log('激励视频 广告显示成功'); });
                promise.catch(function (err) {
                    rewardedVideoAd.load()
                        .then(function () { return rewardedVideoAd.show(); })
                        .catch(function (err) {
                        console.log('激励视频 广告显示失败');
                        if (onFailed) {
                            onFailed();
                        }
                    });
                });
            }).catch(function (err) {
                console.log('激励视频 广告加载失败');
                if (onFailed) {
                    onFailed();
                }
            });
        }
        else {
            onAdClose(true);
        }
    };
    //----------------------------------------------------------------
    //-------------------------小游戏跳转---------------------------
    QQ_XXPTW_Mini_XXPTW_GameAPI.navigate_XXPTW_To_XXPTW_Mini_XXPTW_Program = function (appId, path, onSuccess, onFail, onComplate) {
        if (Laya.Browser.onQQMiniGame) {
            console.log("跳转游戏： " + appId);
            Laya.Browser.window["qq"].navigateToMiniProgram({
                appId: appId,
                path: path,
                extraData: {
                    foo: 'bar'
                },
                envVersion: 'release',
                success: function (res) {
                    if (onSuccess) {
                        onSuccess(res);
                    }
                },
                fail: function (res) {
                    if (onFail) {
                        onFail(res);
                    }
                },
                complete: function (res) {
                    if (onComplate) {
                        onComplate(res);
                    }
                }
            });
        }
    };
    QQ_XXPTW_Mini_XXPTW_GameAPI.share_XXPTW_ = function (complate, titel, imageUrl) {
        var _this = this;
        if (Laya.Browser.onQQMiniGame) {
            QQ_XXPTW_Mini_XXPTW_GameAPI._onShow_XXPTW_ = function () {
                Laya.Browser.window["qq"].offShow(QQ_XXPTW_Mini_XXPTW_GameAPI._onShow_XXPTW_);
                QQ_XXPTW_Mini_XXPTW_GameAPI._onShow_XXPTW_ = null;
                var c = Date.now() - _this._last_XXPTW_Share_XXPTW_Time;
                if (complate) {
                    if (Date.now() - _this._last_XXPTW_Share_XXPTW_Time > 2000) {
                        complate(true);
                    }
                    else {
                        complate(false);
                    }
                }
            };
            Laya.Browser.window["qq"].onShow(QQ_XXPTW_Mini_XXPTW_GameAPI._onShow_XXPTW_);
            QQ_XXPTW_Mini_XXPTW_GameAPI._last_XXPTW_Share_XXPTW_Time = Date.now();
            Laya.Browser.window["qq"].shareAppMessage({
                title: titel,
                imageUrl: imageUrl
            });
        }
    };
    //----------------------------------------------------------------------
    //--------------------插屏幕广告---------------------------------------
    QQ_XXPTW_Mini_XXPTW_GameAPI.show_XXPTW_Interstitial_XXPTW_Ad = function (onAdClose, onFailed) {
        if (Laya.Browser.onQQMiniGame) {
            var interstitialAd = Laya.Browser.window["qq"].createInterstitialAd({
                adUnitId: QQ_XXPTW_Mini_XXPTW_GameAPI.Ins_XXPTW_AdUnitId,
            });
            var _onLoad_1 = function () {
                console.log('插屏广告 加载完成');
                interstitialAd.show().catch(function (err) {
                    console.log('插屏广告 显示失败 ：' + err);
                    interstitialAd.offLoad(_onLoad_1);
                    interstitialAd.offError(_onError_1);
                    interstitialAd.offClose(_onClose_1);
                    interstitialAd.destroy();
                    if (onFailed) {
                        onFailed();
                    }
                });
            };
            interstitialAd.onLoad(_onLoad_1);
            var _onError_1 = function (err) {
                console.log('插屏广告 加载失败' + err);
                interstitialAd.offLoad(_onLoad_1);
                interstitialAd.offError(_onError_1);
                interstitialAd.offClose(_onClose_1);
                interstitialAd.destroy();
                if (onFailed) {
                    onFailed();
                }
            };
            interstitialAd.onError(_onError_1);
            var _onClose_1 = function () {
                console.log('插屏广告 关闭');
                interstitialAd.offLoad(_onLoad_1);
                interstitialAd.offError(_onError_1);
                interstitialAd.offClose(_onClose_1);
                interstitialAd.destroy();
                if (onAdClose) {
                    onAdClose();
                }
            };
            interstitialAd.onClose(_onClose_1);
        }
        else {
            onAdClose();
        }
    };
    QQ_XXPTW_Mini_XXPTW_GameAPI.Load_XXPTW_App_XXPTW_BoxAd = function (onAdClose, onFailed) {
        if (Laya.Browser.onQQMiniGame) {
            QQ_XXPTW_Mini_XXPTW_GameAPI.mApp_XXPTW_box_XXPTW_Ad = Laya.Browser.window["qq"].createAppBox({
                adUnitId: QQ_XXPTW_Mini_XXPTW_GameAPI.App_XXPTW_BoxId,
            });
            QQ_XXPTW_Mini_XXPTW_GameAPI.mApp_XXPTW_box_XXPTW_Ad.load().then(function () {
                console.log('盒子广告 加载完成');
            });
            QQ_XXPTW_Mini_XXPTW_GameAPI.mApp_XXPTW_box_XXPTW_Ad.onError(function (err) {
                console.log('盒子广告 加载失败' + err);
                if (onFailed) {
                    onFailed();
                }
            });
            QQ_XXPTW_Mini_XXPTW_GameAPI.on_XXPTW_BoxAd_XXPTW_Close = function () {
                console.log('盒子广告 关闭');
                if (onAdClose) {
                    onAdClose();
                }
            };
            QQ_XXPTW_Mini_XXPTW_GameAPI.mApp_XXPTW_box_XXPTW_Ad.onClose(QQ_XXPTW_Mini_XXPTW_GameAPI.on_XXPTW_BoxAd_XXPTW_Close);
        }
        else {
            onAdClose();
        }
    };
    QQ_XXPTW_Mini_XXPTW_GameAPI.show_XXPTW_App_XXPTW_BoxAd = function (onFailed, onAdClose) {
        if (this.mApp_XXPTW_box_XXPTW_Ad) {
            console.log("显示盒子广告");
            this.mApp_XXPTW_box_XXPTW_Ad.offClose(this.on_XXPTW_BoxAd_XXPTW_Close);
            this.on_XXPTW_BoxAd_XXPTW_Close = function () {
                console.log('盒子广告 关闭');
                if (onAdClose) {
                    onAdClose();
                }
            };
            this.mApp_XXPTW_box_XXPTW_Ad.onClose(this.on_XXPTW_BoxAd_XXPTW_Close);
            this.mApp_XXPTW_box_XXPTW_Ad.show().catch(function (err) {
                console.log('盒子广告 显示失败 ：' + err);
                if (onFailed) {
                    onFailed();
                }
            });
        }
        else {
            QQ_XXPTW_Mini_XXPTW_GameAPI.Load_XXPTW_App_XXPTW_BoxAd(onAdClose, onFailed);
        }
    };
    /**
     * 得到小程序启动参数的同步方法，可得到一个Object返回值，返回值具体的数据结构在下面的列表中
     * scene	number	启动小游戏的场景值
     * query	Object	启动小游戏的 query 参数
     * shareTicket	string	shareTicket，详见获取更多转发信息
     * referrerInfo	object	来源信息。从另一个小程序、公众号或 App 进入小程序时返回。否则返回 {}
     * https://developers.weixin.qq.com/minigame/dev/api/base/app/life-cycle/qq.getLaunchOptionsSync.html
     * @static
     * @returns {LaunchOptions}
     * @memberof QQMiniGameAPI
     */
    QQ_XXPTW_Mini_XXPTW_GameAPI.get_XXPTW_Launch_XXPTW_Options_XXPTW_Sync = function () {
        // let result = { scene: 0, query: null, shareTicket: "", referrerInfo: null };
        if (Laya.Browser.onQQMiniGame) {
            var obj_1 = Laya.Browser.window["qq"].getLaunchOptionsSync();
            console.log("场景值 " + obj_1.scene);
            var str = JSON.stringify(obj_1.query);
            console.log("Query参数 " + str);
            var key = obj_1.query["key"];
            console.log("Query参数：key " + key);
            console.log("ShareTicket " + obj_1.shareTicket);
            console.log("ReferrerInfo.appId " + obj_1.referrerInfo.appId);
            console.log("ReferrerInfo.extraData " + obj_1.referrerInfo.extraData);
            return obj_1;
        }
        var obj = { scene: 1001, query: "", shareTicket: "", appId: "", extraData: "" };
        return obj;
    };
    //----------------------------------------------------------------------
    /**
     * 打开微信左上角分享转发点击事件,在游戏逻辑中调用一次即可
     * 注意此方法只会在真机上执行，在微信模拟器环境下点击转发按钮什么都不会发生
     *
     * @static
     * @param {string} titel 分享标题
     * @param {string} imageUrl 分享图片地址
     * @param {Function} [success] 成功回调函数(可不填)
     * @param {Function} [fail] 失败回调函数(可不填)
     * @param {Function} [complate] 完成回调函数，成功失败都会执行(可不填)
     * @memberof QQMiniGameAPI
     */
    QQ_XXPTW_Mini_XXPTW_GameAPI.Set_XXPTW_Share_XXPTW_Menu = function (titel, imageUrl, success, fail, complate) {
        if (Laya.Browser.onQQMiniGame) {
            console.log("小游戏设置转发按钮");
            Laya.Browser.window["qq"].showShareMenu({
                withShareTicket: false,
                success: success,
                fail: fail,
                complete: complate
            });
            Laya.Browser.window["qq"].onShareAppMessage(function () {
                return {
                    title: titel,
                    imageUrl: imageUrl
                };
            });
        }
    };
    QQ_XXPTW_Mini_XXPTW_GameAPI.ad_XXPTW_UnitId = ""; //激励视频Id
    QQ_XXPTW_Mini_XXPTW_GameAPI.banner_XXPTW_AdUnitId = ""; //banner广告Id
    QQ_XXPTW_Mini_XXPTW_GameAPI.Ins_XXPTW_AdUnitId = ""; //插屏广告Id
    QQ_XXPTW_Mini_XXPTW_GameAPI.App_XXPTW_BoxId = ""; //盒子广告Id
    //-------------------------激励视频---------------------------------
    QQ_XXPTW_Mini_XXPTW_GameAPI._isReg_XXPTW_Rewarded_XXPTW_VideoAdEvent = false;
    QQ_XXPTW_Mini_XXPTW_GameAPI._onRewarded_XXPTW_VideoAd_XXPTW_Failed = null;
    QQ_XXPTW_Mini_XXPTW_GameAPI._onRewarded_XXPTW_VideoAd_XXPTW_Close = null;
    //----------------------------------------------------------------------
    //---------------------分享----------------------------------------
    QQ_XXPTW_Mini_XXPTW_GameAPI._onShow_XXPTW_ = null;
    QQ_XXPTW_Mini_XXPTW_GameAPI._last_XXPTW_Share_XXPTW_Time = 0;
    //--------------------盒子广告---------------------------------------
    QQ_XXPTW_Mini_XXPTW_GameAPI.mApp_XXPTW_box_XXPTW_Ad = null;
    QQ_XXPTW_Mini_XXPTW_GameAPI.on_XXPTW_BoxAd_XXPTW_Close = null;
    return QQ_XXPTW_Mini_XXPTW_GameAPI;
}());
exports.default = QQ_XXPTW_Mini_XXPTW_GameAPI;
},{}],40:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var HttpUnit_1 = require("../Net/HttpUnit");
var AppConfig_1 = require("../AppConfig");
var User_1 = require("../User/User");
var Utilit_1 = require("../Utilit");
var ALD_1 = require("../ALD");
var WXAPI_1 = require("../WXAPI");
var EventMgr_1 = require("../Event/EventMgr");
var EventDef_1 = require("../Event/EventDef");
var AppSwitchConfig_1 = require("../Config/AppSwitchConfig");
var QQMiniGameAPI_1 = require("../QQMiniGameAPI");
var _XXPTW_ShareAd_XXPTW_ = /** @class */ (function () {
    function _XXPTW_ShareAd_XXPTW_() {
    }
    _XXPTW_ShareAd_XXPTW_.refresh_XXPTW_Ad = function (complate) {
        _XXPTW_ShareAd_XXPTW_.get_XXPTW_Ad_XXPTW_PosData(function (res) {
            if (1 == res.code) {
                console.log("获取分享广告数据成功");
                _XXPTW_ShareAd_XXPTW_._ad_XXPTW_Position = res.result;
                if (complate) {
                    complate(true);
                }
            }
            else {
                console.log("获取分享广告数据失败 ： " + res.msg);
                if (complate) {
                    complate(false);
                }
            }
        }, function (res) {
            console.log("获取分享广告数据失败");
            if (complate) {
                complate(false);
            }
        });
    };
    _XXPTW_ShareAd_XXPTW_.get_XXPTW_ADVs = function (locationid, complate, useRandom, useLocalRandom, sortDatas) {
        if (!_XXPTW_ShareAd_XXPTW_.isNeed_XXPTW_ShowAd()) {
            complate(null);
            return;
        }
        useRandom = null == useRandom ? _XXPTW_ShareAd_XXPTW_.Use_XXPTW_Random_XXPTW_AdPos : useRandom;
        useLocalRandom = null == useLocalRandom ? true : useLocalRandom;
        if (useRandom) {
            locationid = _XXPTW_ShareAd_XXPTW_.get_XXPTW_Random_XXPTW_ADPosID();
        }
        var datas = _XXPTW_ShareAd_XXPTW_._adv_XXPTW_[locationid];
        if (datas) {
            if (useLocalRandom) {
                // datas = this.sort_XXPTW_Datas(datas);
                if (null == sortDatas) {
                    datas = this.sort_XXPTW_Datas(datas);
                }
                else {
                    datas = sortDatas(datas);
                }
            }
            complate(datas);
        }
        else {
            var self = _XXPTW_ShareAd_XXPTW_;
            _XXPTW_ShareAd_XXPTW_.get_XXPTW_ADV_XXPTW_Data(locationid, function (res) {
                if (1 == res.code) {
                    _XXPTW_ShareAd_XXPTW_._adv_XXPTW_[locationid] = res.result;
                    datas = _XXPTW_ShareAd_XXPTW_._adv_XXPTW_[locationid];
                    if (datas && Utilit_1.default.is_XXPTW_Iphone()) {
                        for (var i = 0; i < datas.length; ++i) {
                            var data = datas[i];
                            for (var j = 0; j < _XXPTW_ShareAd_XXPTW_._iphone_XXPTW_Ignore_XXPTW_AppIds.length; ++j) {
                                if (data.appid == _XXPTW_ShareAd_XXPTW_._iphone_XXPTW_Ignore_XXPTW_AppIds[j]) {
                                    datas.splice(i, 1);
                                    --i;
                                    break;
                                }
                            }
                        }
                    }
                    if (datas && useLocalRandom) {
                        // datas = self.sort_XXPTW_Datas(datas);
                        if (null == sortDatas) {
                            datas = self.sort_XXPTW_Datas(datas);
                        }
                        else {
                            datas = sortDatas(datas);
                        }
                    }
                    if (complate) {
                        complate(datas);
                    }
                }
                else {
                    if (complate) {
                        complate(null);
                    }
                }
            }, function (res) {
                if (complate) {
                    complate(null);
                }
            });
        }
    };
    _XXPTW_ShareAd_XXPTW_.report_XXPTW_User_XXPTW_Click = function (advid) {
        _XXPTW_ShareAd_XXPTW_.req_XXPTW_User_XXPTW_Click(advid, function (res) {
            if (1 == res.code) {
                console.log("点击广告上报成功");
            }
            else {
                console.log("点击广告上报失败");
            }
        }, function (res) {
            console.log("点击广告上报失败");
        });
    };
    _XXPTW_ShareAd_XXPTW_.get_XXPTW_Random_XXPTW_ADPosID = function () {
        return _XXPTW_ShareAd_XXPTW_.Ad_XXPTW_Locationids[Math.floor(Math.random() * _XXPTW_ShareAd_XXPTW_.Ad_XXPTW_Locationids.length)];
    };
    _XXPTW_ShareAd_XXPTW_.request_XXPTW_ = function (req) {
        if (req.url_XXPTW_.indexOf("https://") > -1 ||
            req.url_XXPTW_.indexOf("http://") > -1) {
            req.url_XXPTW_ = req.url_XXPTW_;
        }
        else {
            req.url_XXPTW_ = _XXPTW_ShareAd_XXPTW_.main_XXPTW_Url + req.url_XXPTW_;
        }
        var completeFunc = function (res) {
            console.log(res, "http Success");
            res = JSON.parse(res);
            if (req.on_XXPTW_Success) {
                req.on_XXPTW_Success(res);
            }
            req.on_XXPTW_Success = null;
            req = null;
        };
        var errorFunc = function (res) {
            console.log(res, "http fail");
            if (req.on_XXPTW_Fail) {
                req.on_XXPTW_Fail(res);
            }
            req.on_XXPTW_Fail = null;
            req = null;
        };
        var xhr = new Laya.HttpRequest();
        xhr.once(Laya.Event.COMPLETE, _XXPTW_ShareAd_XXPTW_, completeFunc);
        xhr.once(Laya.Event.ERROR, _XXPTW_ShareAd_XXPTW_, errorFunc);
        if (req.meth_XXPTW_ == "get") {
            var para = "";
            for (var _i = 0, _a = Object.keys(req._XXPTW_data_XXPTW_); _i < _a.length; _i++) {
                var key = _a[_i];
                var value = req._XXPTW_data_XXPTW_[key];
                para += key + "=" + value + "&";
            }
            req.url_XXPTW_ = req.url_XXPTW_ + "?" + para;
            var header = [
                "versions", AppConfig_1.default.Versions_XXPTW_,
            ];
            xhr.send(req.url_XXPTW_, null, req.meth_XXPTW_, null, header);
        }
        else {
            var para = "";
            for (var _b = 0, _c = Object.keys(req._XXPTW_data_XXPTW_); _b < _c.length; _b++) {
                var key = _c[_b];
                var value = req._XXPTW_data_XXPTW_[key];
                para += key + "=" + value + "&";
            }
            para += "ts=" + String(Date.now()) + "&";
            var header = [
                "Content-Type", "application/x-www-form-urlencoded",
                "versions", AppConfig_1.default.Versions_XXPTW_,
            ];
            xhr.send(req.url_XXPTW_, para, req.meth_XXPTW_, null, header);
        }
    };
    _XXPTW_ShareAd_XXPTW_.get_XXPTW_Ad_XXPTW_PosData = function (onSuccess, onFail) {
        var req = new HttpUnit_1.request_XXPTW_Data();
        req.url_XXPTW_ = _XXPTW_ShareAd_XXPTW_.get_XXPTW_AdPostion;
        req.on_XXPTW_Success = onSuccess;
        req.on_XXPTW_Fail = onFail;
        req._XXPTW_data_XXPTW_.softid = AppConfig_1.default.App_XXPTW_ID;
        req.meth_XXPTW_ = "get";
        _XXPTW_ShareAd_XXPTW_.request_XXPTW_(req);
    };
    _XXPTW_ShareAd_XXPTW_.req_XXPTW_User_XXPTW_Click = function (advid, onSuccess, onFail) {
        var req = new HttpUnit_1.request_XXPTW_Data();
        req.url_XXPTW_ = _XXPTW_ShareAd_XXPTW_.user_XXPTW_Click;
        req.on_XXPTW_Success = onSuccess;
        req.on_XXPTW_Fail = onFail;
        req._XXPTW_data_XXPTW_.softid = AppConfig_1.default.App_XXPTW_ID;
        req._XXPTW_data_XXPTW_.uid = User_1.default.openId_XXPTW_;
        req._XXPTW_data_XXPTW_.advid = advid;
        _XXPTW_ShareAd_XXPTW_.request_XXPTW_(req);
    };
    _XXPTW_ShareAd_XXPTW_.get_XXPTW_ADV_XXPTW_Data = function (locationid, onSuccess, onFail) {
        var req = new HttpUnit_1.request_XXPTW_Data();
        req.url_XXPTW_ = _XXPTW_ShareAd_XXPTW_.get_XXPTW_Adv;
        req.on_XXPTW_Success = onSuccess;
        req.on_XXPTW_Fail = onFail;
        req._XXPTW_data_XXPTW_.softid = AppConfig_1.default.App_XXPTW_ID;
        req._XXPTW_data_XXPTW_.locationid = locationid;
        req._XXPTW_data_XXPTW_.preview = 0;
        _XXPTW_ShareAd_XXPTW_.request_XXPTW_(req);
    };
    /**
         * 随机跳转的方法，会从广告列表中随机得到一个AppId并且跳转,输入的参数为概率，大小在0-1之间
         * 如果概率大于1，则自动将其除以100，所以千万注意！
         *
         * @static
         * @param {number} [rate=1]
         * @memberof ShareAd
         */
    _XXPTW_ShareAd_XXPTW_.Random_XXPTW_Jump = function (rate) {
        if (rate === void 0) { rate = 1; }
        console.log("随机跳转,rate：" + rate);
        if (rate > 1) {
            rate = rate / 100;
        }
        var rd = Math.random();
        if (rd <= rate) {
            var adLocationID = _XXPTW_ShareAd_XXPTW_.LoopAd_XXPTW_LocationID;
            var Locations = [
                _XXPTW_ShareAd_XXPTW_.LoopAd_XXPTW_LocationID,
                _XXPTW_ShareAd_XXPTW_.Insert_XXPTW_AdLocationID,
                _XXPTW_ShareAd_XXPTW_.Banner_XXPTW_AdLocationID,
                _XXPTW_ShareAd_XXPTW_.AniAd_XXPTW_LocationID,
            ];
            if (_XXPTW_ShareAd_XXPTW_.Use_XXPTW_Random_XXPTW_AdPos) {
                for (var i = 0; i < _XXPTW_ShareAd_XXPTW_.Ad_XXPTW_Locationids.length; ++i) {
                    Locations.push(_XXPTW_ShareAd_XXPTW_.Ad_XXPTW_Locationids[i]);
                }
            }
            adLocationID = Locations[Math.floor(Math.random() * Locations.length)];
            var datas = _XXPTW_ShareAd_XXPTW_.get_XXPTW_ADVs(adLocationID, function (datas) {
                if (datas) {
                    var rd_1 = Math.floor(datas.length * Math.random());
                    var data_1 = datas[rd_1];
                    console.log("跳转游戏： " + data_1.title);
                    WXAPI_1.default.navigate_XXPTW_To_XXPTW_MiniProgram(data_1.appid, data_1.url, function (res) {
                        console.log("跳转成功");
                        _XXPTW_ShareAd_XXPTW_.report_XXPTW_User_XXPTW_Click(data_1.appid);
                        ALD_1.default.ald_XXPTW_Send_XXPTW_ReportAdClickSuccess(data_1);
                    }, function (res) {
                        console.log("跳转失败");
                        EventMgr_1.default.ins_XXPTW_tance.dis_XXPTW_patch(EventDef_1.Event_XXPTW_Def.AD_On_XXPTW_ShareAd_XXPTW_Fail);
                        if (res.errMsg == "navigateToMiniProgram:fail cancel") {
                            console.log("用户取消跳转");
                            ALD_1.default.aldSend_XXPTW_ReportAd_XXPTW_ClickFail(data_1);
                        }
                    }, function (res) {
                        console.log("跳转完成");
                    });
                }
            }, true);
        }
    };
    _XXPTW_ShareAd_XXPTW_.isNeed_XXPTW_ShowAd = function () {
        if (0 == AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().ad_XXPTW_Switch)
            return false;
        if (Laya.Browser.onQGMiniGame) {
            if (AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().oppo_XXPTW_cfg.oppo_XXPTW_versions != AppConfig_1.default.Versions_XXPTW_) {
                return false;
            }
        }
        var mailiang = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().mai_XXPTW_liang;
        var mailianglist = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().mailiang_XXPTW_list;
        var mailiangscenelist = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().mailiang_XXPTW_Scene_XXPTW_List;
        if (1 == mailiang) {
            var flag = null;
            var scene = null;
            if (Laya.Browser.onMiniGame) {
                flag = WXAPI_1.default.get_XXPTW_Launch_XXPTW_Options_XXPTW_Sync().query['chid'];
                scene = WXAPI_1.default.get_XXPTW_Launch_XXPTW_Options_XXPTW_Sync().scene;
            }
            else if (Laya.Browser.onQQMiniGame) {
                flag = QQMiniGameAPI_1.default.get_XXPTW_Launch_XXPTW_Options_XXPTW_Sync().query['chid'];
                scene = QQMiniGameAPI_1.default.get_XXPTW_Launch_XXPTW_Options_XXPTW_Sync().scene;
            }
            if (null != flag && null != mailianglist && mailianglist.length > 0) {
                for (var i = 0; i < mailianglist.length; ++i) {
                    if (flag == mailianglist[i]) {
                        return false;
                    }
                }
            }
            if (null != scene && null != mailiangscenelist && mailiangscenelist.length > 0) {
                for (var i = 0; i < mailiangscenelist.length; ++i) {
                    if (scene == mailiangscenelist[i]) {
                        return false;
                    }
                }
            }
        }
        return true;
    };
    _XXPTW_ShareAd_XXPTW_.sort_XXPTW_Datas = function (datas) {
        if (null == datas || 0 == datas.length)
            return [];
        var dataDic = {};
        var keys = new Array();
        for (var i = 0; i < datas.length; ++i) {
            var data = datas[i];
            if (dataDic[data.appid] == null) {
                dataDic[data.appid] = new Array();
                dataDic[data.appid].push(data);
                keys.push(data.appid);
            }
            else {
                dataDic[data.appid].push(data);
            }
        }
        for (var i = 0; i < keys.length; ++i) {
            var key = keys[i];
            var randomIndex = Math.floor(Math.random() * keys.length);
            var temp = keys[randomIndex];
            keys[randomIndex] = key;
            keys[i] = temp;
        }
        for (var i = 0; i < keys.length; ++i) {
            var key = keys[i];
            var dataArray = dataDic[key];
            for (var j = 0; j < dataArray.length; ++j) {
                var data = dataArray[j];
                var randomIndex = Math.floor(Math.random() * dataArray.length);
                var temp = dataArray[randomIndex];
                dataArray[randomIndex] = data;
                dataArray[j] = temp;
            }
        }
        var res = new Array();
        while (keys.length > 0) {
            if (keys.length == 1) {
                var key = keys[0];
                var isOk = false;
                var dataArray = dataDic[key];
                for (var i = 0; i < res.length; ++i) {
                    var curData = res[i];
                    var nextData = res[i + 1];
                    if (null != nextData) {
                        if (curData.appid != key && nextData.appid != key) {
                            var data = dataArray.shift();
                            if (null != data) {
                                var f = res.slice(0, i + 1);
                                var b = res.slice(i + 1, res.length);
                                res = f;
                                res.push(data);
                                for (var k = 0; k < b.length; ++k) {
                                    res.push(b[k]);
                                }
                            }
                            isOk = true;
                            break;
                        }
                    }
                    else {
                        if (curData.appid != key) {
                            var data = dataArray.shift();
                            if (null != data) {
                                var f = res.slice(0, i + 1);
                                var b = res.slice(i + 1, res.length);
                                res = f;
                                res.push(data);
                                for (var k = 0; k < b.length; ++k) {
                                    res.push(b[k]);
                                }
                            }
                            isOk = true;
                            break;
                        }
                    }
                }
                if (!isOk || dataArray.length <= 0) {
                    keys.splice(0, 1);
                }
            }
            else {
                for (var i = 0; i < keys.length; ++i) {
                    var key = keys[i];
                    var dataArray = dataDic[key];
                    var data = dataArray.shift();
                    res.push(data);
                    if (dataArray.length <= 0) {
                        keys.splice(i, 1);
                        --i;
                    }
                }
            }
        }
        return res;
    };
    _XXPTW_ShareAd_XXPTW_.main_XXPTW_Url = "https://swwww.mrkzx.cn";
    _XXPTW_ShareAd_XXPTW_.get_XXPTW_AdPostion = "/v1.1/api/getAdPosition.html"; //获取广告位列表
    _XXPTW_ShareAd_XXPTW_.get_XXPTW_Adv = "/v1.1/api/getAdv.html"; //获取第三方广告列表
    _XXPTW_ShareAd_XXPTW_.user_XXPTW_Click = "/v1.1/api/userclick.html"; //用户点击上报
    _XXPTW_ShareAd_XXPTW_.LoopAd_XXPTW_LocationID = 405;
    _XXPTW_ShareAd_XXPTW_.Banner_XXPTW_AdLocationID = 407;
    _XXPTW_ShareAd_XXPTW_.Insert_XXPTW_AdLocationID = -1;
    _XXPTW_ShareAd_XXPTW_.AniAd_XXPTW_LocationID = -1;
    _XXPTW_ShareAd_XXPTW_.History_XXPTW_LocationID = 408;
    _XXPTW_ShareAd_XXPTW_.MoreGame_XXPTW_LocationID = 406;
    _XXPTW_ShareAd_XXPTW_.Use_XXPTW_Random_XXPTW_AdPos = true;
    _XXPTW_ShareAd_XXPTW_.Ad_XXPTW_Locationids = [
        405
    ];
    _XXPTW_ShareAd_XXPTW_._ad_XXPTW_Position = {};
    _XXPTW_ShareAd_XXPTW_._adv_XXPTW_ = {};
    _XXPTW_ShareAd_XXPTW_._iphone_XXPTW_Ignore_XXPTW_AppIds = [
        "wx2d2acce3c45f4ddf",
        "wxeb93c1298ec7c62b"
    ];
    return _XXPTW_ShareAd_XXPTW_;
}());
exports.default = _XXPTW_ShareAd_XXPTW_;
},{"../ALD":1,"../AppConfig":2,"../Config/AppSwitchConfig":5,"../Event/EventDef":6,"../Event/EventMgr":7,"../Net/HttpUnit":35,"../QQMiniGameAPI":39,"../User/User":45,"../Utilit":46,"../WXAPI":78}],41:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ShareAd_1 = require("../ShareAd");
var WXAPI_1 = require("../../WXAPI");
var ALD_1 = require("../../ALD");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var AppSwitchConfig_1 = require("../../Config/AppSwitchConfig");
var OPPOAPI_1 = require("../../OPPOAPI");
var QQMiniGameAPI_1 = require("../../QQMiniGameAPI");
var Banner_XXPTW_Ad_XXPTW_View = /** @class */ (function (_super) {
    __extends(Banner_XXPTW_Ad_XXPTW_View, _super);
    function Banner_XXPTW_Ad_XXPTW_View() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.Ad_XXPTW_Pos_XXPTW_ID = ShareAd_1.default.Banner_XXPTW_AdLocationID;
        _this._data_XXPTW_ = null;
        _this._wx_XXPTW_Banner = null;
        _this._onLoad = null;
        _this._onError = null;
        _this._onResize = null;
        return _this;
    }
    Banner_XXPTW_Ad_XXPTW_View.prototype.onAwake = function () {
        this._display_XXPTW_Sp = this.owner.getChildByName("Display");
        if (null == this._display_XXPTW_Sp) {
            this._display_XXPTW_Sp = this.owner;
        }
    };
    Banner_XXPTW_Ad_XXPTW_View.prototype.onEnable = function () {
        this._display_XXPTW_Sp.on(Laya.Event.CLICK, this, this.on_XXPTW_Sp_XXPTW_Click);
        var banner = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().ba_XXPTW_nner;
        if (0 == banner) {
            this.refresh_XXPTW_Banner_XXPTW_Dis();
            var bannerRecreateTime = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().banner_XXPTW_Recreate_XXPTW_Time;
            Laya.timer.loop(bannerRecreateTime * 1000, this, this.refresh_XXPTW_Banner_XXPTW_Dis);
        }
        else if (1 == banner) {
            this.refresh_XXPTW_Banner_XXPTW_Dis();
            var bannerRecreateTime = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().banner_XXPTW_Recreate_XXPTW_Time;
            Laya.timer.loop(bannerRecreateTime * 1000, this, this.refresh_XXPTW_Banner_XXPTW_Dis);
        }
    };
    Banner_XXPTW_Ad_XXPTW_View.prototype.onDisable = function () {
        this._display_XXPTW_Sp.off(Laya.Event.CLICK, this, this.on_XXPTW_Sp_XXPTW_Click);
        this.clear_XXPTW_WXBaner();
    };
    Banner_XXPTW_Ad_XXPTW_View.prototype.refresh_XXPTW_Banner_XXPTW_Dis = function () {
        var self = this;
        ShareAd_1.default.get_XXPTW_ADVs(this.Ad_XXPTW_Pos_XXPTW_ID, function (datas) {
            if (datas && datas.length > 0) {
                var data = datas[Math.floor(Math.random() * datas.length)];
                self._display_XXPTW_Sp.loadImage(data.logo, Laya.Handler.create(self, function () {
                    if (!self._display_XXPTW_Sp.destroyed) {
                        self._display_XXPTW_Sp.width = 750;
                        self._display_XXPTW_Sp.height = 256;
                    }
                }));
                self._data_XXPTW_ = data;
            }
        }, false);
    };
    Banner_XXPTW_Ad_XXPTW_View.prototype.on_XXPTW_Sp_XXPTW_Click = function () {
        var data = this._data_XXPTW_;
        if (data) {
            console.log("跳转游戏： " + data.title);
            if (Laya.Browser.onMiniGame) {
                WXAPI_1.default.navigate_XXPTW_To_XXPTW_MiniProgram(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.report_XXPTW_User_XXPTW_Click(data.appid);
                    ALD_1.default.ald_XXPTW_Send_XXPTW_ReportAdClickSuccess(data);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.ins_XXPTW_tance.dis_XXPTW_patch(EventDef_1.Event_XXPTW_Def.AD_On_XXPTW_ShareAd_XXPTW_Fail);
                    if (res.errMsg == "navigateToMiniProgram:fail cancel") {
                        console.log("用户取消跳转");
                        ALD_1.default.aldSend_XXPTW_ReportAd_XXPTW_ClickFail(data);
                    }
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQGMiniGame) {
                OPPOAPI_1.default.navigate_XXPTW_To_XXPTW_MiniProgram(data.appid, data.title, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.report_XXPTW_User_XXPTW_Click(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.ins_XXPTW_tance.dis_XXPTW_patch(EventDef_1.Event_XXPTW_Def.AD_On_XXPTW_ShareAd_XXPTW_Fail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQQMiniGame) //qq小游戏
             {
                QQMiniGameAPI_1.default.navigate_XXPTW_To_XXPTW_Mini_XXPTW_Program(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.report_XXPTW_User_XXPTW_Click(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.ins_XXPTW_tance.dis_XXPTW_patch(EventDef_1.Event_XXPTW_Def.AD_On_XXPTW_ShareAd_XXPTW_Fail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
        }
    };
    Banner_XXPTW_Ad_XXPTW_View.prototype.refresh_XXPTW_WXBanner = function () {
        if ((!Laya.Browser.onMiniGame && !Laya.Browser.onQQMiniGame)
            || !this.owner.visible)
            return;
        this.clear_XXPTW_WXBaner();
        var self = this;
        var sysInfo = null;
        if (Laya.Browser.onMiniGame) {
            sysInfo = Laya.Browser.window["wx"].getSystemInfoSync();
        }
        else if (Laya.Browser.onQQMiniGame) {
            sysInfo = Laya.Browser.window["qq"].getSystemInfoSync();
        }
        var sw = sysInfo.screenWidth;
        var sh = sysInfo.screenHeight;
        var pos = this._display_XXPTW_Sp.localToGlobal(new Laya.Point(0, 0));
        var left = pos.x / Laya.stage.width * sw;
        var top = pos.y / Laya.stage.height * sh;
        var width = this.WX_XXPTW_Banner_XXPTW_Width ? this.WX_XXPTW_Banner_XXPTW_Width / Laya.stage.width * sw : sw;
        if (Laya.Browser.onMiniGame) {
            var recreateBannerIDList = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().recreate_XXPTW_Banner_XXPTW_IDList;
            var bannerAdUnitId = recreateBannerIDList[Math.floor(Math.random() * recreateBannerIDList.length)];
            if (null == bannerAdUnitId) {
                bannerAdUnitId = WXAPI_1.default.banner_XXPTW_AdUnitId;
            }
            self._wx_XXPTW_Banner = Laya.Browser.window["wx"].createBannerAd({
                adUnitId: bannerAdUnitId,
                adIntervals: 30,
                style: {
                    left: left,
                    top: top,
                    width: width,
                }
            });
            self._wx_XXPTW_Banner.onLoad(function (res) {
                console.log("WXBanner广告 加载完成");
                console.log(res);
            });
            self._wx_XXPTW_Banner.onError(function (err) {
                console.log("WXBanner广告 加载失败");
                console.log(err);
                self.refresh_XXPTW_Banner_XXPTW_Dis();
                self.clear_XXPTW_WXBaner();
            });
            self._wx_XXPTW_Banner.onResize(function (res) {
            });
            self._wx_XXPTW_Banner.show();
        }
        else if (Laya.Browser.onQQMiniGame) {
            var recreateBannerIDList = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().recreate_XXPTW_Banner_XXPTW_IDList;
            var bannerAdUnitId_1 = recreateBannerIDList[Math.floor(Math.random() * recreateBannerIDList.length)];
            if (null == bannerAdUnitId_1) {
                bannerAdUnitId_1 = QQMiniGameAPI_1.default.banner_XXPTW_AdUnitId;
            }
            self._wx_XXPTW_Banner = Laya.Browser.window["qq"].createBannerAd({
                adUnitId: bannerAdUnitId_1,
                adIntervals: 30,
                style: {
                    left: left,
                    top: top,
                    width: width,
                }
            });
            if (null != self._wx_XXPTW_Banner) {
                self._onLoad = function (res) {
                    console.log("QQBanner广告 加载完成 : ", bannerAdUnitId_1);
                    console.log(res);
                    self._wx_XXPTW_Banner.show();
                };
                self._wx_XXPTW_Banner.onLoad(self._onLoad);
                self._onError = function (err) {
                    console.log("QQBanner广告 加载失败 : ", bannerAdUnitId_1);
                    console.log(err);
                    self.refresh_XXPTW_Banner_XXPTW_Dis();
                    self.clear_XXPTW_WXBaner();
                };
                self._wx_XXPTW_Banner.onError(self._onError);
                self._onResize = function (res) {
                };
                self._wx_XXPTW_Banner.onResize(self._onResize);
            }
            else {
                self.refresh_XXPTW_Banner_XXPTW_Dis();
            }
        }
    };
    Banner_XXPTW_Ad_XXPTW_View.prototype.clear_XXPTW_WXBaner = function () {
        if (this._wx_XXPTW_Banner) {
            this._wx_XXPTW_Banner.offLoad(this._onLoad);
            this._wx_XXPTW_Banner.offError(this._onError);
            this._wx_XXPTW_Banner.offResize(this._onResize);
            this._wx_XXPTW_Banner.destroy();
        }
        this._wx_XXPTW_Banner = null;
    };
    Banner_XXPTW_Ad_XXPTW_View.prototype.onViewShow = function () {
        var banner = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().ba_XXPTW_nner;
        if (1 == banner && null == this._wx_XXPTW_Banner) {
            this.refresh_XXPTW_Banner_XXPTW_Dis();
            var bannerRecreateTime = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().banner_XXPTW_Recreate_XXPTW_Time;
            Laya.timer.loop(bannerRecreateTime * 1000, this, this.refresh_XXPTW_Banner_XXPTW_Dis);
        }
        else {
            this.refresh_XXPTW_Banner_XXPTW_Dis();
            var bannerRecreateTime = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().banner_XXPTW_Recreate_XXPTW_Time;
            Laya.timer.loop(bannerRecreateTime * 1000, this, this.refresh_XXPTW_Banner_XXPTW_Dis);
        }
    };
    Banner_XXPTW_Ad_XXPTW_View.prototype.onViewHide = function () {
        this.clear_XXPTW_WXBaner();
        Laya.timer.clearAll(this);
    };
    Banner_XXPTW_Ad_XXPTW_View.prototype.onDestroy = function () {
        this.clear_XXPTW_WXBaner();
        Laya.timer.clearAll(this);
    };
    return Banner_XXPTW_Ad_XXPTW_View;
}(Laya.Script));
exports.default = Banner_XXPTW_Ad_XXPTW_View;
},{"../../ALD":1,"../../Config/AppSwitchConfig":5,"../../Event/EventDef":6,"../../Event/EventMgr":7,"../../OPPOAPI":38,"../../QQMiniGameAPI":39,"../../WXAPI":78,"../ShareAd":40}],42:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ShareAd_1 = require("../ShareAd");
var LoopAdBox_1 = require("./LoopAdBox");
var Horizontal_XXPTW_LoopAd_XXPTW_View = /** @class */ (function (_super) {
    __extends(Horizontal_XXPTW_LoopAd_XXPTW_View, _super);
    function Horizontal_XXPTW_LoopAd_XXPTW_View() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.Ad_XXPTW_Pos_XXPTW_ID = ShareAd_1.default.LoopAd_XXPTW_LocationID;
        _this._scroll_XXPTW_Forward = true;
        return _this;
    }
    Horizontal_XXPTW_LoopAd_XXPTW_View.prototype.onAwake = function () {
        this._list_XXPTW_ = this.owner.getChildByName("List");
        this._list_XXPTW_.renderHandler = Laya.Handler.create(this, this.on_XXPTW_List_XXPTW_Render, null, false);
        this._list_XXPTW_.hScrollBarSkin = "";
    };
    Horizontal_XXPTW_LoopAd_XXPTW_View.prototype.onEnable = function () {
        var _this = this;
        var self = this;
        ShareAd_1.default.get_XXPTW_ADVs(this.Ad_XXPTW_Pos_XXPTW_ID, function (datas) {
            if (self.owner && !self.owner.destroyed) {
                if (datas && datas.length > 0 && datas.length < 50) {
                    var temp = [];
                    var counter = 0;
                    for (var i = 0; i < 50; ++i) {
                        if (counter >= datas.length) {
                            counter = 0;
                        }
                        temp.push(datas[counter]);
                        ++counter;
                    }
                    var groupLen = datas.length;
                    for (var i = 0; i < temp.length; ++i) {
                        var group = Math.floor(i / groupLen);
                        var startIndex = group * groupLen;
                        var randomIndex = Math.floor(Math.random() * groupLen) + startIndex;
                        var curValue = temp[i];
                        var randomValue = temp[randomIndex];
                        temp[randomIndex] = curValue;
                        temp[i] = randomValue;
                    }
                    _this._list_XXPTW_.array = temp;
                }
                else {
                    _this._list_XXPTW_.array = datas;
                }
            }
        });
    };
    Horizontal_XXPTW_LoopAd_XXPTW_View.prototype.onDisable = function () {
    };
    Horizontal_XXPTW_LoopAd_XXPTW_View.prototype.onUpdate = function () {
        if (this._scroll_XXPTW_Forward) {
            this._list_XXPTW_.scrollBar.value += 100 * Laya.timer.delta / 1000;
            if (this._list_XXPTW_.scrollBar.value >= this._list_XXPTW_.scrollBar.max) {
                this._scroll_XXPTW_Forward = false;
            }
        }
        else {
            this._list_XXPTW_.scrollBar.value -= 100 * Laya.timer.delta / 1000;
            if (this._list_XXPTW_.scrollBar.value <= 0) {
                this._scroll_XXPTW_Forward = true;
            }
        }
    };
    Horizontal_XXPTW_LoopAd_XXPTW_View.prototype.on_XXPTW_List_XXPTW_Render = function (cell, index) {
        var data = this._list_XXPTW_.array[index];
        var loopAdBox = cell.getComponent(LoopAdBox_1.default);
        loopAdBox.set_XXPTW_Data(data);
    };
    return Horizontal_XXPTW_LoopAd_XXPTW_View;
}(Laya.Script));
exports.default = Horizontal_XXPTW_LoopAd_XXPTW_View;
},{"../ShareAd":40,"./LoopAdBox":43}],43:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var WXAPI_1 = require("../../WXAPI");
var ShareAd_1 = require("../ShareAd");
var ALD_1 = require("../../ALD");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var OPPOAPI_1 = require("../../OPPOAPI");
var QQMiniGameAPI_1 = require("../../QQMiniGameAPI");
var LoopAd_XXPTW_Box = /** @class */ (function (_super) {
    __extends(LoopAd_XXPTW_Box, _super);
    function LoopAd_XXPTW_Box() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._data_XXPTW_ = null;
        _this._origin_XXPTW_W = 150;
        _this._origin_XXPTW_H = 150;
        _this._font_XXPTW_Size = 25;
        return _this;
    }
    LoopAd_XXPTW_Box.prototype.onAwake = function () {
        this._display_XXPTW_Sp = this.owner.getChildByName("Display");
        this._origin_XXPTW_W = this._display_XXPTW_Sp.width;
        this._origin_XXPTW_H = this._display_XXPTW_Sp.height;
        this._dis_XXPTW_Text = this.owner.getChildByName("TitelText");
        this._dis_XXPTW_Text.text = "";
        this._font_XXPTW_Size = this._dis_XXPTW_Text.fontSize;
    };
    LoopAd_XXPTW_Box.prototype.onEnable = function () {
        this._display_XXPTW_Sp.on(Laya.Event.CLICK, this, this.on_XXPTW_Sp_XXPTW_Click);
    };
    LoopAd_XXPTW_Box.prototype.onDisable = function () {
        this._display_XXPTW_Sp.off(Laya.Event.CLICK, this, this.on_XXPTW_Sp_XXPTW_Click);
    };
    LoopAd_XXPTW_Box.prototype.set_XXPTW_Data = function (data) {
        if (data) {
            var self = this;
            this._display_XXPTW_Sp.loadImage(data.logo, Laya.Handler.create(this, function () {
                if (!self._display_XXPTW_Sp.destroyed) {
                    self._display_XXPTW_Sp.width = self._origin_XXPTW_W;
                    self._display_XXPTW_Sp.height = self._origin_XXPTW_H;
                }
            }));
            var str = String(data.title);
            var num = str.length;
            num = Math.max(5, num);
            var fontSize = Math.floor((5 / num) * this._font_XXPTW_Size);
            this._dis_XXPTW_Text.fontSize = fontSize;
            this._dis_XXPTW_Text.text = str;
            this._data_XXPTW_ = data;
        }
    };
    LoopAd_XXPTW_Box.prototype.on_XXPTW_Sp_XXPTW_Click = function () {
        var data = this._data_XXPTW_;
        if (data) {
            console.log("跳转游戏： " + data.title);
            if (Laya.Browser.onMiniGame) {
                WXAPI_1.default.navigate_XXPTW_To_XXPTW_MiniProgram(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.report_XXPTW_User_XXPTW_Click(data.appid);
                    ALD_1.default.ald_XXPTW_Send_XXPTW_ReportAdClickSuccess(data);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.ins_XXPTW_tance.dis_XXPTW_patch(EventDef_1.Event_XXPTW_Def.AD_On_XXPTW_ShareAd_XXPTW_Fail);
                    if (res.errMsg == "navigateToMiniProgram:fail cancel") {
                        console.log("用户取消跳转");
                        ALD_1.default.aldSend_XXPTW_ReportAd_XXPTW_ClickFail(data);
                    }
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQGMiniGame) {
                OPPOAPI_1.default.navigate_XXPTW_To_XXPTW_MiniProgram(data.appid, data.title, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.report_XXPTW_User_XXPTW_Click(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.ins_XXPTW_tance.dis_XXPTW_patch(EventDef_1.Event_XXPTW_Def.AD_On_XXPTW_ShareAd_XXPTW_Fail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
            else if (Laya.Browser.onQQMiniGame) //qq小游戏
             {
                QQMiniGameAPI_1.default.navigate_XXPTW_To_XXPTW_Mini_XXPTW_Program(data.appid, data.url, function (res) {
                    console.log("跳转成功");
                    ShareAd_1.default.report_XXPTW_User_XXPTW_Click(data.appid);
                }, function (res) {
                    console.log("跳转失败");
                    EventMgr_1.default.ins_XXPTW_tance.dis_XXPTW_patch(EventDef_1.Event_XXPTW_Def.AD_On_XXPTW_ShareAd_XXPTW_Fail);
                }, function (res) {
                    console.log("跳转完成");
                });
            }
        }
    };
    return LoopAd_XXPTW_Box;
}(Laya.Script));
exports.default = LoopAd_XXPTW_Box;
},{"../../ALD":1,"../../Event/EventDef":6,"../../Event/EventMgr":7,"../../OPPOAPI":38,"../../QQMiniGameAPI":39,"../../WXAPI":78,"../ShareAd":40}],44:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppConfig_1 = require("./AppConfig");
var TT_XXPTW_API = /** @class */ (function () {
    function TT_XXPTW_API() {
    }
    TT_XXPTW_API._XXPTW_ttLogin_XXPTW_ = function (onSuccess, onFail) {
        if (AppConfig_1.default.onTTMiniGame && null != Laya.Browser.window["tt"]) {
            Laya.Browser.window["tt"].login({
                force: false,
                success: function (res) {
                    console.log("登陆成功1");
                    var code = res.code;
                    if (code) {
                        onSuccess(code);
                    }
                    else {
                        console.log("用户没有登陆，采用临时code");
                        onFail();
                    }
                },
                fail: function () {
                    console.log("登陆失败1");
                    onFail();
                },
            });
            TT_XXPTW_API.init_XXPTW_Record();
        }
    };
    TT_XXPTW_API.on_XXPTW_Rewarded_XXPTW_Video_XXPTW_AdLoad = function () {
        console.log('激励视频 广告加载完成');
    };
    TT_XXPTW_API.on_XXPTW_Rewarded_XXPTW_VideoAd_XXPTW_Error = function (err) {
        console.log('激励视频 广告加载失败' + err);
        if (TT_XXPTW_API._on_XXPTW_Rewarded_XXPTW_VideoAd_XXPTW_Failed) {
            TT_XXPTW_API._on_XXPTW_Rewarded_XXPTW_VideoAd_XXPTW_Failed();
        }
    };
    TT_XXPTW_API.on_XXPTW_Rewarded_XXPTW_VideoAd_XXPTW_Close = function (res) {
        if ((res && res.isEnded) || res == null) {
            console.log('激励视频 已完整观看');
            if (TT_XXPTW_API._on_XXPTW_Rewarded_XXPTW_VideoAd_XXPTW_Close) {
                TT_XXPTW_API._on_XXPTW_Rewarded_XXPTW_VideoAd_XXPTW_Close(true);
            }
        }
        else {
            console.log('激励视频 未完整观看');
            if (TT_XXPTW_API._on_XXPTW_Rewarded_XXPTW_VideoAd_XXPTW_Close) {
                TT_XXPTW_API._on_XXPTW_Rewarded_XXPTW_VideoAd_XXPTW_Close(false);
            }
        }
    };
    TT_XXPTW_API.reg_XXPTW_Rewarded_XXPTW_VideoAd_XXPTW_Event = function (rewardedVideoAd) {
        rewardedVideoAd.onLoad(TT_XXPTW_API.on_XXPTW_Rewarded_XXPTW_Video_XXPTW_AdLoad);
        rewardedVideoAd.onError(TT_XXPTW_API.on_XXPTW_Rewarded_XXPTW_VideoAd_XXPTW_Error);
        rewardedVideoAd.onClose(TT_XXPTW_API.on_XXPTW_Rewarded_XXPTW_VideoAd_XXPTW_Close);
        TT_XXPTW_API._isReg_XXPTW_Rewarded_XXPTW_VideoAd_XXPTW_Event = true;
    };
    TT_XXPTW_API.show_XXPTW_Rewarded_XXPTW_VideoAd = function (onAdClose, onFailed) {
        if (AppConfig_1.default.onTTMiniGame && null != Laya.Browser.window["tt"]) {
            TT_XXPTW_API._on_XXPTW_Rewarded_XXPTW_VideoAd_XXPTW_Close = onAdClose;
            TT_XXPTW_API._on_XXPTW_Rewarded_XXPTW_VideoAd_XXPTW_Failed = onFailed;
            var rewardedVideoAd = Laya.Browser.window["tt"].createRewardedVideoAd({
                adUnitId: TT_XXPTW_API.ad_XXPTW_UnitId,
            });
            if (!TT_XXPTW_API._isReg_XXPTW_Rewarded_XXPTW_VideoAd_XXPTW_Event) {
                TT_XXPTW_API.reg_XXPTW_Rewarded_XXPTW_VideoAd_XXPTW_Event(rewardedVideoAd);
            }
            rewardedVideoAd.load().then(function () {
                var promise = rewardedVideoAd.show();
                promise.then(function () { return console.log('激励视频 广告显示成功'); });
                promise.catch(function (err) {
                    rewardedVideoAd.load()
                        .then(function () { return rewardedVideoAd.show(); })
                        .catch(function (err) {
                        console.log('激励视频 广告显示失败');
                        if (onFailed) {
                            onFailed();
                        }
                    });
                });
            }).catch(function (err) {
                console.log('激励视频 广告加载失败');
                if (onFailed) {
                    onFailed();
                }
            });
        }
        else {
            onAdClose(true);
        }
    };
    //----------------------------------------------------------------
    //-------------------------小游戏跳转---------------------------TODO
    // public static navigateToMiniProgram(appId: string, path: string, onSuccess: Function, onFail: Function, onComplate: Function) {
    //     if (Laya.Browser.onMiniGame) {
    //         console.log("跳转游戏： " + appId);
    //         Laya.Browser.window["tt"].navigateToMiniProgram(
    //             {
    //                 appId: appId,
    //                 path: path,
    //                 extraData: {
    //                     foo: 'bar'
    //                 },
    //                 envVersion: 'release',
    //                 success(res) {
    //                     if (onSuccess) {
    //                         onSuccess(res)
    //                     }
    //                 },
    //                 fail(res) {
    //                     if (onFail) {
    //                         onFail(res)
    //                     }
    //                 },
    //                 complete(res) {
    //                     if (onComplate) {
    //                         onComplate(res)
    //                     }
    //                 }
    //             })
    //     }
    // }
    //-------------------------------------------------------------
    //-------------------录屏-------------------------------------------
    /**
     * 配置录屏
     */
    TT_XXPTW_API.init_XXPTW_Record = function () {
        TT_XXPTW_API.record_XXPTW_ = Laya.Browser.window["tt"].getGameRecorderManager();
        if (TT_XXPTW_API.record_XXPTW_ != null) {
            TT_XXPTW_API.record_XXPTW_.onStart(function (res) {
                console.log("录屏开始");
                TT_XXPTW_API.record_XXPTW_Res = "";
            });
            TT_XXPTW_API.record_XXPTW_.onStop(function (res) {
                console.log("录屏结束");
                TT_XXPTW_API.record_XXPTW_Res = res.videoPath;
            });
        }
    };
    /**
     * 开始录屏
     */
    TT_XXPTW_API.start_XXPTW_Record = function (duration) {
        if (duration === void 0) { duration = 300; }
        if (!AppConfig_1.default.onTTMiniGame)
            return;
        TT_XXPTW_API.record_XXPTW_.start({
            duration: duration
        });
    };
    /**
    * 停止录屏
    */
    TT_XXPTW_API.stop_XXPTW_Record = function () {
        if (!AppConfig_1.default.onTTMiniGame)
            return;
        TT_XXPTW_API.record_XXPTW_.stop();
    };
    //----------------------------------------------------------------------
    //---------------------分享录屏----------------------------------------
    TT_XXPTW_API.share_XXPTW_Record = function (callback, Failcallback) {
        if (callback === void 0) { callback = null; }
        if (Failcallback === void 0) { Failcallback = null; }
        if (!AppConfig_1.default.onTTMiniGame)
            return;
        if (TT_XXPTW_API.record_XXPTW_Res != "") {
            window["tt"].shareAppMessage({
                channel: "video",
                extra: {
                    videoPath: TT_XXPTW_API.record_XXPTW_Res,
                    videoTopics: ["快来和我一起玩吧！"]
                },
                success: function () {
                    if (callback != null) {
                        callback();
                    }
                    console.log("分享视频成功");
                },
                fail: function (e) {
                    console.log("分享视频失败");
                    if (Failcallback != null) {
                        Failcallback();
                    }
                }
            });
        }
        else {
            if (Failcallback != null) {
                Failcallback();
            }
            console.log("分享视频为空");
        }
    };
    //----------------------------------------------------------------------
    //----------------------------------------------------------------------
    //---------------------分享好友----------------------------------------
    TT_XXPTW_API.share_XXPTW_ = function (complate) {
        if (complate === void 0) { complate = null; }
        if (!AppConfig_1.default.onTTMiniGame && null == Laya.Browser.window["tt"])
            return;
        window["tt"].shareAppMessage({
            templateId: TT_XXPTW_API._templateId_XXPTW_,
            success: function () {
                if (complate != null) {
                    complate();
                }
            },
            fail: function () {
                console.log("分享失败");
            }
        });
    };
    //------------------------------------------------------------------
    //-------------------------banner-------------------------------------------
    TT_XXPTW_API.show_XXPTW_Banner = function () {
        if (!AppConfig_1.default.onTTMiniGame || null == Laya.Browser.window["tt"] || TT_XXPTW_API.banner_XXPTW_AdUnitId.length <= 0)
            return;
        if (!TT_XXPTW_API._banner_XXPTW_) {
            var _a = Laya.Browser.window["tt"].getSystemInfoSync(), windowWidth_1 = _a.windowWidth, windowHeight_1 = _a.windowHeight;
            var targetBannerAdWidth = 150;
            // 创建一个居于屏幕底部正中的广告
            TT_XXPTW_API._banner_XXPTW_ = Laya.Browser.window["tt"].createBannerAd({
                adUnitId: TT_XXPTW_API.banner_XXPTW_AdUnitId,
                adIntervals: 30,
                style: {
                    width: targetBannerAdWidth,
                    top: windowHeight_1 - (targetBannerAdWidth / 16) * 9,
                }
            });
            TT_XXPTW_API._banner_XXPTW_.onResize(function (size) {
                console.log(size.width, size.height);
                TT_XXPTW_API._banner_XXPTW_.style.top = windowHeight_1 - size.height;
                TT_XXPTW_API._banner_XXPTW_.style.left = (windowWidth_1 - size.width) / 2;
            });
            TT_XXPTW_API._banner_XXPTW_.show();
        }
    };
    TT_XXPTW_API.hideBanner = function () {
        if (null != TT_XXPTW_API._banner_XXPTW_) {
            TT_XXPTW_API._banner_XXPTW_.hide();
        }
    };
    TT_XXPTW_API.showMoreGamesModal = function (onSuccess, onFail) {
        var systemInfo = Laya.Browser.window["tt"].getSystemInfoSync();
        // iOS 不支持，建议先检测再使用
        if (systemInfo.platform !== "ios") {
            // 打开互跳弹窗
            Laya.Browser.window["tt"].showMoreGamesModal({
                appLaunchOptions: [
                    {
                        appId: AppConfig_1.default.App_XXPTW_ID,
                        query: "foo=bar&baz=qux",
                        extraData: {}
                    }
                    // {...}
                ],
                success: function (res) {
                    console.log("success", res.errMsg);
                    if (onSuccess) {
                        onSuccess();
                    }
                },
                fail: function (res) {
                    console.log("fail", res.errMsg);
                    if (onFail) {
                        onFail();
                    }
                }
            });
        }
        else {
            if (onFail) {
                onFail();
            }
        }
    };
    TT_XXPTW_API.ad_XXPTW_UnitId = "";
    TT_XXPTW_API.banner_XXPTW_AdUnitId = "";
    TT_XXPTW_API.Ins_XXPTW_AdUnitId = "";
    TT_XXPTW_API._templateId_XXPTW_ = ""; //分享素材id
    TT_XXPTW_API.record_XXPTW_Res = "";
    TT_XXPTW_API._banner_XXPTW_ = null;
    //-------------------------激励视频---------------------------------
    TT_XXPTW_API._isReg_XXPTW_Rewarded_XXPTW_VideoAd_XXPTW_Event = false;
    TT_XXPTW_API._on_XXPTW_Rewarded_XXPTW_VideoAd_XXPTW_Failed = null;
    TT_XXPTW_API._on_XXPTW_Rewarded_XXPTW_VideoAd_XXPTW_Close = null;
    return TT_XXPTW_API;
}());
exports.default = TT_XXPTW_API;
},{"./AppConfig":2}],45:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventMgr_1 = require("../Event/EventMgr");
var EventDef_1 = require("../Event/EventDef");
//游戏数据,为保持版本兼容，建议不要删除和修改字段名
var User_XXPTW_Game_XXPTW_Data = /** @class */ (function () {
    function User_XXPTW_Game_XXPTW_Data() {
        this.levelNum = 1; //当前关卡
        this.index = 0; //当前关卡
        this.moneyNum = 0; //金币数量
        this.crystalNum = 0; //钻石数量    
        this.isGuided = 0; //是否已经引导过了    
    }
    return User_XXPTW_Game_XXPTW_Data;
}());
exports.User_XXPTW_Game_XXPTW_Data = User_XXPTW_Game_XXPTW_Data;
var User_XXPTW_ = /** @class */ (function (_super) {
    __extends(User_XXPTW_, _super);
    function User_XXPTW_() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(User_XXPTW_, "is_XXPTW_Login", {
        get: function () {
            return (User_XXPTW_.code_XXPTW_ != "") || (User_XXPTW_._XXPTW_token != "");
        },
        enumerable: true,
        configurable: true
    });
    User_XXPTW_.get_XXPTW_Save_XXPTW_Data = function () {
        return JSON.stringify(User_XXPTW_._game_XXPTW_Data);
    };
    User_XXPTW_.test_XXPTW_InitUser = function () {
        User_XXPTW_._game_XXPTW_Data.levelNum = 1;
        User_XXPTW_._game_XXPTW_Data.moneyNum = 10000000;
        User_XXPTW_._game_XXPTW_Data.crystalNum = 10000000;
    };
    User_XXPTW_.initi_XXPTW_User = function (data) {
        if (data && 0 != data) {
            User_XXPTW_._game_XXPTW_Data.levelNum = data.levelNum;
            User_XXPTW_._game_XXPTW_Data.moneyNum = data.moneyNum;
            User_XXPTW_._game_XXPTW_Data.crystalNum = data.crystalNum;
        }
        else {
            //todo：处理没有获取到玩家数据的情况
        }
    };
    User_XXPTW_.set_XXPTW_IsGuided = function (isGuided) {
        User_XXPTW_._game_XXPTW_Data.isGuided = isGuided;
    };
    User_XXPTW_.get_XXPTW_IsGuided = function () {
        return User_XXPTW_._game_XXPTW_Data.isGuided;
    };
    User_XXPTW_.set_XXPTW_LeveNum = function (levelNum) {
        Laya.LocalStorage.setItem("Level", levelNum.toString());
        User_XXPTW_._game_XXPTW_Data.levelNum = levelNum;
    };
    User_XXPTW_.get_XXPTW_LeveNum = function () {
        var myNumberStr = Laya.LocalStorage.getItem("Level");
        if (myNumberStr == null) {
            myNumber = 1;
        }
        else {
            var myNumber = parseInt(myNumberStr);
        }
        return myNumber;
    };
    User_XXPTW_.add_XXPTW_Money = function (add) {
        add = Math.ceil(add);
        var last = User_XXPTW_._game_XXPTW_Data.moneyNum;
        User_XXPTW_._game_XXPTW_Data.moneyNum += add;
        EventMgr_1.default.ins_XXPTW_tance.dis_XXPTW_patch(EventDef_1.Event_XXPTW_Def.Game_On_XXPTW_User_XXPTW_Money_XXPTW_Change, {
            curr: User_XXPTW_._game_XXPTW_Data.moneyNum,
            last: last
        });
    };
    User_XXPTW_.set_XXPTW_LevelIndex = function (index) {
        User_XXPTW_._game_XXPTW_Data.index = index;
    };
    User_XXPTW_.get_XXPTW_LevelIndex = function () {
        return User_XXPTW_._game_XXPTW_Data.index;
    };
    User_XXPTW_.sub_XXPTW_Money = function (sub) {
        sub = Math.ceil(sub);
        var last = User_XXPTW_._game_XXPTW_Data.moneyNum;
        User_XXPTW_._game_XXPTW_Data.moneyNum -= sub;
        if (User_XXPTW_._game_XXPTW_Data.moneyNum < 0) {
            User_XXPTW_._game_XXPTW_Data.moneyNum = 0;
        }
        EventMgr_1.default.ins_XXPTW_tance.dis_XXPTW_patch(EventDef_1.Event_XXPTW_Def.Game_On_XXPTW_User_XXPTW_Money_XXPTW_Change, {
            curr: User_XXPTW_._game_XXPTW_Data.moneyNum,
            last: last
        });
    };
    User_XXPTW_.get_XXPTW_Money = function () {
        return User_XXPTW_._game_XXPTW_Data.moneyNum;
    };
    User_XXPTW_.add_XXPTW_Crystal = function (add) {
        add = Math.ceil(add);
        var last = User_XXPTW_._game_XXPTW_Data.crystalNum;
        User_XXPTW_._game_XXPTW_Data.crystalNum += add;
        EventMgr_1.default.ins_XXPTW_tance.dis_XXPTW_patch(EventDef_1.Event_XXPTW_Def.Game_On_XXPTW_User_XXPTW_Crystal_XXPTW_Change, {
            curr: User_XXPTW_._game_XXPTW_Data.crystalNum,
            last: last
        });
    };
    User_XXPTW_.sub_XXPTW_Crystal = function (sub) {
        sub = Math.ceil(sub);
        var last = User_XXPTW_._game_XXPTW_Data.crystalNum;
        User_XXPTW_._game_XXPTW_Data.crystalNum -= sub;
        if (User_XXPTW_._game_XXPTW_Data.crystalNum < 0) {
            User_XXPTW_._game_XXPTW_Data.crystalNum = 0;
        }
        EventMgr_1.default.ins_XXPTW_tance.dis_XXPTW_patch(EventDef_1.Event_XXPTW_Def.Game_On_XXPTW_User_XXPTW_Crystal_XXPTW_Change, {
            curr: User_XXPTW_._game_XXPTW_Data.crystalNum,
            last: last
        });
    };
    User_XXPTW_.get_XXPTW_Crystal = function () {
        return User_XXPTW_._game_XXPTW_Data.crystalNum;
    };
    User_XXPTW_.code_XXPTW_ = "";
    User_XXPTW_.openId_XXPTW_ = "";
    User_XXPTW_._XXPTW_token = null;
    User_XXPTW_.nick_XXPTW_Name = "";
    User_XXPTW_.gender_XXPTW_ = 0;
    User_XXPTW_._game_XXPTW_Data = new User_XXPTW_Game_XXPTW_Data();
    return User_XXPTW_;
}(Laya.Script));
exports.default = User_XXPTW_;
},{"../Event/EventDef":6,"../Event/EventMgr":7}],46:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Utilit_XXPTW_ = /** @class */ (function () {
    function Utilit_XXPTW_() {
    }
    Utilit_XXPTW_.Lerp_XXPTW_ = function (form, to, delta) {
        if (form == to)
            return to;
        if (form > to) {
            var next = form - delta;
            if (next <= to)
                return to;
            return next;
        }
        else if (form < to) {
            var next = form + delta;
            if (next >= to)
                return to;
            return next;
        }
    };
    Utilit_XXPTW_.lerp_XXPTW_Euler_XXPTW_Angle = function (form, to, delta) {
        var form = form % 360;
        form = form >= 0 ? form : (360 + form);
        var to = to % 360;
        to = to >= 0 ? to : (360 + to);
        var dis = Math.abs(to - form);
        if (dis > 180) {
            if (form < to)
                to = to - 360;
            else if (form > to)
                to = to + 360;
        }
        var next = Utilit_XXPTW_.Lerp_XXPTW_(form, to, delta);
        return next;
    };
    Utilit_XXPTW_.get_XXPTW_RotationBy_XXPTW_Dir = function (v) {
        var dotValue = (v.x * Utilit_XXPTW_.poin_XXPTW_Down.x) + (v.y * Utilit_XXPTW_.poin_XXPTW_Down.y);
        var cos = dotValue / (v.distance(0, 0) * Utilit_XXPTW_.poin_XXPTW_Down.distance(0, 0));
        var radian = Math.acos(cos);
        var rotation = radian / (2 * Math.PI) * 360;
        if (v.x < 0) {
            rotation = -rotation;
        }
        return rotation;
    };
    Utilit_XXPTW_.get_XXPTW_Rotation_XXPTW_ByDirOn3DSpace = function (v) {
        var dotValue = (v.x * Utilit_XXPTW_.poin_XXPTW_Up.x) + (v.y * Utilit_XXPTW_.poin_XXPTW_Up.y);
        var cos = dotValue / (v.distance(0, 0) * Utilit_XXPTW_.poin_XXPTW_Up.distance(0, 0));
        var radian = Math.acos(cos);
        var rotation = radian / (2 * Math.PI) * 360;
        if (v.x < 0) {
            rotation = rotation + (180 - rotation) * 2;
        }
        return rotation;
    };
    Utilit_XXPTW_.get_XXPTW_DirBy_XXPTW_Rotation = function (rotation) {
        var radian = (rotation - 90) * Math.PI / 180; // -90 是转换到场景坐标系
        var x = Math.cos(radian);
        var y = Math.sin(radian);
        var point = new Laya.Point(x, y);
        point.normalize();
        return point;
    };
    Utilit_XXPTW_.get_XXPTW_DirDir_XXPTW_Angle = function (dir1, dir2) {
        var dotValue = (dir1.x * dir2.x) + (dir1.y * dir2.y);
        var cos = dotValue / (dir1.distance(0, 0) * dir2.distance(0, 0));
        var radian = Math.acos(cos);
        var angle = radian / (2 * Math.PI) * 360;
        return angle;
    };
    Utilit_XXPTW_.get_XXPTW_Dir_XXPTW_ScalarLength = function (dir) {
        var sl = Math.sqrt(dir.x * dir.x + dir.y * dir.y);
        return sl;
    };
    Utilit_XXPTW_.set_XXPTW_SpOn_XXPTW_ParentCenter = function (sp) {
        if (null == sp.parent)
            return;
        var psp = sp.parent;
        var x = 0;
        var y = 0;
        var x = x - sp.width / 2 * sp.scaleX + psp.width / 2;
        var y = y - sp.height / 2 * sp.scaleY + psp.height / 2;
        sp.x = x;
        sp.y = y;
    };
    Utilit_XXPTW_.get_XXPTW_Point_XXPTW_To_XXPTW_Line_XXPTW_Distance = function (x, y, LineStart, LineEnd) {
        var toStartDir = new Laya.Point(x - LineStart.x, y - LineStart.y);
        var toEndDir = new Laya.Point(x - LineEnd.x, y - LineEnd.y);
        var lineDir = new Laya.Point(LineEnd.x - LineStart.y, LineEnd.y - LineStart.y);
        var dotToStartDir = (lineDir.x * toStartDir.x) + (lineDir.y * toStartDir.y);
        if (dotToStartDir <= 0) {
            return toStartDir.distance(0, 0);
        }
        var dotToEndDir = (lineDir.x * toEndDir.x) + (lineDir.y * toEndDir.y);
        if (dotToEndDir <= 0) {
            return toEndDir.distance(0, 0);
        }
        var toStartDis = toStartDir.distance(0, 0);
        var lineDirDis = lineDir.distance(0, 0);
        var cos = dotToStartDir / (toStartDis * lineDirDis);
        var radians = Math.acos(cos);
        var dis = Math.sin(radians) * toStartDis;
        return dis;
    };
    Utilit_XXPTW_.is_XXPTW_IphoneX = function () {
        if (!Laya.Browser.onIPhone)
            return false;
        if ((Laya.Browser.width == 2436 && Laya.Browser.height == 1125)
            || (Laya.Browser.height == 2436 && Laya.Browser.width == 1125)) {
            return true;
        }
        return false;
    };
    Utilit_XXPTW_.is_XXPTW_Iphone = function () {
        return Laya.Browser.onIPhone;
    };
    Utilit_XXPTW_.get_XXPTW_Child = function (node, name) {
        for (var i = 0; i < node.numChildren; ++i) {
            var child = node.getChildAt(i);
            if (child.name == name) {
                return child;
            }
            else {
                var target = Utilit_XXPTW_.get_XXPTW_Child(child, name);
                if (target)
                    return target;
            }
        }
        return null;
    };
    Utilit_XXPTW_.for_XXPTW_Each_XXPTW_Child = function (node, each) {
        for (var i = 0; i < node.numChildren; ++i) {
            var child = node.getChildAt(i);
            each(child);
            Utilit_XXPTW_.for_XXPTW_Each_XXPTW_Child(child, each);
        }
    };
    Utilit_XXPTW_.Origin_XXPTW_StageWidth = 1334;
    Utilit_XXPTW_.Origin_XXPTW_StageHeight = 750;
    Utilit_XXPTW_.grayscale_XXPTW_Mat = [0.3086, 0.6094, 0.0820, 0, 0,
        0.3086, 0.6094, 0.0820, 0, 0,
        0.3086, 0.6094, 0.0820, 0, 0,
        0, 0, 0, 1, 0];
    Utilit_XXPTW_.grayscale_XXPTW_Filter = new Laya.ColorFilter(Utilit_XXPTW_.grayscale_XXPTW_Mat);
    Utilit_XXPTW_.poin_XXPTW_Down = new Laya.Point(0, -1);
    Utilit_XXPTW_.poin_XXPTW_Up = new Laya.Point(0, 1);
    return Utilit_XXPTW_;
}());
exports.default = Utilit_XXPTW_;
},{}],47:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var SoundMgr_1 = require("../Mgr/SoundMgr");
var Button_XXPTW_Anim = /** @class */ (function (_super) {
    __extends(Button_XXPTW_Anim, _super);
    function Button_XXPTW_Anim() {
        var _this = _super.call(this) || this;
        _this.use_XXPTW_Sound = true;
        return _this;
    }
    Button_XXPTW_Anim.prototype.onAwake = function () {
        this.owner.on(Laya.Event.MOUSE_DOWN, this, this.on_XXPTW_Down);
        this.owner.on(Laya.Event.MOUSE_UP, this, this.on_XXPTW_Up);
        this.owner.on(Laya.Event.MOUSE_OUT, this, this.on_XXPTW_Up);
    };
    Button_XXPTW_Anim.prototype.onDisable = function () {
        this.owner.offAll();
        Laya.Tween.clearAll(this);
    };
    Button_XXPTW_Anim.prototype.on_XXPTW_Down = function () {
        Laya.Tween.to(this.owner, { scaleX: 0.9, scaleY: 0.9 }, 50);
        if (this.use_XXPTW_Sound) {
            SoundMgr_1.default.ins_XXPTW_tance.play_XXPTW_Sound("click");
        }
    };
    Button_XXPTW_Anim.prototype.on_XXPTW_Up = function () {
        Laya.Tween.to(this.owner, { scaleX: 1, scaleY: 1 }, 50);
    };
    return Button_XXPTW_Anim;
}(Laya.Script));
exports.default = Button_XXPTW_Anim;
},{"../Mgr/SoundMgr":29}],48:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../../View/ViewBase");
var EventDef_1 = require("../../Event/EventDef");
var EventMgr_1 = require("../../Event/EventMgr");
var CachedWXBannerAd_1 = require("../../CachedWXBannerAd");
/**
 * 狂点窗口使用范例如下
    //首先判断狂点功能开关WudianMgr.WudianFlag是否打开，如果没打开就直接跳过整个逻辑
    WudianMgr.GetIpBlockState();//在游戏里初始化的时候调用这个方法初始化Ip屏蔽flag
    //将这段代码插入需要调用狂点窗口的地方
    let data : any = {};
    //狂点逻辑完成后的回调方法
    data.Complete = function(){
        console.log("狂点按钮结束");//在这里写入狂点窗口结束后需要调用的逻辑，例如弹出结算页面
    }
    // 完成点击之后获得的奖励数量，依照各项目不同自行实现
    data.PrizeCount = 30;
    // 在调用窗口前必须关闭当前正在显示的官方Banner广告，这个窗口才能正常运行，具体的逻辑各人需自行实现
    // 而且关闭官方Banner可以稍微提早一些，避免频繁调用出错或者不稳定
    Event_PK_Mgr.instance.dispatch(Event_PK_Def.AD_CloseBanner, true);//这句代码是我用来关闭官方Banner，各项目自行实现
    ViewMgr.instance.openView(ViewDef.ClickGetPrize,data);
 *
 * @export
 * @class ClickGetPrize
 * @extends {View_XXPTW_Base}
 */
var Click_XXPTW_Get_XXPTW_Prize = /** @class */ (function (_super) {
    __extends(Click_XXPTW_Get_XXPTW_Prize, _super);
    function Click_XXPTW_Get_XXPTW_Prize() {
        var _this = _super.call(this) || this;
        _this._total_XXPTW_Click_XXPTW_Timer = 22; //用户一直没中套路，那么点击了这么多次都还是让他继续玩下去，不要卡死程序
        _this._need_XXPTW_Click_XXPTW_Time = 10; //一共点多少次能够获得奖励，用于显示进度条
        _this._banner_XXPTW_ClickTime = 7; //点多少次开始显示bannerr套路用户，可微调    
        return _this;
    }
    // private _wudianLoadFlag: boolean;
    Click_XXPTW_Get_XXPTW_Prize.prototype.onAwake = function () {
        this._click_XXPTW__Btn = this.owner.getChildByName("Click_Btn");
        this._click_XXPTW__Btn.on(Laya.Event.CLICK, this, this.Button_XXPTW_Clicked);
        this._arrow_XXPTW__Img = this._click_XXPTW__Btn.getChildByName("Arrow_Img");
        this._bg_XXPTW_ = this.owner.getChildByName("BG");
        this._open_XXPTW__Btn = this._bg_XXPTW_.getChildByName("Open_Btn");
        this._getPrize_XXPTW__View = this.owner.getChildByName("GetPrize_View");
        this._prizeCount_XXPTW__Text = this._getPrize_XXPTW__View.getChildByName("PrizeCount_Text");
        this._confirm_XXPTW__Btn = this._getPrize_XXPTW__View.getChildByName("Confirm_Btn");
        this._getPrize_XXPTW__View.visible = false;
        this._clickTime_XXPTW__PBar = this._bg_XXPTW_.getChildByName("ClickTime_PBar");
        this._clickTime_XXPTW__PBar$Bar = this._clickTime_XXPTW__PBar.getChildByName("ClickTime_PBar$Bar");
        this._click_XXPTW_Bar_XXPTW_OriginalWidth = this._clickTime_XXPTW__PBar$Bar.width;
        this._bannerAd_XXPTW__View = this.owner.getChildByName("BannerAd_View");
        this._clickTime_XXPTW__PBar$Bar.width = 0;
        this._click_XXPTW_Time = 0;
        this._total_XXPTW_Click_XXPTW_Time = 0;
        //EventMgr.instance.regOnceEvent(EventDef.AD_WudianBanner_LoadComplete, this, this.WudianLoadComplete);
    };
    Click_XXPTW_Get_XXPTW_Prize.prototype.onUpdate = function () {
        /* 箭头上下移动 */
        if (this._arrowUp_XXPTW_) {
            this._arrow_XXPTW__Img.top += Laya.timer.delta / 5;
            if (this._arrow_XXPTW__Img.top > -140) {
                this._arrowUp_XXPTW_ = false;
            }
        }
        else {
            this._arrow_XXPTW__Img.top -= Laya.timer.delta / 5;
            if (this._arrow_XXPTW__Img.top < -180) {
                this._arrowUp_XXPTW_ = true;
            }
        }
        /* 按钮不按，进度条自动退回 */
        if (!this._banner_XXPTW_Clicked) {
            var spd = 2 + (this._clickTime_XXPTW__PBar$Bar.width / this._click_XXPTW_Bar_XXPTW_OriginalWidth) * 6;
            if (this._clickTime_XXPTW__PBar$Bar.width >= spd) {
                this._clickTime_XXPTW__PBar$Bar.width -= spd;
            }
            if ((this._clickTime_XXPTW__PBar$Bar.width / this._click_XXPTW_Bar_XXPTW_OriginalWidth) + 0.1 < (this._click_XXPTW_Time / this._need_XXPTW_Click_XXPTW_Time)) {
                this._click_XXPTW_Time--;
            }
        }
        // else {
        //     if (this._clickTime_PBar$Bar.width <= this._clickBarOriginalWidth) {
        //         this._clickTime_PBar$Bar.width += 2;
        //         if (this._clickTime_PBar$Bar.width > this._clickBarOriginalWidth) {
        //             this._clickTime_PBar$Bar.width = this._clickBarOriginalWidth
        //         }
        //     }
        // }
    };
    /**
     * 打开Banner
     *
     * @param {*} [data]
     * @memberof ClickGetPrize
     */
    Click_XXPTW_Get_XXPTW_Prize.prototype.open_XXPTW_View = function (data) {
        this._compelet_XXPTW_Function = data.Complete;
        this._prize_XXPTW_Count = data.PrizeCount;
        _super.prototype.open_XXPTW_View.call(this, data);
    };
    /**
     * 用户成功获得奖励
     *
     * @memberof ClickGetPrize
     */
    Click_XXPTW_Get_XXPTW_Prize.prototype.Open_XXPTW_PrizeWindow = function () {
        this._bg_XXPTW_.visible = false;
        var self = this;
        this._prizeCount_XXPTW__Text.text = this._prize_XXPTW_Count.toString();
        this._getPrize_XXPTW__View.visible = true;
        /* 确认按钮 */
        this._confirm_XXPTW__Btn.once(Laya.Event.CLICK, this, function () {
            if (self._compelet_XXPTW_Function) {
                self._compelet_XXPTW_Function();
            }
            self.close_XXPTW_View();
        });
    };
    /**
     * 误点预加载完成
     *
     * @memberof ClickGetPrize
     */
    // WudianLoadComplete() {
    //     console.log("WudianBanner预加载完毕");
    //     this._wudianLoadFlag = true;
    // }
    /**
     * 将Banner显示
     *
     * @memberof ClickGetPrize
     */
    Click_XXPTW_Get_XXPTW_Prize.prototype.Show_XXPTW_Banner = function () {
        console.log("AD_WudianBanner_Show");
        CachedWXBannerAd_1.default._XXPTW_show_XXPTW_();
    };
    /**
     * 狂点按钮逻辑
     *
     *
     * @memberof ClickGetPrize
     */
    Click_XXPTW_Get_XXPTW_Prize.prototype.Button_XXPTW_Clicked = function () {
        this._click_XXPTW_Time++;
        this._total_XXPTW_Click_XXPTW_Time++;
        //nanner一直没加载成功,保持进度条
        if (this._click_XXPTW_Time > this._need_XXPTW_Click_XXPTW_Time) {
            this._click_XXPTW_Time = this._need_XXPTW_Click_XXPTW_Time;
        }
        if (this._click_XXPTW_Time >= this._banner_XXPTW_ClickTime /*&& this._wudianLoadFlag*/) {
            if (this._click_XXPTW_Time >= this._need_XXPTW_Click_XXPTW_Time) {
                this._click_XXPTW_Time = this._need_XXPTW_Click_XXPTW_Time - 1;
            }
            this._banner_XXPTW_Clicked = true;
            console.log("误点Banner套路启动");
            //用户连点，出banner
            this.Show_XXPTW_Banner();
            Laya.timer.once(2000, this, function () {
                this.BannerClicked();
            });
        }
        //用户一直没被套路到，让他继续玩
        else if (this._total_XXPTW_Click_XXPTW_Time > this._total_XXPTW_Click_XXPTW_Timer) {
            console.log("用户一直没点到，放他一马", this._total_XXPTW_Click_XXPTW_Time);
            this.Banner_XXPTW_Clicked();
        }
        var progress = (this._click_XXPTW_Time / this._need_XXPTW_Click_XXPTW_Time) * this._click_XXPTW_Bar_XXPTW_OriginalWidth;
        this._clickTime_XXPTW__PBar$Bar.width = progress;
    };
    /**
     * Banner已经点击之后，让用户获得奖励
     *
     * @memberof ClickGetPrize
     */
    Click_XXPTW_Get_XXPTW_Prize.prototype.Banner_XXPTW_Clicked = function () {
        EventMgr_1.default.ins_XXPTW_tance.dis_XXPTW_patch(EventDef_1.Event_XXPTW_Def.AD_Wu_XXPTW_dian_XXPTW_Banner__XXPTW_Hide);
        this._banner_XXPTW_Clicked = true;
        this._click_XXPTW_Time = this._need_XXPTW_Click_XXPTW_Time;
        this._clickTime_XXPTW__PBar$Bar.width = this._click_XXPTW_Bar_XXPTW_OriginalWidth;
        this._click_XXPTW__Btn.visible = false;
        this._open_XXPTW__Btn.visible = true;
        // this._bannerAd_View.visible = false;
        // this._bannerAd_View.active = false;
        this.Open_XXPTW_PrizeWindow();
    };
    Click_XXPTW_Get_XXPTW_Prize.prototype.onDestroy = function () {
        _super.prototype.onDestroy.call(this);
        CachedWXBannerAd_1.default._XXPTW_hide_XXPTW_();
    };
    return Click_XXPTW_Get_XXPTW_Prize;
}(ViewBase_1.default));
exports.default = Click_XXPTW_Get_XXPTW_Prize;
},{"../../CachedWXBannerAd":4,"../../Event/EventDef":6,"../../Event/EventMgr":7,"../../View/ViewBase":77}],49:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BannerAdView_1 = require("../../ShareAd/View/BannerAdView");
var Universal_XXPTW_BottomZone = /** @class */ (function (_super) {
    __extends(Universal_XXPTW_BottomZone, _super);
    function Universal_XXPTW_BottomZone() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Universal_XXPTW_BottomZone.prototype.onAwake = function () {
        this._owner_XXPTW_Sprite = this.owner;
        this._auto_XXPTW_Zone = this._owner_XXPTW_Sprite.getChildByName("AutoZone");
        this._loop_XXPTW_ADZone = this._owner_XXPTW_Sprite.getChildByName("LoopAD");
        this._banner_XXPTW_ADZone = this._owner_XXPTW_Sprite.getChildByName("BannerAD");
        this._banner_XXPTW_Ad = this._banner_XXPTW_ADZone.getComponent(BannerAdView_1.default);
    };
    Universal_XXPTW_BottomZone.prototype.onEnable = function () {
        var aspectRatio = Laya.stage.width / Laya.stage.height;
        if (aspectRatio < 0.5) {
            this._auto_XXPTW_Zone.bottom = this._loop_XXPTW_ADZone.height + this._banner_XXPTW_ADZone.height;
            this._loop_XXPTW_ADZone.bottom = this._banner_XXPTW_ADZone.height;
            this._banner_XXPTW_ADZone.visible = true;
        }
        else {
            this._auto_XXPTW_Zone.bottom = this._loop_XXPTW_ADZone.height;
            this._loop_XXPTW_ADZone.bottom = 0;
            this._banner_XXPTW_ADZone.visible = false;
        }
    };
    Universal_XXPTW_BottomZone.prototype.onDisable = function () {
    };
    Universal_XXPTW_BottomZone.prototype.onUpdate = function () {
        if (!this._banner_XXPTW_ADZone.visible) {
            this._banner_XXPTW_Ad.clear_XXPTW_WXBaner();
        }
    };
    return Universal_XXPTW_BottomZone;
}(Laya.Script));
exports.default = Universal_XXPTW_BottomZone;
},{"../../ShareAd/View/BannerAdView":41}],50:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function isIViewStateListener(element) {
    if ((null != element.onViewShow && typeof (element.onViewShow) == "function")
        && (null != element.onViewHide && typeof (element.onViewHide) == "function")) {
        return true;
    }
    return false;
}
exports.isIViewStateListener = isIViewStateListener;
},{}],51:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var LogoAni_1 = require("./LogoAni");
var Loading_XXPTW_View = /** @class */ (function (_super) {
    __extends(Loading_XXPTW_View, _super);
    function Loading_XXPTW_View() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._process_XXPTW_Width = 0;
        _this._logo_XXPTW_Ani = null;
        return _this;
    }
    Loading_XXPTW_View.prototype.onAwake = function () {
        this._bg_XXPTW_ = this.owner.getChildByName("Bg");
        this._bottom_XXPTW_Zone = this._bg_XXPTW_.getChildByName("BottomZone");
        this._process_XXPTW_BarBg = this._bottom_XXPTW_Zone.getChildByName("processBarBg");
        this._process_XXPTW_Bar = this._process_XXPTW_BarBg.getChildByName("processBar");
        this._process_XXPTW_Width = this._process_XXPTW_Bar.width;
        this._logo_XXPTW_Ani = this._bottom_XXPTW_Zone.getChildByName("LogoAni").getComponent(LogoAni_1.default);
    };
    Loading_XXPTW_View.prototype.onStart = function () {
        var _this = this;
        Laya.timer.once(250, this, function () {
            _this._logo_XXPTW_Ani.play_XXPTW_Ani();
        });
    };
    Loading_XXPTW_View.prototype.onEnable = function () {
        _super.prototype.onEnable.call(this);
    };
    Loading_XXPTW_View.prototype.add_XXPTW_Event = function () {
        _super.prototype.add_XXPTW_Event.call(this);
    };
    Loading_XXPTW_View.prototype.remove_XXPTW_Event = function () {
        _super.prototype.remove_XXPTW_Event.call(this);
    };
    Loading_XXPTW_View.prototype.onUpdate = function () {
        this._bg_XXPTW_.width = Laya.stage.width;
        this._bg_XXPTW_.height = Laya.stage.height;
    };
    Loading_XXPTW_View.prototype.set_XXPTW_Process = function (process) {
        if (process < 0)
            process = 0;
        if (process > 1)
            process = 1;
        var width = this._process_XXPTW_Width * process;
        if (width < 1)
            width = 1;
        this._process_XXPTW_Bar.width = width;
    };
    return Loading_XXPTW_View;
}(ViewBase_1.default));
exports.default = Loading_XXPTW_View;
},{"../ViewBase":77,"./LogoAni":52}],52:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Logo_XXPTW_Ani = /** @class */ (function (_super) {
    __extends(Logo_XXPTW_Ani, _super);
    function Logo_XXPTW_Ani() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._ani_XXPTW_Sprites = [];
        _this._ani_XXPTW_SpriteOriginPos = [];
        return _this;
    }
    Logo_XXPTW_Ani.prototype.onAwake = function () {
        for (var i = 0; i < this.owner.numChildren; ++i) {
            var child = this.owner.getChildAt(i);
            child.alpha = 0;
            this._ani_XXPTW_Sprites.push(child);
            this._ani_XXPTW_SpriteOriginPos.push(new Laya.Point(child.x, child.y));
        }
    };
    Logo_XXPTW_Ani.prototype.play_XXPTW_Ani = function () {
        if (Laya.Browser.onQGMiniGame) {
            for (var i = 0; i < this._ani_XXPTW_Sprites.length; ++i) {
                this._ani_XXPTW_Sprites[i].visible = false;
            }
            return;
        }
        var _loop_1 = function (i) {
            var isLast = i == (this_1._ani_XXPTW_Sprites.length - 1) ? true : false;
            var sp = this_1._ani_XXPTW_Sprites[i];
            var originPos = this_1._ani_XXPTW_SpriteOriginPos[i];
            sp.alpha = 0;
            sp.y += originPos.y + 50;
            var self_1 = this_1;
            Laya.Tween.to(sp, {
                y: originPos.y,
                alpha: 1
            }, 450, Laya.Ease.elasticOut, Laya.Handler.create(this_1, function () {
                if (isLast) {
                    Laya.timer.once(300, self_1, function () {
                        self_1.play_XXPTW_Ani();
                    });
                }
            }), i * 80);
        };
        var this_1 = this;
        for (var i = 0; i < this._ani_XXPTW_Sprites.length; ++i) {
            _loop_1(i);
        }
    };
    return Logo_XXPTW_Ani;
}(Laya.Script));
exports.default = Logo_XXPTW_Ani;
},{}],53:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var WudianMgr_1 = require("../../../Mgr/WudianMgr");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var Utilit_1 = require("../../../Utilit");
var QQTemplateViewBase_1 = require("../QQTemplateViewBase");
var QQMiniGameAPI_1 = require("../../../QQMiniGameAPI");
var AppConfig_1 = require("../../../AppConfig");
var QQ_XXPTW_Game_XXPTW_FailViewTemplate = /** @class */ (function (_super) {
    __extends(QQ_XXPTW_Game_XXPTW_FailViewTemplate, _super);
    function QQ_XXPTW_Game_XXPTW_FailViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._center_XXPTW_Zone = null;
        _this._back_XXPTW_Btn = null;
        _this._continue_XXPTW_Btn = null;
        _this._click_XXPTW_Tag = false;
        _this._click_XXPTW_TimingTag = false;
        return _this;
    }
    QQ_XXPTW_Game_XXPTW_FailViewTemplate.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._center_XXPTW_Zone = this.View_XXPTW_.getChildByName("CenterZone");
        if (Utilit_1.default.is_XXPTW_IphoneX()) {
            this._center_XXPTW_Zone.top = this._center_XXPTW_Zone.top + 75;
        }
        this._back_XXPTW_Btn = this._center_XXPTW_Zone.getChildByName("BackBtn");
        this._continue_XXPTW_Btn = this._center_XXPTW_Zone.getChildByName("ContinueBtn");
    };
    QQ_XXPTW_Game_XXPTW_FailViewTemplate.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
        if (WudianMgr_1.default.Wu_XXPTW_dian_XXPTW_Flag && 1 == AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().qq_XXPTW_cfg.wei_XXPTW_yi
            && AppConfig_1.default.Versions_XXPTW_ == AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().qq_XXPTW_cfg.qq_XXPTW_versions) {
            var yPos = this._center_XXPTW_Zone.height - 150;
            this._back_XXPTW_Btn.y = yPos;
            this._continue_XXPTW_Btn.y = yPos;
        }
        var self = this;
        if (AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().qq_XXPTW_cfg.box == 1
            && AppConfig_1.default.Versions_XXPTW_ == AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().qq_XXPTW_cfg.qq_XXPTW_versions) {
            QQMiniGameAPI_1.default.show_XXPTW_App_XXPTW_BoxAd(function () {
            }, function () {
                var btnMoveTimer = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().btn_XXPTW_Move_XXPTW_Timer;
                var bannerMoveTimer = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().banner_XXPTW_Move_XXPTW_Timer;
                Laya.timer.once(bannerMoveTimer * 1000, self, self.Banner_XXPTW_Up);
                Laya.timer.once(btnMoveTimer * 1000, self, self.Btn_XXPTW_Up);
            });
        }
        else {
            var btnMoveTimer = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().btn_XXPTW_Move_XXPTW_Timer;
            var bannerMoveTimer = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().banner_XXPTW_Move_XXPTW_Timer;
            Laya.timer.once(bannerMoveTimer * 1000, self, self.Banner_XXPTW_Up);
            Laya.timer.once(btnMoveTimer * 1000, self, self.Btn_XXPTW_Up);
        }
    };
    QQ_XXPTW_Game_XXPTW_FailViewTemplate.prototype.add_XXPTW_Event = function () {
        _super.prototype.add_XXPTW_Event.call(this);
        this._back_XXPTW_Btn.on(Laya.Event.CLICK, this, this.on_XXPTW_Back_XXPTW_Btn);
        this._continue_XXPTW_Btn.on(Laya.Event.CLICK, this, this.on_XXPTW_Continue_XXPTW_Btn);
    };
    QQ_XXPTW_Game_XXPTW_FailViewTemplate.prototype.remove_XXPTW_Event = function () {
        _super.prototype.remove_XXPTW_Event.call(this);
        this._back_XXPTW_Btn.off(Laya.Event.CLICK, this, this.on_XXPTW_Back_XXPTW_Btn);
        this._continue_XXPTW_Btn.off(Laya.Event.CLICK, this, this.on_XXPTW_Continue_XXPTW_Btn);
    };
    QQ_XXPTW_Game_XXPTW_FailViewTemplate.prototype.on_XXPTW_Back_XXPTW_Btn = function () {
        if (!this._click_XXPTW_Tag && WudianMgr_1.default.Wu_XXPTW_dian_XXPTW_Flag) {
            var self = this;
            if (!this._click_XXPTW_TimingTag) {
                this._click_XXPTW_TimingTag = true;
                var btnMoveTimer = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().btn_XXPTW_Move_XXPTW_Timer;
                var bannerMoveTimer = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().banner_XXPTW_Move_XXPTW_Timer;
                Laya.timer.once(bannerMoveTimer * 1000, this, this.Banner_XXPTW_Up);
                Laya.timer.once(btnMoveTimer * 1000, this, this.Btn_XXPTW_Up);
            }
            return;
        }
        //todo:你的代码
    };
    QQ_XXPTW_Game_XXPTW_FailViewTemplate.prototype.on_XXPTW_Continue_XXPTW_Btn = function () {
        if (!this._click_XXPTW_Tag && WudianMgr_1.default.Wu_XXPTW_dian_XXPTW_Flag) {
            var self = this;
            if (!this._click_XXPTW_TimingTag) {
                this._click_XXPTW_TimingTag = true;
                var btnMoveTimer = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().btn_XXPTW_Move_XXPTW_Timer;
                var bannerMoveTimer = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().banner_XXPTW_Move_XXPTW_Timer;
                Laya.timer.once(bannerMoveTimer * 1000, this, this.Banner_XXPTW_Up);
                Laya.timer.once(btnMoveTimer * 1000, this, this.Btn_XXPTW_Up);
            }
            return;
        }
        //todo:你的代码
    };
    QQ_XXPTW_Game_XXPTW_FailViewTemplate.prototype.Banner_XXPTW_Up = function () {
        //todo：显示Banner
    };
    QQ_XXPTW_Game_XXPTW_FailViewTemplate.prototype.Btn_XXPTW_Up = function () {
        this._click_XXPTW_Tag = true;
        this._back_XXPTW_Btn.y = 720;
        this._continue_XXPTW_Btn.y = 720;
    };
    QQ_XXPTW_Game_XXPTW_FailViewTemplate.prototype.onDestroy = function () {
        //todo：隐藏Banner
    };
    return QQ_XXPTW_Game_XXPTW_FailViewTemplate;
}(QQTemplateViewBase_1.default));
exports.default = QQ_XXPTW_Game_XXPTW_FailViewTemplate;
},{"../../../AppConfig":2,"../../../Config/AppSwitchConfig":5,"../../../Mgr/WudianMgr":33,"../../../QQMiniGameAPI":39,"../../../Utilit":46,"../QQTemplateViewBase":59}],54:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var WudianMgr_1 = require("../../../Mgr/WudianMgr");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var Utilit_1 = require("../../../Utilit");
var QQTemplateViewBase_1 = require("../QQTemplateViewBase");
var QQMiniGameAPI_1 = require("../../../QQMiniGameAPI");
var AppConfig_1 = require("../../../AppConfig");
var QQ_XXPTW_GameWinView_XXPTW_Template = /** @class */ (function (_super) {
    __extends(QQ_XXPTW_GameWinView_XXPTW_Template, _super);
    function QQ_XXPTW_GameWinView_XXPTW_Template() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._center_XXPTW_Zone = null;
        _this._back_XXPTW_Btn = null;
        _this._next_XXPTW_Btn = null;
        _this._click_XXPTW_Tag = false;
        _this._click_XXPTW_TimingTag = false;
        return _this;
    }
    QQ_XXPTW_GameWinView_XXPTW_Template.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._center_XXPTW_Zone = this.View_XXPTW_.getChildByName("CenterZone");
        if (Utilit_1.default.is_XXPTW_IphoneX()) {
            this._center_XXPTW_Zone.top = this._center_XXPTW_Zone.top + 75;
        }
        this._back_XXPTW_Btn = this._center_XXPTW_Zone.getChildByName("BackBtn");
        this._next_XXPTW_Btn = this._center_XXPTW_Zone.getChildByName("NextBtn");
    };
    QQ_XXPTW_GameWinView_XXPTW_Template.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
        if (WudianMgr_1.default.Wu_XXPTW_dian_XXPTW_Flag && 1 == AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().qq_XXPTW_cfg.wei_XXPTW_yi
            && AppConfig_1.default.Versions_XXPTW_ == AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().qq_XXPTW_cfg.qq_XXPTW_versions) {
            var yPos = this._center_XXPTW_Zone.height - 150;
            this._back_XXPTW_Btn.y = yPos;
            this._next_XXPTW_Btn.y = yPos;
        }
        var self = this;
        if (AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().qq_XXPTW_cfg.box == 1
            && AppConfig_1.default.Versions_XXPTW_ == AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().qq_XXPTW_cfg.qq_XXPTW_versions) {
            QQMiniGameAPI_1.default.show_XXPTW_App_XXPTW_BoxAd(function () {
            }, function () {
                var btnMoveTimer = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().btn_XXPTW_Move_XXPTW_Timer;
                var bannerMoveTimer = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().banner_XXPTW_Move_XXPTW_Timer;
                Laya.timer.once(bannerMoveTimer * 1000, self, self.Banner_XXPTW_Up);
                Laya.timer.once(btnMoveTimer * 1000, self, self.Btn_XXPTW_Up);
            });
        }
        else {
            var btnMoveTimer = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().btn_XXPTW_Move_XXPTW_Timer;
            var bannerMoveTimer = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().banner_XXPTW_Move_XXPTW_Timer;
            Laya.timer.once(bannerMoveTimer * 1000, self, self.Banner_XXPTW_Up);
            Laya.timer.once(btnMoveTimer * 1000, self, self.Btn_XXPTW_Up);
        }
    };
    QQ_XXPTW_GameWinView_XXPTW_Template.prototype.add_XXPTW_Event = function () {
        _super.prototype.add_XXPTW_Event.call(this);
        this._back_XXPTW_Btn.on(Laya.Event.CLICK, this, this.on_XXPTW_Back_XXPTW_Btn);
        this._next_XXPTW_Btn.on(Laya.Event.CLICK, this, this.on_XXPTW_Next_XXPTW_Btn);
    };
    QQ_XXPTW_GameWinView_XXPTW_Template.prototype.remove_XXPTW_Event = function () {
        _super.prototype.remove_XXPTW_Event.call(this);
        this._back_XXPTW_Btn.off(Laya.Event.CLICK, this, this.on_XXPTW_Back_XXPTW_Btn);
        this._next_XXPTW_Btn.off(Laya.Event.CLICK, this, this.on_XXPTW_Next_XXPTW_Btn);
    };
    QQ_XXPTW_GameWinView_XXPTW_Template.prototype.on_XXPTW_Back_XXPTW_Btn = function () {
        if (!this._click_XXPTW_Tag && WudianMgr_1.default.Wu_XXPTW_dian_XXPTW_Flag) {
            var self = this;
            if (!this._click_XXPTW_TimingTag) {
                this._click_XXPTW_TimingTag = true;
                var btnMoveTimer = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().btn_XXPTW_Move_XXPTW_Timer;
                var bannerMoveTimer = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().banner_XXPTW_Move_XXPTW_Timer;
                Laya.timer.once(bannerMoveTimer * 1000, this, this.Banner_XXPTW_Up);
                Laya.timer.once(btnMoveTimer * 1000, this, this.Btn_XXPTW_Up);
            }
            return;
        }
        //todo:你的代码
    };
    QQ_XXPTW_GameWinView_XXPTW_Template.prototype.on_XXPTW_Next_XXPTW_Btn = function () {
        if (!this._click_XXPTW_Tag && WudianMgr_1.default.Wu_XXPTW_dian_XXPTW_Flag) {
            var self = this;
            if (!this._click_XXPTW_TimingTag) {
                this._click_XXPTW_TimingTag = true;
                var btnMoveTimer = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().btn_XXPTW_Move_XXPTW_Timer;
                var bannerMoveTimer = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().banner_XXPTW_Move_XXPTW_Timer;
                Laya.timer.once(bannerMoveTimer * 1000, this, this.Banner_XXPTW_Up);
                Laya.timer.once(btnMoveTimer * 1000, this, this.Btn_XXPTW_Up);
            }
            return;
        }
        //todo:你的代码
    };
    QQ_XXPTW_GameWinView_XXPTW_Template.prototype.Banner_XXPTW_Up = function () {
        //todo：显示Banner
    };
    QQ_XXPTW_GameWinView_XXPTW_Template.prototype.Btn_XXPTW_Up = function () {
        this._click_XXPTW_Tag = true;
        this._back_XXPTW_Btn.y = 720;
        this._next_XXPTW_Btn.y = 720;
    };
    QQ_XXPTW_GameWinView_XXPTW_Template.prototype.onDestroy = function () {
        //todo：隐藏Banner
    };
    return QQ_XXPTW_GameWinView_XXPTW_Template;
}(QQTemplateViewBase_1.default));
exports.default = QQ_XXPTW_GameWinView_XXPTW_Template;
},{"../../../AppConfig":2,"../../../Config/AppSwitchConfig":5,"../../../Mgr/WudianMgr":33,"../../../QQMiniGameAPI":39,"../../../Utilit":46,"../QQTemplateViewBase":59}],55:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Utilit_1 = require("../../../Utilit");
var QQTemplateViewBase_1 = require("../QQTemplateViewBase");
var QQ_XXPTW_InGame_XXPTW_ViewTemplate = /** @class */ (function (_super) {
    __extends(QQ_XXPTW_InGame_XXPTW_ViewTemplate, _super);
    function QQ_XXPTW_InGame_XXPTW_ViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._center_XXPTW_Zone = null;
        return _this;
    }
    QQ_XXPTW_InGame_XXPTW_ViewTemplate.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._center_XXPTW_Zone = this.View_XXPTW_.getChildByName("CenterZone");
        var aspectRatio = Laya.stage.width / Laya.stage.height;
        if (aspectRatio < 0.5) {
            if (Utilit_1.default.is_XXPTW_IphoneX()) {
                this._center_XXPTW_Zone.top = this._center_XXPTW_Zone.top + 75;
            }
        }
        else {
            this._center_XXPTW_Zone.top = this._center_XXPTW_Zone.top - 200;
            if (Utilit_1.default.is_XXPTW_IphoneX()) {
                this._center_XXPTW_Zone.top = this._center_XXPTW_Zone.top + 75;
            }
        }
    };
    QQ_XXPTW_InGame_XXPTW_ViewTemplate.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
    };
    QQ_XXPTW_InGame_XXPTW_ViewTemplate.prototype.add_XXPTW_Event = function () {
        _super.prototype.add_XXPTW_Event.call(this);
    };
    QQ_XXPTW_InGame_XXPTW_ViewTemplate.prototype.remove_XXPTW_Event = function () {
        _super.prototype.remove_XXPTW_Event.call(this);
    };
    return QQ_XXPTW_InGame_XXPTW_ViewTemplate;
}(QQTemplateViewBase_1.default));
exports.default = QQ_XXPTW_InGame_XXPTW_ViewTemplate;
},{"../../../Utilit":46,"../QQTemplateViewBase":59}],56:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventMgr_1 = require("../../../Event/EventMgr");
var EventDef_1 = require("../../../Event/EventDef");
var User_1 = require("../../../User/User");
var Utilit_1 = require("../../../Utilit");
var QQTemplateViewBase_1 = require("../QQTemplateViewBase");
var QQMiniGameAPI_1 = require("../../../QQMiniGameAPI");
var QQ_XXPTW_Main_XXPTW_View_XXPTW_Template = /** @class */ (function (_super) {
    __extends(QQ_XXPTW_Main_XXPTW_View_XXPTW_Template, _super);
    function QQ_XXPTW_Main_XXPTW_View_XXPTW_Template() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._center_XXPTW_Zone = null;
        _this._start_XXPTW_Btn = null;
        _this._level_XXPTW_Num = null;
        _this._money_XXPTW_Num = null;
        _this._more_XXPTW_Game_XXPTW_Btn = null;
        return _this;
    }
    QQ_XXPTW_Main_XXPTW_View_XXPTW_Template.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._center_XXPTW_Zone = this.View_XXPTW_.getChildByName("CenterZone");
        this._more_XXPTW_Game_XXPTW_Btn = this._center_XXPTW_Zone.getChildByName("MoreGameBtn");
        var aspectRatio = Laya.stage.width / Laya.stage.height;
        if (aspectRatio < 0.5) {
            if (Utilit_1.default.is_XXPTW_IphoneX()) {
                this._center_XXPTW_Zone.top = this._center_XXPTW_Zone.top + 75;
            }
        }
        else {
            //this._center_XXPTW_Zone.top =  this._center_XXPTW_Zone.top - 200;
            if (Utilit_1.default.is_XXPTW_IphoneX()) {
                this._center_XXPTW_Zone.top = this._center_XXPTW_Zone.top + 75;
            }
        }
        this._start_XXPTW_Btn = this._center_XXPTW_Zone.getChildByName("StartBtn");
        this._level_XXPTW_Num = this._center_XXPTW_Zone.getChildByName("LevelInfo").getChildByName("LevelNum");
        this._money_XXPTW_Num = this._center_XXPTW_Zone.getChildByName("MoneyInfo").getChildByName("MoneyNum");
    };
    QQ_XXPTW_Main_XXPTW_View_XXPTW_Template.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
        this._money_XXPTW_Num.value = String(User_1.default.get_XXPTW_Money());
        this._level_XXPTW_Num.value = String(User_1.default.get_XXPTW_LeveNum());
    };
    QQ_XXPTW_Main_XXPTW_View_XXPTW_Template.prototype.add_XXPTW_Event = function () {
        _super.prototype.add_XXPTW_Event.call(this);
        this._start_XXPTW_Btn.on(Laya.Event.CLICK, this, this.on_XXPTW_Start_XXPTW_Btn);
        this._more_XXPTW_Game_XXPTW_Btn.on(Laya.Event.CLICK, this, this.onMore_XXPTW_Game_XXPTW_Btn);
        EventMgr_1.default.ins_XXPTW_tance.reg_XXPTW_Evemt(EventDef_1.Event_XXPTW_Def.Game_On_XXPTW_User_XXPTW_Money_XXPTW_Change, this, this.on_XXPTW_User_XXPTW_MoneyChange);
    };
    QQ_XXPTW_Main_XXPTW_View_XXPTW_Template.prototype.remove_XXPTW_Event = function () {
        _super.prototype.remove_XXPTW_Event.call(this);
        this._start_XXPTW_Btn.off(Laya.Event.CLICK, this, this.on_XXPTW_Start_XXPTW_Btn);
        this._more_XXPTW_Game_XXPTW_Btn.off(Laya.Event.CLICK, this, this.onMore_XXPTW_Game_XXPTW_Btn);
        EventMgr_1.default.ins_XXPTW_tance.remove_XXPTW_Event(EventDef_1.Event_XXPTW_Def.Game_On_XXPTW_User_XXPTW_Money_XXPTW_Change, this, this.on_XXPTW_User_XXPTW_MoneyChange);
    };
    QQ_XXPTW_Main_XXPTW_View_XXPTW_Template.prototype.on_XXPTW_Start_XXPTW_Btn = function () {
    };
    QQ_XXPTW_Main_XXPTW_View_XXPTW_Template.prototype.onMore_XXPTW_Game_XXPTW_Btn = function () {
        QQMiniGameAPI_1.default.show_XXPTW_App_XXPTW_BoxAd(function () {
        });
    };
    QQ_XXPTW_Main_XXPTW_View_XXPTW_Template.prototype.on_XXPTW_User_XXPTW_MoneyChange = function (para) {
        var curr = para.curr;
        var last = para.last;
        this._money_XXPTW_Num.value = String(curr);
    };
    return QQ_XXPTW_Main_XXPTW_View_XXPTW_Template;
}(QQTemplateViewBase_1.default));
exports.default = QQ_XXPTW_Main_XXPTW_View_XXPTW_Template;
},{"../../../Event/EventDef":6,"../../../Event/EventMgr":7,"../../../QQMiniGameAPI":39,"../../../User/User":45,"../../../Utilit":46,"../QQTemplateViewBase":59}],57:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../../../View/ViewBase");
var EventDef_1 = require("../../../Event/EventDef");
var EventMgr_1 = require("../../../Event/EventMgr");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var CachedQQBannerAd_1 = require("../../../CachedQQBannerAd");
var AppConfig_1 = require("../../../AppConfig");
var QQ_XXPTW_Crazy_XXPTW_Click = /** @class */ (function (_super) {
    __extends(QQ_XXPTW_Crazy_XXPTW_Click, _super);
    function QQ_XXPTW_Crazy_XXPTW_Click() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._click_XXPTW_Bar = null;
        _this._total_XXPTW_Click_XXPTW_Timer = 15; //用户一直没中套路，那么点击了这么多次都还是让他继续玩下去，不要卡死程序
        _this._need_XXPTW_Click_XXPTW_Time = 10; //一共点多少次能够获得奖励，用于显示进度条
        _this._banner_XXPTW_ClickTime = 10; //点多少次开始显示bannerr套路用户，可微调   
        return _this;
    }
    QQ_XXPTW_Crazy_XXPTW_Click.prototype.onAwake = function () {
        var _this = this;
        this._click_XXPTW__Btn = this.owner.getChildByName("Click_Btn");
        this._click_XXPTW__Btn.on(Laya.Event.CLICK, this, this.ButtonClicked);
        this._arrow_XXPTW__Img = this._click_XXPTW__Btn.getChildByName("Arrow_Img");
        this._getPrize_XXPTW__View = this.owner.getChildByName("GetPrize_View");
        this._prizeCount_XXPTW__Text = this._getPrize_XXPTW__View.getChildByName("PrizeCount_Text");
        this._confirm__XXPTW_Btn = this._getPrize_XXPTW__View.getChildByName("Confirm_Btn");
        this._getPrize_XXPTW__View.visible = false;
        this._click_XXPTW_Bar = this.owner.getChildByName("ClickBar").getChildByName("ClickBar");
        this._click_XXPTW_BarOriginal_XXPTW_Width = this._click_XXPTW_Bar.width;
        this._click_XXPTW_Bar.width = 0;
        this._click_XXPTW_Time = 0;
        this._total_XXPTW_Click_XXPTW_Time = 0;
        var self = this;
        Laya.loader.load("ClickGetPrize/quanji.png", Laya.Handler.create(this, function (texture) {
            texture.bitmap.lock = true;
            Laya.loader.load("ClickGetPrize/quanji.sk", Laya.Handler.create(_this, function (bytes) {
                console.log("texture", texture);
                console.log("bytes", bytes);
                var template = new Laya.Templet();
                template.parseData(texture, bytes);
                self.drgon_XXPTW_ = template.buildArmature();
                self.owner.addChild(self.drgon_XXPTW_);
                self.drgon_XXPTW_.x = 375;
                self.drgon_XXPTW_.y = 610;
                self.drgon_XXPTW_.scaleX = 2;
                self.drgon_XXPTW_.scaleY = 2;
                self.drgon_XXPTW_.parent.setChildIndex(self.drgon_XXPTW_, 1);
                self.drgon_XXPTW_.play(0, true);
                console.log("quanji 加载完成!!!!", template);
            }), Laya.Handler.create(_this, function () { }), "", 0, false, "", true);
        }), Laya.Handler.create(this, function () { }), "", 0, false, "", true);
    };
    QQ_XXPTW_Crazy_XXPTW_Click.prototype.add_XXPTW_Event = function () {
        _super.prototype.add_XXPTW_Event.call(this);
        Laya.stage.on(Laya.Event.FOCUS_CHANGE, this, this.onFocusChange);
    };
    QQ_XXPTW_Crazy_XXPTW_Click.prototype.remove_XXPTW_Event = function () {
        _super.prototype.remove_XXPTW_Event.call(this);
        Laya.stage.off(Laya.Event.FOCUS_CHANGE, this, this.onFocusChange);
    };
    QQ_XXPTW_Crazy_XXPTW_Click.prototype.onUpdate = function () {
        if (this._arrow_XXPTW_Up) {
            this._arrow_XXPTW__Img.top += Laya.timer.delta / 5;
            if (this._arrow_XXPTW__Img.top > -140) {
                this._arrow_XXPTW_Up = false;
            }
        }
        else {
            this._arrow_XXPTW__Img.top -= Laya.timer.delta / 5;
            if (this._arrow_XXPTW__Img.top < -180) {
                this._arrow_XXPTW_Up = true;
            }
        }
        if (!this._banner_XXPTW_Clicked) {
            var spd = 2 + (this._click_XXPTW_Bar.width / this._click_XXPTW_BarOriginal_XXPTW_Width) * 6;
            if (this._click_XXPTW_Bar.width >= spd) {
                this._click_XXPTW_Bar.width -= spd;
            }
            if ((this._click_XXPTW_Bar.width / this._click_XXPTW_BarOriginal_XXPTW_Width) + 0.1 < (this._click_XXPTW_Time / this._need_XXPTW_Click_XXPTW_Time)) {
                this._click_XXPTW_Time--;
            }
        }
    };
    QQ_XXPTW_Crazy_XXPTW_Click.prototype.open_XXPTW_View = function (data) {
        this._compelet_XXPTW_Function = data.Complete;
        this._prize_XXPTW_Count = data.PrizeCount;
        _super.prototype.open_XXPTW_View.call(this, data);
    };
    QQ_XXPTW_Crazy_XXPTW_Click.prototype.Open_XXPTW_PrizeWindow = function () {
        var self = this;
        this._prizeCount_XXPTW__Text.text = this._prize_XXPTW_Count.toString();
        this._getPrize_XXPTW__View.visible = true;
        this._confirm__XXPTW_Btn.once(Laya.Event.CLICK, this, function () {
            CachedQQBannerAd_1.default.hide();
            if (self._compelet_XXPTW_Function) {
                self._compelet_XXPTW_Function();
            }
            self.close_XXPTW_View();
        });
    };
    QQ_XXPTW_Crazy_XXPTW_Click.prototype.Show_XXPTW_Banner = function () {
        if (AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().qq_XXPTW_cfg.kuang_XXPTW_dian_XXPTW_Banner == 1
            && AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().qq_XXPTW_cfg.qq_XXPTW_versions) {
            CachedQQBannerAd_1.default._XXPTW_show_XXPTW_();
        }
    };
    QQ_XXPTW_Crazy_XXPTW_Click.prototype.ButtonClicked = function () {
        var _this = this;
        this._click_XXPTW_Time++;
        this._total_XXPTW_Click_XXPTW_Time++;
        if (null != this.drgon_XXPTW_) {
            this.drgon_XXPTW_.play(1, false);
            this.drgon_XXPTW_.once(Laya.Event.STOPPED, this, function () {
                _this.drgon_XXPTW_.play(0, true);
            });
        }
        if (this._click_XXPTW_Time > this._need_XXPTW_Click_XXPTW_Time) {
            this._click_XXPTW_Time = this._need_XXPTW_Click_XXPTW_Time;
        }
        if (this._click_XXPTW_Time >= this._banner_XXPTW_ClickTime) {
            if (this._click_XXPTW_Time >= this._need_XXPTW_Click_XXPTW_Time) {
                this._click_XXPTW_Time = this._need_XXPTW_Click_XXPTW_Time - 1;
            }
            if (this._banner_XXPTW_Clicked) {
                return;
            }
            this._banner_XXPTW_Clicked = true;
            this.Show_XXPTW_Banner();
            Laya.timer.once(2000, this, function () {
                this.BannerClicked();
            });
        }
        else if (this._total_XXPTW_Click_XXPTW_Time > this._total_XXPTW_Click_XXPTW_Timer) {
            this.Show_XXPTW_Banner();
            this.Banner_XXPTW_Clicked();
        }
        var progress = (this._click_XXPTW_Time / this._need_XXPTW_Click_XXPTW_Time) * this._click_XXPTW_BarOriginal_XXPTW_Width;
        this._click_XXPTW_Bar.width = progress;
    };
    QQ_XXPTW_Crazy_XXPTW_Click.prototype.Banner_XXPTW_Clicked = function () {
        EventMgr_1.default.ins_XXPTW_tance.dis_XXPTW_patch(EventDef_1.Event_XXPTW_Def.AD_Wu_XXPTW_dian_XXPTW_Banner__XXPTW_Hide);
        this._banner_XXPTW_Clicked = true;
        this._click_XXPTW_Time = this._need_XXPTW_Click_XXPTW_Time;
        this._click_XXPTW_Bar.width = this._click_XXPTW_BarOriginal_XXPTW_Width;
        this._click_XXPTW__Btn.visible = false;
        this.Open_XXPTW_PrizeWindow();
    };
    QQ_XXPTW_Crazy_XXPTW_Click.prototype.onDestroy = function () {
        if (AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().qq_XXPTW_cfg.kuang_XXPTW_dian_XXPTW_Banner == 1
            && AppConfig_1.default.Versions_XXPTW_ == AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().qq_XXPTW_cfg.qq_XXPTW_versions) {
            CachedQQBannerAd_1.default.hide();
        }
    };
    QQ_XXPTW_Crazy_XXPTW_Click.prototype.onFocusChange = function () {
        if (null != this.drgon_XXPTW_) {
            this.drgon_XXPTW_.play(0, true);
        }
    };
    return QQ_XXPTW_Crazy_XXPTW_Click;
}(ViewBase_1.default));
exports.default = QQ_XXPTW_Crazy_XXPTW_Click;
},{"../../../AppConfig":2,"../../../CachedQQBannerAd":3,"../../../Config/AppSwitchConfig":5,"../../../Event/EventDef":6,"../../../Event/EventMgr":7,"../../../View/ViewBase":77}],58:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../../../View/ViewBase");
var EventDef_1 = require("../../../Event/EventDef");
var EventMgr_1 = require("../../../Event/EventMgr");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var QQMiniGameAPI_1 = require("../../../QQMiniGameAPI");
var AppConfig_1 = require("../../../AppConfig");
var QQCrazyClick2 = /** @class */ (function (_super) {
    __extends(QQCrazyClick2, _super);
    function QQCrazyClick2() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._click_XXPTW_Bar = null;
        _this._total_XXPTW_ClickTimer = 15; //用户一直没中套路，那么点击了这么多次都还是让他继续玩下去，不要卡死程序
        _this._need_XXPTW_ClickTime = 10; //一共点多少次能够获得奖励，用于显示进度条
        _this._banner_XXPTW_ClickTime = 10; //点多少次开始显示bannerr套路用户，可微调   
        _this._click_XXPTW_Btn = null;
        return _this;
    }
    QQCrazyClick2.prototype.onAwake = function () {
        this._getPrize_XXPTW__View = this.owner.getChildByName("GetPrize_View");
        this._prize_XXPTW_Count_Text = this._getPrize_XXPTW__View.getChildByName("PrizeCount_Text");
        this._confirm_XXPTW__Btn = this._getPrize_XXPTW__View.getChildByName("Confirm_Btn");
        this._getPrize_XXPTW__View.visible = false;
        this._click_XXPTW_Bar = this.owner.getChildByName("ClickBar").getChildByName("ClickBar");
        this._click_XXPTW_BarOriginalWidth = this._click_XXPTW_Bar.width;
        this._click_XXPTW_Bar.width = 0;
        this._click_XXPTW_Time = 0;
        this._total_XXPTW_ClickTime = 0;
        var self = this;
        Laya.loader.load("ClickGetPrize/quanji.png", Laya.Handler.create(self, function (texture) {
            texture.bitmap.lock = true;
            Laya.loader.load("ClickGetPrize/quanji.sk", Laya.Handler.create(self, function (bytes) {
                var template = new Laya.Templet();
                template.parseData(texture, bytes);
                self.drgon_XXPTW_ = template.buildArmature();
                self.owner.addChild(self.drgon_XXPTW_);
                self.drgon_XXPTW_.x = 375;
                self.drgon_XXPTW_.y = 610;
                self.drgon_XXPTW_.scaleX = 2;
                self.drgon_XXPTW_.scaleY = 2;
                self.drgon_XXPTW_.parent.setChildIndex(self.drgon_XXPTW_, 1);
                self.drgon_XXPTW_.play(0, true);
                console.log("quanji 加载完成!!!!", template);
            }), Laya.Handler.create(self, function () { }), "", 0, false, "", true);
        }), Laya.Handler.create(self, function () { }), "", 0, false, "", true);
        Laya.loader.load("ClickGetPrize/NewProject.png", Laya.Handler.create(self, function (texture) {
            texture.bitmap.lock = true;
            Laya.loader.load("ClickGetPrize/NewProject.sk", Laya.Handler.create(self, function (bytes) {
                var template = new Laya.Templet();
                template.parseData(texture, bytes);
                var finger = template.buildArmature();
                self.owner.addChild(finger);
                finger.x = 360;
                finger.y = 617;
                finger.parent.setChildIndex(finger, 2);
                finger.play(0, true);
                self._click_XXPTW_Btn = new Laya.Clip();
                self.owner.addChild(self._click_XXPTW_Btn);
                self._click_XXPTW_Btn.x = 360 - 100,
                    self._click_XXPTW_Btn.y = 617 - 100,
                    self._click_XXPTW_Btn.width = 200,
                    self._click_XXPTW_Btn.height = 200,
                    self._click_XXPTW_Btn.parent.setChildIndex(self._click_XXPTW_Btn, 3);
                self._click_XXPTW_Btn.on(Laya.Event.CLICK, self, self.ButtonClicked);
                console.log("手指动画 加载完成!!!!", template);
            }), Laya.Handler.create(self, function () { }), "", 0, false, "", true);
        }), Laya.Handler.create(self, function () { }), "", 0, false, "", true);
    };
    QQCrazyClick2.prototype.add_XXPTW_Event = function () {
        _super.prototype.add_XXPTW_Event.call(this);
        Laya.stage.on(Laya.Event.FOCUS_CHANGE, this, this.onFocusChange);
    };
    QQCrazyClick2.prototype.remove_XXPTW_Event = function () {
        _super.prototype.remove_XXPTW_Event.call(this);
        Laya.stage.off(Laya.Event.FOCUS_CHANGE, this, this.onFocusChange);
    };
    QQCrazyClick2.prototype.onUpdate = function () {
        if (!this._banner_XXPTW_Clicked) {
            var spd = 2 + (this._click_XXPTW_Bar.width / this._click_XXPTW_BarOriginalWidth) * 6;
            if (this._click_XXPTW_Bar.width >= spd) {
                this._click_XXPTW_Bar.width -= spd;
            }
            if ((this._click_XXPTW_Bar.width / this._click_XXPTW_BarOriginalWidth) + 0.1 < (this._click_XXPTW_Time / this._need_XXPTW_ClickTime)) {
                this._click_XXPTW_Time--;
            }
        }
    };
    QQCrazyClick2.prototype.open_XXPTW_View = function (data) {
        this._compelet_XXPTW_Function = data.Complete;
        this._prize_XXPTW_Count = data.PrizeCount;
        _super.prototype.open_XXPTW_View.call(this, data);
    };
    QQCrazyClick2.prototype.Open_XXPTW_Prize_XXPTW_Window = function () {
        var self = this;
        this._prize_XXPTW_Count_Text.text = this._prize_XXPTW_Count.toString();
        this._getPrize_XXPTW__View.visible = true;
        this._confirm_XXPTW__Btn.once(Laya.Event.CLICK, this, function () {
            if (self._compelet_XXPTW_Function) {
                self._compelet_XXPTW_Function();
            }
            self.close_XXPTW_View();
        });
    };
    QQCrazyClick2.prototype.Show_XXPTW_Banner = function () {
        if (AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().qq_XXPTW_cfg.kuangdian_XXPTW_Box == 1
            && AppConfig_1.default.Versions_XXPTW_ == AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().qq_XXPTW_cfg.qq_XXPTW_versions) {
            QQMiniGameAPI_1.default.show_XXPTW_App_XXPTW_BoxAd(function () {
            });
        }
    };
    QQCrazyClick2.prototype.ButtonClicked = function () {
        var _this = this;
        this._click_XXPTW_Time++;
        this._total_XXPTW_ClickTime++;
        if (null != this.drgon_XXPTW_) {
            this.drgon_XXPTW_.play(1, false);
            this.drgon_XXPTW_.once(Laya.Event.STOPPED, this, function () {
                _this.drgon_XXPTW_.play(0, true);
            });
        }
        if (this._click_XXPTW_Time > this._need_XXPTW_ClickTime) {
            this._click_XXPTW_Time = this._need_XXPTW_ClickTime;
        }
        if (this._click_XXPTW_Time >= this._banner_XXPTW_ClickTime) {
            if (this._click_XXPTW_Time >= this._need_XXPTW_ClickTime) {
                this._click_XXPTW_Time = this._need_XXPTW_ClickTime - 1;
            }
            if (this._banner_XXPTW_Clicked) {
                return;
            }
            this._banner_XXPTW_Clicked = true;
            this.Show_XXPTW_Banner();
            Laya.timer.once(2000, this, function () {
                this.BannerClicked();
            });
        }
        else if (this._total_XXPTW_ClickTime > this._total_XXPTW_ClickTimer) {
            this.Show_XXPTW_Banner();
            this.Banner_XXPTW_Clicked();
        }
        var progress = (this._click_XXPTW_Time / this._need_XXPTW_ClickTime) * this._click_XXPTW_BarOriginalWidth;
        this._click_XXPTW_Bar.width = progress;
    };
    QQCrazyClick2.prototype.Banner_XXPTW_Clicked = function () {
        EventMgr_1.default.ins_XXPTW_tance.dis_XXPTW_patch(EventDef_1.Event_XXPTW_Def.AD_Wu_XXPTW_dian_XXPTW_Banner__XXPTW_Hide);
        this._banner_XXPTW_Clicked = true;
        this._click_XXPTW_Time = this._need_XXPTW_ClickTime;
        this._click_XXPTW_Bar.width = this._click_XXPTW_BarOriginalWidth;
        this._click_XXPTW_Btn.visible = false;
        this.Open_XXPTW_Prize_XXPTW_Window();
    };
    QQCrazyClick2.prototype.onDestroy = function () {
    };
    QQCrazyClick2.prototype.onFocusChange = function () {
        if (null != this.drgon_XXPTW_) {
            this.drgon_XXPTW_.play(0, true);
        }
    };
    return QQCrazyClick2;
}(ViewBase_1.default));
exports.default = QQCrazyClick2;
},{"../../../AppConfig":2,"../../../Config/AppSwitchConfig":5,"../../../Event/EventDef":6,"../../../Event/EventMgr":7,"../../../QQMiniGameAPI":39,"../../../View/ViewBase":77}],59:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var QQ_XXPTW_Template_XXPTW_ViewBase = /** @class */ (function (_super) {
    __extends(QQ_XXPTW_Template_XXPTW_ViewBase, _super);
    function QQ_XXPTW_Template_XXPTW_ViewBase() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    QQ_XXPTW_Template_XXPTW_ViewBase.prototype.onAwake = function () {
    };
    QQ_XXPTW_Template_XXPTW_ViewBase.prototype.add_XXPTW_Event = function () {
        _super.prototype.add_XXPTW_Event.call(this);
    };
    QQ_XXPTW_Template_XXPTW_ViewBase.prototype.remove_XXPTW_Event = function () {
        _super.prototype.remove_XXPTW_Event.call(this);
    };
    return QQ_XXPTW_Template_XXPTW_ViewBase;
}(ViewBase_1.default));
exports.default = QQ_XXPTW_Template_XXPTW_ViewBase;
},{"../ViewBase":77}],60:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var WudianMgr_1 = require("../../../Mgr/WudianMgr");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var Utilit_1 = require("../../../Utilit");
var TTTemplateViewBase_1 = require("../TTTemplateViewBase");
var TTAPI_1 = require("../../../TTAPI");
var TTGameFailViewTemplate = /** @class */ (function (_super) {
    __extends(TTGameFailViewTemplate, _super);
    function TTGameFailViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._centerZone = null;
        _this._clickTag = false;
        _this._clickTimingTag = false;
        _this._moreGameBtn = null;
        _this._shareBtn = null;
        _this._backBtn = null;
        _this._okBtn = null;
        _this._videoBtn = null;
        return _this;
    }
    TTGameFailViewTemplate.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._centerZone = this.View_XXPTW_.getChildByName("CenterZone");
        if (Utilit_1.default.is_XXPTW_IphoneX()) {
            this._centerZone.top = this._centerZone.top + 75;
        }
        this._moreGameBtn = this._centerZone.getChildByName("MoreGameBtn");
        this._shareBtn = this._centerZone.getChildByName("ShareBtn");
        this._backBtn = this._centerZone.getChildByName("BackBtn");
        this._okBtn = this._centerZone.getChildByName("OkBtn");
        this._videoBtn = this._centerZone.getChildByName("VideoBtn");
        this._moreGameBtn.visible = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().tt_XXPTW_cfg.more_XXPTW_Game_XXPTW_Switch == 1;
    };
    TTGameFailViewTemplate.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
        if (WudianMgr_1.default.Wu_XXPTW_dian_XXPTW_Flag) {
            var yPos = this._centerZone.height - 150;
            this._backBtn.y = yPos;
            this._okBtn.y = yPos;
            this._videoBtn.y = yPos;
        }
        var btnMoveTimer = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().btn_XXPTW_Move_XXPTW_Timer;
        var bannerMoveTimer = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().banner_XXPTW_Move_XXPTW_Timer;
        Laya.timer.once(bannerMoveTimer * 1000, this, this.Banner_XXPTW_Up);
        Laya.timer.once(btnMoveTimer * 1000, this, this.Btn_XXPTW_Up);
        if (AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().tt_XXPTW_cfg.lu_XXPTW_ping == 1) {
            TTAPI_1.default.share_XXPTW_Record(function () {
            }, function () {
            });
        }
    };
    TTGameFailViewTemplate.prototype.add_XXPTW_Event = function () {
        _super.prototype.add_XXPTW_Event.call(this);
        this._backBtn.on(Laya.Event.CLICK, this, this.on_XXPTW_Back_XXPTW_Btn);
        this._okBtn.on(Laya.Event.CLICK, this, this.on_XXPTW_Ok_XXPTW_Btn);
        this._videoBtn.on(Laya.Event.CLICK, this, this.on_XXPTW_Ok_XXPTW_Btn);
        this._moreGameBtn.on(Laya.Event.CLICK, this, this.on_XXPTW_More_XXPTW_GameBtn);
        this._shareBtn.on(Laya.Event.CLICK, this, this.on_XXPTW_Share_XXPTW_Btn);
    };
    TTGameFailViewTemplate.prototype.remove_XXPTW_Event = function () {
        _super.prototype.remove_XXPTW_Event.call(this);
        this._backBtn.off(Laya.Event.CLICK, this, this.on_XXPTW_Back_XXPTW_Btn);
        this._okBtn.off(Laya.Event.CLICK, this, this.on_XXPTW_Ok_XXPTW_Btn);
        this._videoBtn.off(Laya.Event.CLICK, this, this.on_XXPTW_Ok_XXPTW_Btn);
        this._moreGameBtn.off(Laya.Event.CLICK, this, this.on_XXPTW_More_XXPTW_GameBtn);
        this._shareBtn.off(Laya.Event.CLICK, this, this.on_XXPTW_Share_XXPTW_Btn);
    };
    TTGameFailViewTemplate.prototype.on_XXPTW_Back_XXPTW_Btn = function () {
        if (!this._clickTag && WudianMgr_1.default.Wu_XXPTW_dian_XXPTW_Flag) {
            var self = this;
            if (!this._clickTimingTag) {
                this._clickTimingTag = true;
                var btnMoveTimer = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().btn_XXPTW_Move_XXPTW_Timer;
                var bannerMoveTimer = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().banner_XXPTW_Move_XXPTW_Timer;
                Laya.timer.once(bannerMoveTimer * 1000, this, this.Banner_XXPTW_Up);
                Laya.timer.once(btnMoveTimer * 1000, this, this.Btn_XXPTW_Up);
            }
            return;
        }
        //todo:你的代码
    };
    TTGameFailViewTemplate.prototype.on_XXPTW_Ok_XXPTW_Btn = function () {
        if (!this._clickTag && WudianMgr_1.default.Wu_XXPTW_dian_XXPTW_Flag) {
            var self = this;
            if (!this._clickTimingTag) {
                this._clickTimingTag = true;
                var btnMoveTimer = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().btn_XXPTW_Move_XXPTW_Timer;
                var bannerMoveTimer = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().banner_XXPTW_Move_XXPTW_Timer;
                Laya.timer.once(bannerMoveTimer * 1000, this, this.Banner_XXPTW_Up);
                Laya.timer.once(btnMoveTimer * 1000, this, this.Btn_XXPTW_Up);
            }
            return;
        }
        //todo:你的代码
    };
    TTGameFailViewTemplate.prototype.on_XXPTW_Video_XXPTW_Btn = function () {
        if (!this._clickTag && WudianMgr_1.default.Wu_XXPTW_dian_XXPTW_Flag) {
            var self = this;
            if (!this._clickTimingTag) {
                this._clickTimingTag = true;
                var btnMoveTimer = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().btn_XXPTW_Move_XXPTW_Timer;
                var bannerMoveTimer = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().banner_XXPTW_Move_XXPTW_Timer;
                Laya.timer.once(bannerMoveTimer * 1000, this, this.Banner_XXPTW_Up);
                Laya.timer.once(btnMoveTimer * 1000, this, this.Btn_XXPTW_Up);
            }
            return;
        }
        TTAPI_1.default.share_XXPTW_Record(function () {
        }, function () {
        });
    };
    TTGameFailViewTemplate.prototype.Banner_XXPTW_Up = function () {
        TTAPI_1.default.show_XXPTW_Banner();
    };
    TTGameFailViewTemplate.prototype.Btn_XXPTW_Up = function () {
        this._clickTag = true;
        this._backBtn.y = 720;
        this._okBtn.y = 720;
        this._videoBtn.y = 720;
    };
    TTGameFailViewTemplate.prototype.on_XXPTW_More_XXPTW_GameBtn = function () {
        TTAPI_1.default.showMoreGamesModal(function () {
        }, function () {
        });
    };
    TTGameFailViewTemplate.prototype.on_XXPTW_Share_XXPTW_Btn = function () {
        TTAPI_1.default.share_XXPTW_(function () {
        });
    };
    TTGameFailViewTemplate.prototype.onDestroy = function () {
        TTAPI_1.default.hideBanner();
    };
    return TTGameFailViewTemplate;
}(TTTemplateViewBase_1.default));
exports.default = TTGameFailViewTemplate;
},{"../../../Config/AppSwitchConfig":5,"../../../Mgr/WudianMgr":33,"../../../TTAPI":44,"../../../Utilit":46,"../TTTemplateViewBase":64}],61:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TTGameFailViewTemplate_1 = require("../GameFail/TTGameFailViewTemplate");
var TTGame_XXPTW_Win_XXPTW_ViewTemplate = /** @class */ (function (_super) {
    __extends(TTGame_XXPTW_Win_XXPTW_ViewTemplate, _super);
    function TTGame_XXPTW_Win_XXPTW_ViewTemplate() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return TTGame_XXPTW_Win_XXPTW_ViewTemplate;
}(TTGameFailViewTemplate_1.default));
exports.default = TTGame_XXPTW_Win_XXPTW_ViewTemplate;
},{"../GameFail/TTGameFailViewTemplate":60}],62:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventMgr_1 = require("../../../Event/EventMgr");
var EventDef_1 = require("../../../Event/EventDef");
var User_1 = require("../../../User/User");
var Utilit_1 = require("../../../Utilit");
var TTTemplateViewBase_1 = require("../TTTemplateViewBase");
var TTAPI_1 = require("../../../TTAPI");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var TT_XXPTW_Main_XXPTW_ViewTemplate = /** @class */ (function (_super) {
    __extends(TT_XXPTW_Main_XXPTW_ViewTemplate, _super);
    function TT_XXPTW_Main_XXPTW_ViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._center_XXPTW_Zone = null;
        _this._start_XXPTW_Btn = null;
        _this._level_XXPTW_Num = null;
        _this._money_XXPTW_Num = null;
        _this._more_XXPTW_GameBtn = null;
        _this._share_XXPTW_Btn = null;
        return _this;
    }
    TT_XXPTW_Main_XXPTW_ViewTemplate.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._center_XXPTW_Zone = this.View_XXPTW_.getChildByName("CenterZone");
        this._more_XXPTW_GameBtn = this._center_XXPTW_Zone.getChildByName("MoreGameBtn");
        this._share_XXPTW_Btn = this._center_XXPTW_Zone.getChildByName("ShareBtn");
        var aspectRatio = Laya.stage.width / Laya.stage.height;
        if (aspectRatio < 0.5) {
            if (Utilit_1.default.is_XXPTW_IphoneX()) {
                this._center_XXPTW_Zone.top = this._center_XXPTW_Zone.top + 75;
            }
        }
        else {
            this._center_XXPTW_Zone.top = this._center_XXPTW_Zone.top - 200;
            if (Utilit_1.default.is_XXPTW_IphoneX()) {
                this._center_XXPTW_Zone.top = this._center_XXPTW_Zone.top + 75;
            }
        }
        this._start_XXPTW_Btn = this._center_XXPTW_Zone.getChildByName("StartBtn");
        this._level_XXPTW_Num = this._center_XXPTW_Zone.getChildByName("LevelInfo").getChildByName("LevelNum");
        this._money_XXPTW_Num = this._center_XXPTW_Zone.getChildByName("MoneyInfo").getChildByName("MoneyNum");
        this._more_XXPTW_GameBtn.visible = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().tt_XXPTW_cfg.more_XXPTW_Game_XXPTW_Switch == 1;
    };
    TT_XXPTW_Main_XXPTW_ViewTemplate.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
        this._money_XXPTW_Num.value = String(User_1.default.get_XXPTW_Money());
        this._level_XXPTW_Num.value = String(User_1.default.get_XXPTW_LeveNum());
    };
    TT_XXPTW_Main_XXPTW_ViewTemplate.prototype.add_XXPTW_Event = function () {
        _super.prototype.add_XXPTW_Event.call(this);
        this._start_XXPTW_Btn.on(Laya.Event.CLICK, this, this.on_XXPTW_Start_XXPTW_Btn);
        EventMgr_1.default.ins_XXPTW_tance.reg_XXPTW_Evemt(EventDef_1.Event_XXPTW_Def.Game_On_XXPTW_User_XXPTW_Money_XXPTW_Change, this, this.on_XXPTW_User_XXPTW_MoneyChange);
        this._more_XXPTW_GameBtn.on(Laya.Event.CLICK, this, this.on_XXPTW_More_XXPTW_GameBtn);
        this._share_XXPTW_Btn.on(Laya.Event.CLICK, this, this.on_XXPTW_Share_XXPTW_Btn);
    };
    TT_XXPTW_Main_XXPTW_ViewTemplate.prototype.remove_XXPTW_Event = function () {
        _super.prototype.remove_XXPTW_Event.call(this);
        this._start_XXPTW_Btn.off(Laya.Event.CLICK, this, this.on_XXPTW_Start_XXPTW_Btn);
        EventMgr_1.default.ins_XXPTW_tance.remove_XXPTW_Event(EventDef_1.Event_XXPTW_Def.Game_On_XXPTW_User_XXPTW_Money_XXPTW_Change, this, this.on_XXPTW_User_XXPTW_MoneyChange);
        this._more_XXPTW_GameBtn.off(Laya.Event.CLICK, this, this.on_XXPTW_More_XXPTW_GameBtn);
        this._share_XXPTW_Btn.off(Laya.Event.CLICK, this, this.on_XXPTW_Share_XXPTW_Btn);
    };
    TT_XXPTW_Main_XXPTW_ViewTemplate.prototype.on_XXPTW_Start_XXPTW_Btn = function () {
    };
    TT_XXPTW_Main_XXPTW_ViewTemplate.prototype.on_XXPTW_More_XXPTW_GameBtn = function () {
        TTAPI_1.default.showMoreGamesModal(function () {
        }, function () {
        });
    };
    TT_XXPTW_Main_XXPTW_ViewTemplate.prototype.on_XXPTW_Share_XXPTW_Btn = function () {
        TTAPI_1.default.share_XXPTW_(function () {
        });
    };
    TT_XXPTW_Main_XXPTW_ViewTemplate.prototype.on_XXPTW_User_XXPTW_MoneyChange = function (para) {
        var curr = para.curr;
        var last = para.last;
        this._money_XXPTW_Num.value = String(curr);
    };
    return TT_XXPTW_Main_XXPTW_ViewTemplate;
}(TTTemplateViewBase_1.default));
exports.default = TT_XXPTW_Main_XXPTW_ViewTemplate;
},{"../../../Config/AppSwitchConfig":5,"../../../Event/EventDef":6,"../../../Event/EventMgr":7,"../../../TTAPI":44,"../../../User/User":45,"../../../Utilit":46,"../TTTemplateViewBase":64}],63:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../../../View/ViewBase");
var EventDef_1 = require("../../../Event/EventDef");
var EventMgr_1 = require("../../../Event/EventMgr");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var TTAPI_1 = require("../../../TTAPI");
var TTCrazyClick = /** @class */ (function (_super) {
    __extends(TTCrazyClick, _super);
    function TTCrazyClick() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._click_XXPTW_Bar = null;
        _this._total_XXPTW_Click_XXPTW_Timer = 15; //用户一直没中套路，那么点击了这么多次都还是让他继续玩下去，不要卡死程序
        _this._need_XXPTW_Click_XXPTW_Time = 10; //一共点多少次能够获得奖励，用于显示进度条
        _this._banner_XXPTW_ClickTime = 10; //点多少次开始显示bannerr套路用户，可微调   
        return _this;
    }
    TTCrazyClick.prototype.onAwake = function () {
        var _this = this;
        this._click_XXPTW__Btn = this.owner.getChildByName("Click_Btn");
        this._click_XXPTW__Btn.on(Laya.Event.CLICK, this, this.ButtonClicked);
        this._arrow_XXPTW__Img = this._click_XXPTW__Btn.getChildByName("Arrow_Img");
        this._getPrize_XXPTW__View = this.owner.getChildByName("GetPrize_View");
        this._prize_XXPTW_Count_Text = this._getPrize_XXPTW__View.getChildByName("PrizeCount_Text");
        this._confirm_XXPTW__Btn = this._getPrize_XXPTW__View.getChildByName("Confirm_Btn");
        this._getPrize_XXPTW__View.visible = false;
        this._click_XXPTW_Bar = this.owner.getChildByName("ClickBar").getChildByName("ClickBar");
        this._click_XXPTW_BarOriginal_XXPTW_Width = this._click_XXPTW_Bar.width;
        this._click_XXPTW_Bar.width = 0;
        this._click_XXPTW_Time = 0;
        this._total_XXPTW_Click_XXPTW_Time = 0;
        var self = this;
        Laya.loader.load("ClickGetPrize/quanji.png", Laya.Handler.create(this, function (texture) {
            texture.bitmap.lock = true;
            Laya.loader.load("ClickGetPrize/quanji.sk", Laya.Handler.create(_this, function (bytes) {
                console.log("texture", texture);
                console.log("bytes", bytes);
                var template = new Laya.Templet();
                template.parseData(texture, bytes);
                self.drgon_XXPTW_ = template.buildArmature();
                self.owner.addChild(self.drgon_XXPTW_);
                self.drgon_XXPTW_.x = 375;
                self.drgon_XXPTW_.y = 610;
                self.drgon_XXPTW_.scaleX = 2;
                self.drgon_XXPTW_.scaleY = 2;
                self.drgon_XXPTW_.parent.setChildIndex(self.drgon_XXPTW_, 1);
                self.drgon_XXPTW_.play(0, true);
                console.log("quanji 加载完成!!!!", template);
            }), Laya.Handler.create(_this, function () { }), "", 0, false, "", true);
        }), Laya.Handler.create(this, function () { }), "", 0, false, "", true);
    };
    TTCrazyClick.prototype.add_XXPTW_Event = function () {
        _super.prototype.add_XXPTW_Event.call(this);
        Laya.stage.on(Laya.Event.FOCUS_CHANGE, this, this.onFocusChange);
    };
    TTCrazyClick.prototype.remove_XXPTW_Event = function () {
        _super.prototype.remove_XXPTW_Event.call(this);
        Laya.stage.off(Laya.Event.FOCUS_CHANGE, this, this.onFocusChange);
    };
    TTCrazyClick.prototype.onUpdate = function () {
        if (this._arrow_XXPTW_Up) {
            this._arrow_XXPTW__Img.top += Laya.timer.delta / 5;
            if (this._arrow_XXPTW__Img.top > -140) {
                this._arrow_XXPTW_Up = false;
            }
        }
        else {
            this._arrow_XXPTW__Img.top -= Laya.timer.delta / 5;
            if (this._arrow_XXPTW__Img.top < -180) {
                this._arrow_XXPTW_Up = true;
            }
        }
        if (!this._banner_XXPTW_Clicked) {
            var spd = 2 + (this._click_XXPTW_Bar.width / this._click_XXPTW_BarOriginal_XXPTW_Width) * 6;
            if (this._click_XXPTW_Bar.width >= spd) {
                this._click_XXPTW_Bar.width -= spd;
            }
            if ((this._click_XXPTW_Bar.width / this._click_XXPTW_BarOriginal_XXPTW_Width) + 0.1 < (this._click_XXPTW_Time / this._need_XXPTW_Click_XXPTW_Time)) {
                this._click_XXPTW_Time--;
            }
        }
    };
    TTCrazyClick.prototype.open_XXPTW_View = function (data) {
        this._compelet_XXPTW_Function = data.Complete;
        this._prize_XXPTW_Count = data.PrizeCount;
        _super.prototype.open_XXPTW_View.call(this, data);
    };
    TTCrazyClick.prototype.Open_XXPTW_Prize_XXPTW_Window = function () {
        var self = this;
        this._prize_XXPTW_Count_Text.text = this._prize_XXPTW_Count.toString();
        this._getPrize_XXPTW__View.visible = true;
        this._confirm_XXPTW__Btn.once(Laya.Event.CLICK, this, function () {
            TTAPI_1.default.hideBanner();
            if (self._compelet_XXPTW_Function) {
                self._compelet_XXPTW_Function();
            }
            self.close_XXPTW_View();
        });
    };
    TTCrazyClick.prototype.Show_XXPTW_Banner = function () {
        if (AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().tt_XXPTW_cfg.kuang_XXPTW_dian_XXPTW_Banner == 1) {
            TTAPI_1.default.show_XXPTW_Banner();
        }
    };
    TTCrazyClick.prototype.ButtonClicked = function () {
        var _this = this;
        this._click_XXPTW_Time++;
        this._total_XXPTW_Click_XXPTW_Time++;
        if (null != this.drgon_XXPTW_) {
            this.drgon_XXPTW_.play(1, false);
            this.drgon_XXPTW_.once(Laya.Event.STOPPED, this, function () {
                _this.drgon_XXPTW_.play(0, true);
            });
        }
        if (this._click_XXPTW_Time > this._need_XXPTW_Click_XXPTW_Time) {
            this._click_XXPTW_Time = this._need_XXPTW_Click_XXPTW_Time;
        }
        if (this._click_XXPTW_Time >= this._banner_XXPTW_ClickTime) {
            if (this._click_XXPTW_Time >= this._need_XXPTW_Click_XXPTW_Time) {
                this._click_XXPTW_Time = this._need_XXPTW_Click_XXPTW_Time - 1;
            }
            if (this._banner_XXPTW_Clicked) {
                return;
            }
            this._banner_XXPTW_Clicked = true;
            this.Show_XXPTW_Banner();
            Laya.timer.once(2000, this, function () {
                this.BannerClicked();
            });
        }
        else if (this._total_XXPTW_Click_XXPTW_Time > this._total_XXPTW_Click_XXPTW_Timer) {
            this.Show_XXPTW_Banner();
            this.Banner_XXPTW_Clicked();
        }
        var progress = (this._click_XXPTW_Time / this._need_XXPTW_Click_XXPTW_Time) * this._click_XXPTW_BarOriginal_XXPTW_Width;
        this._click_XXPTW_Bar.width = progress;
    };
    TTCrazyClick.prototype.Banner_XXPTW_Clicked = function () {
        EventMgr_1.default.ins_XXPTW_tance.dis_XXPTW_patch(EventDef_1.Event_XXPTW_Def.AD_Wu_XXPTW_dian_XXPTW_Banner__XXPTW_Hide);
        this._banner_XXPTW_Clicked = true;
        this._click_XXPTW_Time = this._need_XXPTW_Click_XXPTW_Time;
        this._click_XXPTW_Bar.width = this._click_XXPTW_BarOriginal_XXPTW_Width;
        this._click_XXPTW__Btn.visible = false;
        this.Open_XXPTW_Prize_XXPTW_Window();
    };
    TTCrazyClick.prototype.onDestroy = function () {
        TTAPI_1.default.hideBanner();
    };
    TTCrazyClick.prototype.onFocusChange = function () {
        if (null != this.drgon_XXPTW_) {
            this.drgon_XXPTW_.play(0, true);
        }
    };
    return TTCrazyClick;
}(ViewBase_1.default));
exports.default = TTCrazyClick;
},{"../../../Config/AppSwitchConfig":5,"../../../Event/EventDef":6,"../../../Event/EventMgr":7,"../../../TTAPI":44,"../../../View/ViewBase":77}],64:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var TT_XXPTW_Template_XXPTW_View_XXPTW_Base = /** @class */ (function (_super) {
    __extends(TT_XXPTW_Template_XXPTW_View_XXPTW_Base, _super);
    function TT_XXPTW_Template_XXPTW_View_XXPTW_Base() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TT_XXPTW_Template_XXPTW_View_XXPTW_Base.prototype.onAwake = function () {
    };
    TT_XXPTW_Template_XXPTW_View_XXPTW_Base.prototype.add_XXPTW_Event = function () {
        _super.prototype.add_XXPTW_Event.call(this);
    };
    TT_XXPTW_Template_XXPTW_View_XXPTW_Base.prototype.remove_XXPTW_Event = function () {
        _super.prototype.remove_XXPTW_Event.call(this);
    };
    return TT_XXPTW_Template_XXPTW_View_XXPTW_Base;
}(ViewBase_1.default));
exports.default = TT_XXPTW_Template_XXPTW_View_XXPTW_Base;
},{"../ViewBase":77}],65:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TemplateViewBase_1 = require("../TemplateViewBase");
var KRQ_VLoopAd_1 = require("../../../KRQ/Com/KRQ_LoopAd/KRQ_VLoopAd");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var Utilit_1 = require("../../../Utilit");
var ShareAd_1 = require("../../../ShareAd/ShareAd");
var Exprot2_XXPTW_View_XXPTW_Template = /** @class */ (function (_super) {
    __extends(Exprot2_XXPTW_View_XXPTW_Template, _super);
    function Exprot2_XXPTW_View_XXPTW_Template() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._continue_XXPTW_Btn = null;
        _this._krq_XXPTW_VLoopAd = null;
        _this._KRQ_V_XXPTW_LoopAd = null;
        return _this;
    }
    Exprot2_XXPTW_View_XXPTW_Template.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._krq_XXPTW_VLoopAd = this.View_XXPTW_.getChildByName("KRQ_VLoopAd").getComponent(KRQ_VLoopAd_1.default);
        this._krq_XXPTW_VLoopAd.use_XXPTW_Local_XXPTW_Random = true;
        this._krq_XXPTW_VLoopAd.useRandom = false;
        this._krq_XXPTW_VLoopAd.useMovePause = false;
        this._krq_XXPTW_VLoopAd.sortDatas = this.sortDatas;
        this._continue_XXPTW_Btn = this.View_XXPTW_.getChildByName("ContinueBtn");
        this._continue_XXPTW_Btn.visible = false;
        var self = this;
        Laya.timer.once(AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().continue_XXPTW_Btn_XXPTW_DelayTime * 1000, this, function () {
            self._continue_XXPTW_Btn.visible = true;
        });
        this._KRQ_V_XXPTW_LoopAd = this.View_XXPTW_.getChildByName("KRQ_VLoopAd");
        if (Utilit_1.default.is_XXPTW_IphoneX()) {
            this._KRQ_V_XXPTW_LoopAd.top = this._KRQ_V_XXPTW_LoopAd.top + 75;
        }
    };
    Exprot2_XXPTW_View_XXPTW_Template.prototype.onStart = function () {
        this._krq_XXPTW_VLoopAd.Ad_XXPTW_Pos_XXPTW_ID = ShareAd_1.default.MoreGame_XXPTW_LocationID;
        _super.prototype.onStart.call(this);
    };
    Exprot2_XXPTW_View_XXPTW_Template.prototype.add_XXPTW_Event = function () {
        _super.prototype.add_XXPTW_Event.call(this);
        this._continue_XXPTW_Btn.on(Laya.Event.CLICK, this, this.on_XXPTW_Continue_XXPTW_Btn);
    };
    Exprot2_XXPTW_View_XXPTW_Template.prototype.remove_XXPTW_Event = function () {
        _super.prototype.remove_XXPTW_Event.call(this);
        this._continue_XXPTW_Btn.off(Laya.Event.CLICK, this, this.on_XXPTW_Continue_XXPTW_Btn);
    };
    Exprot2_XXPTW_View_XXPTW_Template.prototype.on_XXPTW_Continue_XXPTW_Btn = function () {
    };
    Exprot2_XXPTW_View_XXPTW_Template.prototype.sortDatas = function (datas) {
        if (null == datas || 0 == datas.length)
            return [];
        var dataDic = {};
        var keys = new Array();
        for (var i = 0; i < datas.length; ++i) {
            var data = datas[i];
            if (dataDic[data.appid] == null) {
                dataDic[data.appid] = new Array();
                dataDic[data.appid].push(data);
                keys.push(data.appid);
            }
            else {
                dataDic[data.appid].push(data);
            }
        }
        for (var i = 0; i < keys.length; ++i) {
            var key = keys[i];
            var randomIndex = Math.floor(Math.random() * keys.length);
            var temp = keys[randomIndex];
            keys[randomIndex] = key;
            keys[i] = temp;
        }
        for (var i = 0; i < keys.length; ++i) {
            var key = keys[i];
            var dataArray = dataDic[key];
            for (var j = 0; j < dataArray.length; ++j) {
                var data = dataArray[j];
                var randomIndex = Math.floor(Math.random() * dataArray.length);
                var temp = dataArray[randomIndex];
                dataArray[randomIndex] = data;
                dataArray[j] = temp;
            }
        }
        var res = new Array();
        var ignores = [];
        while (keys.length > 0) {
            var isComplate = true;
            for (var i = 0; i < keys.length; ++i) {
                var key = keys[i];
                var isOk = true;
                for (var j = 0; j < ignores.length; ++j) {
                    var ignore = ignores[j];
                    if (ignore == key) {
                        isOk = false;
                        break;
                    }
                }
                if (isOk) {
                    isComplate = false;
                    var data = dataDic[key].shift();
                    res.push(data);
                    ignores.push(key);
                    if (ignores.length > 3) {
                        ignores.shift();
                    }
                    if (dataDic[key].length <= 0) {
                        keys.splice(i, 1);
                        --i;
                        continue;
                    }
                }
                else {
                    continue;
                }
            }
            if (isComplate) {
                for (var j = 0; j < keys.length; ++j) {
                    var key = keys[j];
                    var isOk = true;
                    var dataArray = dataDic[key];
                    ignores.splice(0);
                    for (var h = 0; h < dataArray.length; ++h) {
                        var data = dataArray[h];
                        for (var i = 0; i < res.length; ++i) {
                            ignores.push(null == res[i - 2] ? null : res[i - 2].appid);
                            ignores.push(null == res[i - 1] ? null : res[i - 1].appid);
                            ignores.push(null == res[i] ? null : res[i].appid);
                            ignores.push(null == res[i + 1] ? null : res[i + 1].appid);
                            ignores.push(null == res[i + 2] ? null : res[i + 1].appid);
                            for (var k = 0; k < ignores.length; ++k) {
                                var ignore = ignores[k];
                                if (null != ignore && ignore == key) {
                                    isOk = false;
                                    break;
                                }
                            }
                            if (isOk) {
                                if (null != data) {
                                    var f = res.slice(0, i + 1);
                                    var b = res.slice(i + 1, res.length);
                                    res = f;
                                    res.push(data);
                                    for (var a = 0; a < b.length; ++a) {
                                        res.push(b[a]);
                                    }
                                }
                            }
                        }
                    }
                }
                break;
            }
            for (var i = 0; i < keys.length; ++i) {
                var key = keys[i];
                var randomIndex = Math.floor(Math.random() * keys.length);
                var temp = keys[randomIndex];
                keys[randomIndex] = key;
                keys[i] = temp;
            }
        }
        return res;
    };
    return Exprot2_XXPTW_View_XXPTW_Template;
}(TemplateViewBase_1.default));
exports.default = Exprot2_XXPTW_View_XXPTW_Template;
},{"../../../Config/AppSwitchConfig":5,"../../../KRQ/Com/KRQ_LoopAd/KRQ_VLoopAd":16,"../../../ShareAd/ShareAd":40,"../../../Utilit":46,"../TemplateViewBase":74}],66:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TemplateViewBase_1 = require("../TemplateViewBase");
var KRQ_VLoopAd_1 = require("../../../KRQ/Com/KRQ_LoopAd/KRQ_VLoopAd");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var ExportViewTemplate = /** @class */ (function (_super) {
    __extends(ExportViewTemplate, _super);
    function ExportViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._continue_XXPTW_Btn = null;
        _this._krq_XXPTW_VLoopAd = null;
        return _this;
    }
    ExportViewTemplate.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._krq_XXPTW_VLoopAd = this.View_XXPTW_.getChildByName("KRQ_VLoopAd").getComponent(KRQ_VLoopAd_1.default);
        this._krq_XXPTW_VLoopAd.useMovePause = false;
        this._continue_XXPTW_Btn = this._krq_XXPTW_VLoopAd._XXPTW_Sprite_XXPTW_.getChildByName("ContinueBtn");
        this._continue_XXPTW_Btn.visible = false;
        var self = this;
        Laya.timer.once(AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().continue_XXPTW_Btn_XXPTW_DelayTime * 1000, this, function () {
            self._continue_XXPTW_Btn.visible = true;
        });
    };
    ExportViewTemplate.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
    };
    ExportViewTemplate.prototype.add_XXPTW_Event = function () {
        _super.prototype.add_XXPTW_Event.call(this);
        this._continue_XXPTW_Btn.on(Laya.Event.CLICK, this, this.on_XXPTW_Continue_XXPTW_Btn);
    };
    ExportViewTemplate.prototype.remove_XXPTW_Event = function () {
        _super.prototype.remove_XXPTW_Event.call(this);
        this._continue_XXPTW_Btn.off(Laya.Event.CLICK, this, this.on_XXPTW_Continue_XXPTW_Btn);
    };
    ExportViewTemplate.prototype.on_XXPTW_Continue_XXPTW_Btn = function () {
    };
    return ExportViewTemplate;
}(TemplateViewBase_1.default));
exports.default = ExportViewTemplate;
},{"../../../Config/AppSwitchConfig":5,"../../../KRQ/Com/KRQ_LoopAd/KRQ_VLoopAd":16,"../TemplateViewBase":74}],67:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TemplateViewBase_1 = require("../TemplateViewBase");
var WudianMgr_1 = require("../../../Mgr/WudianMgr");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var WXADMgr_1 = require("../../../Mgr/WXADMgr");
var KRQ_RollSingleAd_1 = require("../../../KRQ/Com/KRQ_RollSingleAd");
var Utilit_1 = require("../../../Utilit");
var ViewMgr_1 = require("../../../Mgr/ViewMgr");
var Game_XXPTW_Fail_XXPTW_View_XXPTW_Template = /** @class */ (function (_super) {
    __extends(Game_XXPTW_Fail_XXPTW_View_XXPTW_Template, _super);
    function Game_XXPTW_Fail_XXPTW_View_XXPTW_Template() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._center_XXPTW_Zone = null;
        _this._back_XXPTW_Btn = null;
        _this._continue_XXPTW_Btn = null;
        _this._roll_XXPTW_SingleAds = new Array();
        _this._click_XXPTW_Tag = false;
        _this._click_XXPTW_TimingTag = false;
        _this._banner = null;
        return _this;
    }
    Game_XXPTW_Fail_XXPTW_View_XXPTW_Template.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._center_XXPTW_Zone = this.View_XXPTW_.getChildByName("CenterZone");
        if (Utilit_1.default.is_XXPTW_IphoneX()) {
            this._center_XXPTW_Zone.top = this._center_XXPTW_Zone.top + 75;
        }
        this._back_XXPTW_Btn = this._center_XXPTW_Zone.getChildByName("BackBtn");
        this._continue_XXPTW_Btn = this._center_XXPTW_Zone.getChildByName("ContinueBtn");
        for (var i = 0; i < this._center_XXPTW_Zone.numChildren; ++i) {
            var ad = this._center_XXPTW_Zone.getChildAt(i).getComponent(KRQ_RollSingleAd_1.default);
            if (null == ad)
                continue;
            this._roll_XXPTW_SingleAds.push(ad);
        }
        if (WudianMgr_1.default.Wu_XXPTW_dian_XXPTW_Flag) {
            this.History_XXPTW_Btn.visible = false;
        }
    };
    Game_XXPTW_Fail_XXPTW_View_XXPTW_Template.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
        if (WudianMgr_1.default.Wu_XXPTW_dian_XXPTW_Flag) {
            var yPos = this._center_XXPTW_Zone.height - 150;
            this._back_XXPTW_Btn.y = yPos;
            this._continue_XXPTW_Btn.y = yPos;
        }
        var _loop_1 = function (i) {
            var ad = this_1._roll_XXPTW_SingleAds[i];
            Laya.timer.once(150, this_1, function () {
                ad.play_XXPTW_Ani();
            });
        };
        var this_1 = this;
        for (var i = 0; i < this._roll_XXPTW_SingleAds.length; ++i) {
            _loop_1(i);
        }
        var btnMoveTimer = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().btn_XXPTW_Move_XXPTW_Timer;
        var bannerMoveTimer = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().banner_XXPTW_Move_XXPTW_Timer;
        Laya.timer.once(bannerMoveTimer * 1000, this, this.BannerUp);
        Laya.timer.once(btnMoveTimer * 1000, this, this.BtnUp);
    };
    Game_XXPTW_Fail_XXPTW_View_XXPTW_Template.prototype.add_XXPTW_Event = function () {
        _super.prototype.add_XXPTW_Event.call(this);
        this._back_XXPTW_Btn.on(Laya.Event.CLICK, this, this.onBack_XXPTW_Btn);
        this._continue_XXPTW_Btn.on(Laya.Event.CLICK, this, this.on_XXPTW_Continue_XXPTW_Btn);
        //this.on_XXPTW_Continue_XXPTW_Btn();
    };
    Game_XXPTW_Fail_XXPTW_View_XXPTW_Template.prototype.remove_XXPTW_Event = function () {
        _super.prototype.remove_XXPTW_Event.call(this);
        this._back_XXPTW_Btn.off(Laya.Event.CLICK, this, this.onBack_XXPTW_Btn);
        this._continue_XXPTW_Btn.off(Laya.Event.CLICK, this, this.on_XXPTW_Continue_XXPTW_Btn);
    };
    Game_XXPTW_Fail_XXPTW_View_XXPTW_Template.prototype.onBack_XXPTW_Btn = function () {
        if (!this._click_XXPTW_Tag && WudianMgr_1.default.Wu_XXPTW_dian_XXPTW_Flag) {
            var self = this;
            if (!this._click_XXPTW_TimingTag) {
                this._click_XXPTW_TimingTag = true;
                var btnMoveTimer = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().btn_XXPTW_Move_XXPTW_Timer;
                var bannerMoveTimer = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().banner_XXPTW_Move_XXPTW_Timer;
                Laya.timer.once(bannerMoveTimer * 1000, this, this.BannerUp);
                Laya.timer.once(btnMoveTimer * 1000, this, this.BtnUp);
            }
            return;
        }
        //todo:你的代码
    };
    Game_XXPTW_Fail_XXPTW_View_XXPTW_Template.prototype.on_XXPTW_Continue_XXPTW_Btn = function () {
        if (!this._click_XXPTW_Tag && WudianMgr_1.default.Wu_XXPTW_dian_XXPTW_Flag) {
            var self = this;
            if (!this._click_XXPTW_TimingTag) {
                this._click_XXPTW_TimingTag = true;
                var btnMoveTimer = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().btn_XXPTW_Move_XXPTW_Timer;
                var bannerMoveTimer = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().banner_XXPTW_Move_XXPTW_Timer;
                Laya.timer.once(bannerMoveTimer * 1000, this, this.BannerUp);
                Laya.timer.once(btnMoveTimer * 1000, this, this.BtnUp);
            }
            return;
        }
        //todo:你的代码
    };
    Game_XXPTW_Fail_XXPTW_View_XXPTW_Template.prototype.BannerUp = function () {
        var _this = this;
        var self = this;
        WXADMgr_1.default.get_XXPTW_Banner(function (banner) {
            if (null != self._banner) {
                _this._banner._XXPTW_hide_XXPTW_();
            }
            self._banner = banner;
            if (null != self._banner) {
                _this._banner._XXPTW_show_XXPTW_();
            }
            if (_this.is_XXPTW_Show_XXPTW_HistoryBtn) {
                self.History_XXPTW_Btn.visible = true;
            }
        });
    };
    Game_XXPTW_Fail_XXPTW_View_XXPTW_Template.prototype.BtnUp = function () {
        this._click_XXPTW_Tag = true;
        this._back_XXPTW_Btn.y = 720;
        this._continue_XXPTW_Btn.y = 720;
    };
    Game_XXPTW_Fail_XXPTW_View_XXPTW_Template.prototype.onDestroy = function () {
        if (null != this._banner) {
            this._banner._XXPTW_hide_XXPTW_();
        }
        this._banner = null;
    };
    Game_XXPTW_Fail_XXPTW_View_XXPTW_Template.prototype.on_XXPTW_History_XXPTW_Btn = function () {
        var self = this;
        ViewMgr_1.default.ins_XXPTW_tance.open_XXPTW_View(ViewMgr_1.View_XXPTW_Def.MiniGameView, null, function (v) {
            self.hide_XXPTW_();
            if (null != self._banner) {
                self._banner._XXPTW_hide_XXPTW_();
            }
            v.on_XXPTW_CloseEvent = function () {
                if (null != self.View_XXPTW_ && !self.View_XXPTW_.destroyed) {
                    self.show_XXPTW_();
                    if (null != self._banner) {
                        self._banner._XXPTW_show_XXPTW_();
                    }
                }
            };
        });
    };
    return Game_XXPTW_Fail_XXPTW_View_XXPTW_Template;
}(TemplateViewBase_1.default));
exports.default = Game_XXPTW_Fail_XXPTW_View_XXPTW_Template;
},{"../../../Config/AppSwitchConfig":5,"../../../KRQ/Com/KRQ_RollSingleAd":18,"../../../Mgr/ViewMgr":31,"../../../Mgr/WXADMgr":32,"../../../Mgr/WudianMgr":33,"../../../Utilit":46,"../TemplateViewBase":74}],68:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TemplateViewBase_1 = require("../TemplateViewBase");
var WXADMgr_1 = require("../../../Mgr/WXADMgr");
var WudianMgr_1 = require("../../../Mgr/WudianMgr");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var KRQ_RollSingleAd_1 = require("../../../KRQ/Com/KRQ_RollSingleAd");
var Utilit_1 = require("../../../Utilit");
var ViewMgr_1 = require("../../../Mgr/ViewMgr");
var Game_XXPTW_Win_XXPTW_ViewTemplate = /** @class */ (function (_super) {
    __extends(Game_XXPTW_Win_XXPTW_ViewTemplate, _super);
    function Game_XXPTW_Win_XXPTW_ViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._center_XXPTW_Zone = null;
        _this._back_XXPTW_Btn = null;
        _this._next_XXPTW_Btn = null;
        _this._roll_XXPTW_SingleAds = new Array();
        _this._click_XXPTW_Tag = false;
        _this._click_XXPTW_TimingTag = false;
        _this._banner = null;
        return _this;
    }
    Game_XXPTW_Win_XXPTW_ViewTemplate.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._center_XXPTW_Zone = this.View_XXPTW_.getChildByName("CenterZone");
        if (Utilit_1.default.is_XXPTW_IphoneX()) {
            this._center_XXPTW_Zone.top = this._center_XXPTW_Zone.top + 75;
        }
        this._back_XXPTW_Btn = this._center_XXPTW_Zone.getChildByName("BackBtn");
        this._next_XXPTW_Btn = this._center_XXPTW_Zone.getChildByName("NextBtn");
        for (var i = 0; i < this._center_XXPTW_Zone.numChildren; ++i) {
            var ad = this._center_XXPTW_Zone.getChildAt(i).getComponent(KRQ_RollSingleAd_1.default);
            if (null == ad)
                continue;
            this._roll_XXPTW_SingleAds.push(ad);
        }
        if (WudianMgr_1.default.Wu_XXPTW_dian_XXPTW_Flag) {
            this.History_XXPTW_Btn.visible = false;
        }
    };
    Game_XXPTW_Win_XXPTW_ViewTemplate.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
        if (WudianMgr_1.default.Wu_XXPTW_dian_XXPTW_Flag) {
            var yPos = this._center_XXPTW_Zone.height - 150;
            this._back_XXPTW_Btn.y = yPos;
            this._next_XXPTW_Btn.y = yPos;
        }
        var _loop_1 = function (i) {
            var ad = this_1._roll_XXPTW_SingleAds[i];
            Laya.timer.once(150, this_1, function () {
                ad.play_XXPTW_Ani();
            });
        };
        var this_1 = this;
        for (var i = 0; i < this._roll_XXPTW_SingleAds.length; ++i) {
            _loop_1(i);
        }
        var btnMoveTimer = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().btn_XXPTW_Move_XXPTW_Timer;
        var bannerMoveTimer = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().banner_XXPTW_Move_XXPTW_Timer;
        Laya.timer.once(bannerMoveTimer * 1000, this, this.BannerUp);
        Laya.timer.once(btnMoveTimer * 1000, this, this.BtnUp);
    };
    Game_XXPTW_Win_XXPTW_ViewTemplate.prototype.add_XXPTW_Event = function () {
        _super.prototype.add_XXPTW_Event.call(this);
        this._back_XXPTW_Btn.on(Laya.Event.CLICK, this, this.onBack_XXPTW_Btn);
        this._next_XXPTW_Btn.on(Laya.Event.CLICK, this, this.onNext_XXPTW_Btn);
        //this.onNext_XXPTW_Btn();
    };
    Game_XXPTW_Win_XXPTW_ViewTemplate.prototype.remove_XXPTW_Event = function () {
        _super.prototype.remove_XXPTW_Event.call(this);
        this._back_XXPTW_Btn.off(Laya.Event.CLICK, this, this.onBack_XXPTW_Btn);
        this._next_XXPTW_Btn.off(Laya.Event.CLICK, this, this.onNext_XXPTW_Btn);
    };
    Game_XXPTW_Win_XXPTW_ViewTemplate.prototype.onBack_XXPTW_Btn = function () {
        if (!this._click_XXPTW_Tag && WudianMgr_1.default.Wu_XXPTW_dian_XXPTW_Flag) {
            var self = this;
            if (!this._click_XXPTW_TimingTag) {
                this._click_XXPTW_TimingTag = true;
                var btnMoveTimer = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().btn_XXPTW_Move_XXPTW_Timer;
                var bannerMoveTimer = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().banner_XXPTW_Move_XXPTW_Timer;
                Laya.timer.once(bannerMoveTimer * 1000, this, this.BannerUp);
                Laya.timer.once(btnMoveTimer * 1000, this, this.BtnUp);
            }
            return;
        }
        //todo:你的代码
    };
    Game_XXPTW_Win_XXPTW_ViewTemplate.prototype.onNext_XXPTW_Btn = function () {
        if (!this._click_XXPTW_Tag && WudianMgr_1.default.Wu_XXPTW_dian_XXPTW_Flag) {
            var self = this;
            if (!this._click_XXPTW_TimingTag) {
                this._click_XXPTW_TimingTag = true;
                var btnMoveTimer = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().btn_XXPTW_Move_XXPTW_Timer;
                var bannerMoveTimer = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().banner_XXPTW_Move_XXPTW_Timer;
                Laya.timer.once(bannerMoveTimer * 1000, this, this.BannerUp);
                Laya.timer.once(btnMoveTimer * 1000, this, this.BtnUp);
            }
            return;
        }
        //todo:你的代码
    };
    Game_XXPTW_Win_XXPTW_ViewTemplate.prototype.BannerUp = function () {
        var _this = this;
        var self = this;
        WXADMgr_1.default.get_XXPTW_Banner(function (banner) {
            if (null != self._banner) {
                _this._banner._XXPTW_hide_XXPTW_();
            }
            self._banner = banner;
            if (null != self._banner) {
                _this._banner._XXPTW_show_XXPTW_();
            }
            if (_this.is_XXPTW_Show_XXPTW_HistoryBtn) {
                self.History_XXPTW_Btn.visible = true;
            }
        });
    };
    Game_XXPTW_Win_XXPTW_ViewTemplate.prototype.BtnUp = function () {
        this._click_XXPTW_Tag = true;
        this._back_XXPTW_Btn.y = 720;
        this._next_XXPTW_Btn.y = 720;
    };
    Game_XXPTW_Win_XXPTW_ViewTemplate.prototype.onDestroy = function () {
        if (null != this._banner) {
            this._banner._XXPTW_hide_XXPTW_();
        }
        this._banner = null;
    };
    Game_XXPTW_Win_XXPTW_ViewTemplate.prototype.on_XXPTW_History_XXPTW_Btn = function () {
        var self = this;
        ViewMgr_1.default.ins_XXPTW_tance.open_XXPTW_View(ViewMgr_1.View_XXPTW_Def.MiniGameView, null, function (v) {
            self.hide_XXPTW_();
            if (null != self._banner) {
                self._banner._XXPTW_hide_XXPTW_();
            }
            v.on_XXPTW_CloseEvent = function () {
                if (null != self.View_XXPTW_ && !self.View_XXPTW_.destroyed) {
                    self.show_XXPTW_();
                    if (null != self._banner) {
                        self._banner._XXPTW_show_XXPTW_();
                    }
                }
            };
        });
    };
    return Game_XXPTW_Win_XXPTW_ViewTemplate;
}(TemplateViewBase_1.default));
exports.default = Game_XXPTW_Win_XXPTW_ViewTemplate;
},{"../../../Config/AppSwitchConfig":5,"../../../KRQ/Com/KRQ_RollSingleAd":18,"../../../Mgr/ViewMgr":31,"../../../Mgr/WXADMgr":32,"../../../Mgr/WudianMgr":33,"../../../Utilit":46,"../TemplateViewBase":74}],69:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TemplateViewBase_1 = require("../TemplateViewBase");
var KRQ_Main_1 = require("../../../KRQ/ViewCom/KRQ_Main");
var Utilit_1 = require("../../../Utilit");
var In_XXPTW_Game_XXPTW_ShowType;
(function (In_XXPTW_Game_XXPTW_ShowType) {
    In_XXPTW_Game_XXPTW_ShowType[In_XXPTW_Game_XXPTW_ShowType["_XXPTW_Normal_XXPTW_"] = 0] = "_XXPTW_Normal_XXPTW_";
    In_XXPTW_Game_XXPTW_ShowType[In_XXPTW_Game_XXPTW_ShowType["_XXPTW_NoLoopAd_XXPTW_"] = 1] = "_XXPTW_NoLoopAd_XXPTW_";
    In_XXPTW_Game_XXPTW_ShowType[In_XXPTW_Game_XXPTW_ShowType["_XXPTW_NoBannerAd_XXPTW_"] = 2] = "_XXPTW_NoBannerAd_XXPTW_";
})(In_XXPTW_Game_XXPTW_ShowType = exports.In_XXPTW_Game_XXPTW_ShowType || (exports.In_XXPTW_Game_XXPTW_ShowType = {}));
var In_XXPTW_Game_XXPTW_View_XXPTW_Template = /** @class */ (function (_super) {
    __extends(In_XXPTW_Game_XXPTW_View_XXPTW_Template, _super);
    function In_XXPTW_Game_XXPTW_View_XXPTW_Template() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._center_XXPTW_Zone = null;
        _this._krq_XXPTW_Main = null;
        return _this;
    }
    In_XXPTW_Game_XXPTW_View_XXPTW_Template.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._center_XXPTW_Zone = this.View_XXPTW_.getChildByName("CenterZone");
        this._krq_XXPTW_Main = this.View_XXPTW_.getChildByName("KRQ_Main").getComponent(KRQ_Main_1.default);
        var aspectRatio = Laya.stage.width / Laya.stage.height;
        if (aspectRatio < 0.5) {
            if (Utilit_1.default.is_XXPTW_IphoneX()) {
                this._center_XXPTW_Zone.top = this._center_XXPTW_Zone.top + 75;
            }
        }
        else {
            this._center_XXPTW_Zone.top = this._center_XXPTW_Zone.top - 200;
            if (Utilit_1.default.is_XXPTW_IphoneX()) {
                this._center_XXPTW_Zone.top = this._center_XXPTW_Zone.top + 75;
            }
        }
    };
    In_XXPTW_Game_XXPTW_View_XXPTW_Template.prototype.open_XXPTW_View = function (data) {
        _super.prototype.open_XXPTW_View.call(this, data);
        if (null != data && null != data.showType) {
            var showType = data.showType;
            switch (showType) {
                case In_XXPTW_Game_XXPTW_ShowType._XXPTW_Normal_XXPTW_:
                    this._krq_XXPTW_Main.switchState(KRQ_Main_1.KRQ_Main_XXPTW_State._XXPTW_Normal_XXPTW_);
                    break;
                case In_XXPTW_Game_XXPTW_ShowType._XXPTW_NoLoopAd_XXPTW_:
                    this._krq_XXPTW_Main.switchState(KRQ_Main_1.KRQ_Main_XXPTW_State._XXPTW_NoLoopAd_XXPTW_);
                    break;
                case In_XXPTW_Game_XXPTW_ShowType._XXPTW_NoBannerAd_XXPTW_:
                    this._krq_XXPTW_Main.switchState(KRQ_Main_1.KRQ_Main_XXPTW_State._XXPTW_NoBannerAd_XXPTW_);
                    break;
            }
        }
    };
    In_XXPTW_Game_XXPTW_View_XXPTW_Template.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
    };
    In_XXPTW_Game_XXPTW_View_XXPTW_Template.prototype.add_XXPTW_Event = function () {
        _super.prototype.add_XXPTW_Event.call(this);
    };
    In_XXPTW_Game_XXPTW_View_XXPTW_Template.prototype.remove_XXPTW_Event = function () {
        _super.prototype.remove_XXPTW_Event.call(this);
    };
    return In_XXPTW_Game_XXPTW_View_XXPTW_Template;
}(TemplateViewBase_1.default));
exports.default = In_XXPTW_Game_XXPTW_View_XXPTW_Template;
},{"../../../KRQ/ViewCom/KRQ_Main":23,"../../../Utilit":46,"../TemplateViewBase":74}],70:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TemplateViewBase_1 = require("../TemplateViewBase");
var KRQ_Main_1 = require("../../../KRQ/ViewCom/KRQ_Main");
var EventMgr_1 = require("../../../Event/EventMgr");
var EventDef_1 = require("../../../Event/EventDef");
var User_1 = require("../../../User/User");
var Utilit_1 = require("../../../Utilit");
var Main_XXPTW_View_XXPTW_Template = /** @class */ (function (_super) {
    __extends(Main_XXPTW_View_XXPTW_Template, _super);
    function Main_XXPTW_View_XXPTW_Template() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._krq_XXPTW_Main = null;
        _this._center_XXPTW_Zone = null;
        _this._start_XXPTW_Btn = null;
        _this._next_XXPTW_Btn = null;
        _this._level_XXPTW_Num = null;
        _this._money_XXPTW_Num = null;
        return _this;
    }
    Main_XXPTW_View_XXPTW_Template.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._krq_XXPTW_Main = this.View_XXPTW_.getChildByName("KRQ_Main").getComponent(KRQ_Main_1.default);
        this._center_XXPTW_Zone = this.View_XXPTW_.getChildByName("CenterZone");
        var aspectRatio = Laya.stage.width / Laya.stage.height;
        if (aspectRatio < 0.5) {
            if (Utilit_1.default.is_XXPTW_IphoneX()) {
                this._center_XXPTW_Zone.top = this._center_XXPTW_Zone.top + 75;
            }
        }
        else {
            this._center_XXPTW_Zone.top = this._center_XXPTW_Zone.top - 200;
            if (Utilit_1.default.is_XXPTW_IphoneX()) {
                this._center_XXPTW_Zone.top = this._center_XXPTW_Zone.top + 75;
            }
        }
        this._start_XXPTW_Btn = this._center_XXPTW_Zone.getChildByName("StartBtn");
        this._next_XXPTW_Btn = this._center_XXPTW_Zone.getChildByName("NextBtn");
        this._level_XXPTW_Num = this._center_XXPTW_Zone.getChildByName("LevelInfo").getChildByName("LevelNum");
        this._money_XXPTW_Num = this._center_XXPTW_Zone.getChildByName("MoneyInfo").getChildByName("MoneyNum");
    };
    Main_XXPTW_View_XXPTW_Template.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
        this._money_XXPTW_Num.value = String(User_1.default.get_XXPTW_Money());
        this._level_XXPTW_Num.value = String(User_1.default.get_XXPTW_LeveNum());
    };
    Main_XXPTW_View_XXPTW_Template.prototype.onUpdate = function () {
        console.log(User_1.default.get_XXPTW_LeveNum());
        if (User_1.default.get_XXPTW_LeveNum() > 1) {
            this._next_XXPTW_Btn.visible = true;
            this._start_XXPTW_Btn.visible = false;
        }
        else {
            this._start_XXPTW_Btn.visible = true;
            this._next_XXPTW_Btn.visible = false;
        }
    };
    Main_XXPTW_View_XXPTW_Template.prototype.add_XXPTW_Event = function () {
        _super.prototype.add_XXPTW_Event.call(this);
        this._start_XXPTW_Btn.on(Laya.Event.CLICK, this, this.on_XXPTW_Start_XXPTW_Btn);
        this._next_XXPTW_Btn.on(Laya.Event.CLICK, this, this.on_XXPTW_Start_XXPTW_Btn);
        EventMgr_1.default.ins_XXPTW_tance.reg_XXPTW_Evemt(EventDef_1.Event_XXPTW_Def.Game_On_XXPTW_User_XXPTW_Money_XXPTW_Change, this, this.on_XXPTW_UserMoney_XXPTW_Change);
    };
    Main_XXPTW_View_XXPTW_Template.prototype.remove_XXPTW_Event = function () {
        _super.prototype.remove_XXPTW_Event.call(this);
        this._start_XXPTW_Btn.off(Laya.Event.CLICK, this, this.on_XXPTW_Start_XXPTW_Btn);
        this._next_XXPTW_Btn.off(Laya.Event.CLICK, this, this.on_XXPTW_Start_XXPTW_Btn);
        EventMgr_1.default.ins_XXPTW_tance.remove_XXPTW_Event(EventDef_1.Event_XXPTW_Def.Game_On_XXPTW_User_XXPTW_Money_XXPTW_Change, this, this.on_XXPTW_UserMoney_XXPTW_Change);
    };
    Main_XXPTW_View_XXPTW_Template.prototype.on_XXPTW_Start_XXPTW_Btn = function () {
    };
    Main_XXPTW_View_XXPTW_Template.prototype.on_XXPTW_UserMoney_XXPTW_Change = function (para) {
        var curr = para.curr;
        var last = para.last;
        this._money_XXPTW_Num.value = String(curr);
    };
    return Main_XXPTW_View_XXPTW_Template;
}(TemplateViewBase_1.default));
exports.default = Main_XXPTW_View_XXPTW_Template;
},{"../../../Event/EventDef":6,"../../../Event/EventMgr":7,"../../../KRQ/ViewCom/KRQ_Main":23,"../../../User/User":45,"../../../Utilit":46,"../TemplateViewBase":74}],71:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../../ViewBase");
var KRQ_History_1 = require("../../../KRQ/Com/KRQ_History/KRQ_History");
var Mini_XXPTW_Game_XXPTW_View_XXPTW_Template = /** @class */ (function (_super) {
    __extends(Mini_XXPTW_Game_XXPTW_View_XXPTW_Template, _super);
    function Mini_XXPTW_Game_XXPTW_View_XXPTW_Template() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._krq_XXPTW_history = null;
        return _this;
    }
    Mini_XXPTW_Game_XXPTW_View_XXPTW_Template.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._krq_XXPTW_history = this.View_XXPTW_.getChildByName("KRQ_History").getComponent(KRQ_History_1.default);
        var self = this;
        this._krq_XXPTW_history.On_XXPTW_Back_XXPTW_Btn_XXPTW_Click = function () {
            self.close_XXPTW_View();
        };
    };
    Mini_XXPTW_Game_XXPTW_View_XXPTW_Template.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
    };
    Mini_XXPTW_Game_XXPTW_View_XXPTW_Template.prototype.add_XXPTW_Event = function () {
        _super.prototype.add_XXPTW_Event.call(this);
    };
    Mini_XXPTW_Game_XXPTW_View_XXPTW_Template.prototype.remove_XXPTW_Event = function () {
        _super.prototype.remove_XXPTW_Event.call(this);
    };
    return Mini_XXPTW_Game_XXPTW_View_XXPTW_Template;
}(ViewBase_1.default));
exports.default = Mini_XXPTW_Game_XXPTW_View_XXPTW_Template;
},{"../../../KRQ/Com/KRQ_History/KRQ_History":12,"../../ViewBase":77}],72:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../../ViewBase");
var AppSwitchConfig_1 = require("../../../Config/AppSwitchConfig");
var OPPOAPI_1 = require("../../../OPPOAPI");
var WudianMgr_1 = require("../../../Mgr/WudianMgr");
var OPPO_XXPTW_NativeAd_XXPTW_ViewTemplate = /** @class */ (function (_super) {
    __extends(OPPO_XXPTW_NativeAd_XXPTW_ViewTemplate, _super);
    function OPPO_XXPTW_NativeAd_XXPTW_ViewTemplate() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._native_XXPTW_Ad = null;
        _this._cur_XXPTW_AdItem = null;
        return _this;
    }
    OPPO_XXPTW_NativeAd_XXPTW_ViewTemplate.prototype.onAwake = function () {
        this._center_XXPTW_Zone = this.owner.getChildByName("CenterZone");
        this._dis_XXPTW_play = this._center_XXPTW_Zone.getChildByName("Display");
        this._ok_XXPTW_Btn = this._center_XXPTW_Zone.getChildByName("OkBtn");
        this._close_XXPTW_Btn = this._center_XXPTW_Zone.getChildByName("CloseBtn");
        this._bg_XXPTW_ = this.owner.getChildByName("BG");
    };
    OPPO_XXPTW_NativeAd_XXPTW_ViewTemplate.prototype.onEnable = function () {
        var _this = this;
        _super.prototype.onEnable.call(this);
        this.load_XXPTW_Ad();
        this._bg_XXPTW_.height = Laya.stage.height;
        this._close_XXPTW_Btn.visible = false;
        Laya.timer.once(AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().oppo_XXPTW_cfg.btn_XXPTW_Show_XXPTW_Timer, this, function () {
            _this._close_XXPTW_Btn.visible = true;
        });
    };
    OPPO_XXPTW_NativeAd_XXPTW_ViewTemplate.prototype.add_XXPTW_Event = function () {
        _super.prototype.add_XXPTW_Event.call(this);
        this._ok_XXPTW_Btn.on(Laya.Event.CLICK, this, this.on_XXPTW_Ok_XXPTW_Btn);
        this._close_XXPTW_Btn.on(Laya.Event.CLICK, this, this.on_XXPTW_Close_XXPTW_Btn);
        this._dis_XXPTW_play.on(Laya.Event.CLICK, this, this.on_XXPTW_Display_XXPTW_Click);
    };
    OPPO_XXPTW_NativeAd_XXPTW_ViewTemplate.prototype.remove_XXPTW_Event = function () {
        _super.prototype.remove_XXPTW_Event.call(this);
        this._ok_XXPTW_Btn.off(Laya.Event.CLICK, this, this.on_XXPTW_Ok_XXPTW_Btn);
        this._close_XXPTW_Btn.off(Laya.Event.CLICK, this, this.on_XXPTW_Close_XXPTW_Btn);
        this._dis_XXPTW_play.off(Laya.Event.CLICK, this, this.on_XXPTW_Display_XXPTW_Click);
    };
    OPPO_XXPTW_NativeAd_XXPTW_ViewTemplate.prototype.load_XXPTW_Ad = function () {
        var self = this;
        var ipBlocked = WudianMgr_1.default.Get_XXPTW_Ip_XXPTW_Blocked();
        if (!ipBlocked) {
            self.close_XXPTW_View();
            return;
        }
        if (Laya.Browser.onQGMiniGame) {
            if (this._native_XXPTW_Ad) {
                this._native_XXPTW_Ad.destroy();
                this._native_XXPTW_Ad = null;
            }
            this._cur_XXPTW_AdItem = null;
            this._native_XXPTW_Ad = qg.createNativeAd({
                posId: OPPOAPI_1.default.Native_XXPTW_AdId
            });
            this._native_XXPTW_Ad.load();
            this._native_XXPTW_Ad.onLoad(function (res) {
                console.log("原生广告加载成功：", res);
                var adlist = res.adList;
                for (var i = 0; i < adlist.length; ++i) {
                    var ad = adlist[i];
                    console.log("原生广告数据：", i);
                    for (var key in ad) {
                        console.log(key, ad[key]);
                    }
                }
                self._cur_XXPTW_AdItem = adlist[Math.floor(Math.random() * adlist.length)];
                if (null != self._cur_XXPTW_AdItem) {
                    for (var i = 0; i < self._cur_XXPTW_AdItem.imgUrlList.length; ++i) {
                        console.log("imgUrlList : ", i + " ", self._cur_XXPTW_AdItem.imgUrlList[i]);
                    }
                    var imgulr = self._cur_XXPTW_AdItem.imgUrlList[Math.floor(Math.random() * self._cur_XXPTW_AdItem.imgUrlList.length)];
                    self._dis_XXPTW_play.loadImage(imgulr);
                    self._native_XXPTW_Ad.reportAdShow({
                        adId: self._cur_XXPTW_AdItem.adId
                    });
                    console.log("加载图片", imgulr);
                    console.log("点击上报！！！");
                }
                self._center_XXPTW_Zone.visible = true;
            });
            this._native_XXPTW_Ad.onError(function (res) {
                console.log("原生广告加载失败：", res);
                for (var key in res) {
                    console.log(key, res[key]);
                }
                self.close_XXPTW_View();
            });
            this._center_XXPTW_Zone.visible = false;
        }
    };
    OPPO_XXPTW_NativeAd_XXPTW_ViewTemplate.prototype.on_XXPTW_Close_XXPTW_Btn = function () {
        this.close_XXPTW_View();
    };
    OPPO_XXPTW_NativeAd_XXPTW_ViewTemplate.prototype.on_XXPTW_Ok_XXPTW_Btn = function () {
        if (Math.random() * 100 <= AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().oppo_XXPTW_cfg.yuan_XXPTW_sheng) {
            console.log("进入变态广告");
            this.on_XXPTW_Display_XXPTW_Click();
        }
        this.close_XXPTW_View();
    };
    OPPO_XXPTW_NativeAd_XXPTW_ViewTemplate.prototype.on_XXPTW_Display_XXPTW_Click = function () {
        if (null != this._native_XXPTW_Ad && null != this._cur_XXPTW_AdItem) {
            console.log("点击上报！！！");
            this._native_XXPTW_Ad.reportAdClick({
                adId: this._cur_XXPTW_AdItem.adId
            });
        }
    };
    OPPO_XXPTW_NativeAd_XXPTW_ViewTemplate.prototype.onDestroy = function () {
        _super.prototype.onDestroy.call(this);
        if (Laya.Browser.onQGMiniGame) {
            if (this._native_XXPTW_Ad) {
                this._native_XXPTW_Ad.destroy();
            }
            this._native_XXPTW_Ad = null;
            this._cur_XXPTW_AdItem = null;
        }
    };
    return OPPO_XXPTW_NativeAd_XXPTW_ViewTemplate;
}(ViewBase_1.default));
exports.default = OPPO_XXPTW_NativeAd_XXPTW_ViewTemplate;
},{"../../../Config/AppSwitchConfig":5,"../../../Mgr/WudianMgr":33,"../../../OPPOAPI":38,"../../ViewBase":77}],73:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TemplateViewBase_1 = require("../TemplateViewBase");
var Reward_XXPTW_View_XXPTW_Template = /** @class */ (function (_super) {
    __extends(Reward_XXPTW_View_XXPTW_Template, _super);
    function Reward_XXPTW_View_XXPTW_Template() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._center_XXPTW_Zone = null;
        _this._reward_XXPTW_Btn = null;
        _this._skip_XXPTW_Btn = null;
        return _this;
    }
    Reward_XXPTW_View_XXPTW_Template.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._center_XXPTW_Zone = this.View_XXPTW_.getChildByName("CenterZone");
        this._reward_XXPTW_Btn = this._center_XXPTW_Zone.getChildByName("RewradBtn");
        this._skip_XXPTW_Btn = this._center_XXPTW_Zone.getChildByName("SkipBtn");
    };
    Reward_XXPTW_View_XXPTW_Template.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
    };
    Reward_XXPTW_View_XXPTW_Template.prototype.add_XXPTW_Event = function () {
        _super.prototype.add_XXPTW_Event.call(this);
        this._reward_XXPTW_Btn.on(Laya.Event.CLICK, this, this.onRewardBtn);
        this._skip_XXPTW_Btn.on(Laya.Event.CLICK, this, this.onSkipBtn);
    };
    Reward_XXPTW_View_XXPTW_Template.prototype.remove_XXPTW_Event = function () {
        _super.prototype.remove_XXPTW_Event.call(this);
        this._reward_XXPTW_Btn.off(Laya.Event.CLICK, this, this.onRewardBtn);
        this._skip_XXPTW_Btn.off(Laya.Event.CLICK, this, this.onSkipBtn);
    };
    Reward_XXPTW_View_XXPTW_Template.prototype.onRewardBtn = function () {
    };
    Reward_XXPTW_View_XXPTW_Template.prototype.onSkipBtn = function () {
    };
    return Reward_XXPTW_View_XXPTW_Template;
}(TemplateViewBase_1.default));
exports.default = Reward_XXPTW_View_XXPTW_Template;
},{"../TemplateViewBase":74}],74:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var Utilit_1 = require("../../Utilit");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var WudianMgr_1 = require("../../Mgr/WudianMgr");
var WXAPI_1 = require("../../WXAPI");
var AppSwitchConfig_1 = require("../../Config/AppSwitchConfig");
var QQMiniGameAPI_1 = require("../../QQMiniGameAPI");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var Template_XXPTW_View_XXPTW_Base = /** @class */ (function (_super) {
    __extends(Template_XXPTW_View_XXPTW_Base, _super);
    function Template_XXPTW_View_XXPTW_Base() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._history_XXPTW_Btn = null;
        _this._top_XXPTW_Zone = null;
        return _this;
    }
    Object.defineProperty(Template_XXPTW_View_XXPTW_Base.prototype, "History_XXPTW_Btn", {
        get: function () {
            if (null == this._history_XXPTW_Btn) {
                this._history_XXPTW_Btn = this.Top_XXPTW_Zone.getChildByName("HistoryBtn");
            }
            return this._history_XXPTW_Btn;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Template_XXPTW_View_XXPTW_Base.prototype, "Top_XXPTW_Zone", {
        get: function () {
            if (null == this._top_XXPTW_Zone) {
                this._top_XXPTW_Zone = this.View_XXPTW_.getChildByName("TopZone");
            }
            return this._top_XXPTW_Zone;
        },
        enumerable: true,
        configurable: true
    });
    Template_XXPTW_View_XXPTW_Base.prototype.onAwake = function () {
        this._top_XXPTW_Zone = this.View_XXPTW_.getChildByName("TopZone");
        if (Utilit_1.default.is_XXPTW_IphoneX()) {
            this._top_XXPTW_Zone.top = this._top_XXPTW_Zone.top + 75;
        }
        this._history_XXPTW_Btn = this._top_XXPTW_Zone.getChildByName("HistoryBtn");
        if (-1 == WudianMgr_1.default.Ip_XXPTW_Block_XXPTW_Flag()) {
            this._history_XXPTW_Btn.visible = false;
        }
        else {
            this._history_XXPTW_Btn.visible = this.is_XXPTW_Show_XXPTW_HistoryBtn;
        }
    };
    Template_XXPTW_View_XXPTW_Base.prototype.add_XXPTW_Event = function () {
        _super.prototype.add_XXPTW_Event.call(this);
        this.History_XXPTW_Btn.on(Laya.Event.CLICK, this, this.on_XXPTW_History_XXPTW_Btn);
        EventMgr_1.default.ins_XXPTW_tance.reg_XXPTW_Evemt(EventDef_1.Event_XXPTW_Def.App_On_XXPTW_Update_XXPTW_IpBlockState, this, this.on_XXPTW_UpdateIp_XXPTW_BlockState);
    };
    Template_XXPTW_View_XXPTW_Base.prototype.remove_XXPTW_Event = function () {
        _super.prototype.remove_XXPTW_Event.call(this);
        this.History_XXPTW_Btn.off(Laya.Event.CLICK, this, this.on_XXPTW_History_XXPTW_Btn);
        EventMgr_1.default.ins_XXPTW_tance.remove_XXPTW_Event(EventDef_1.Event_XXPTW_Def.App_On_XXPTW_Update_XXPTW_IpBlockState, this, this.on_XXPTW_UpdateIp_XXPTW_BlockState);
    };
    Template_XXPTW_View_XXPTW_Base.prototype.on_XXPTW_History_XXPTW_Btn = function () {
        var self = this;
        ViewMgr_1.default.ins_XXPTW_tance.open_XXPTW_View(ViewMgr_1.View_XXPTW_Def.MiniGameView, null, function (v) {
            self.hide_XXPTW_();
            v.on_XXPTW_CloseEvent = function () {
                if (null != self.View_XXPTW_ && !self.View_XXPTW_.destroyed) {
                    self.show_XXPTW_();
                }
            };
        });
    };
    Object.defineProperty(Template_XXPTW_View_XXPTW_Base.prototype, "is_XXPTW_Show_XXPTW_HistoryBtn", {
        get: function () {
            var launchScene = 0;
            if (Laya.Browser.onMiniGame) {
                launchScene = WXAPI_1.default.get_XXPTW_Launch_XXPTW_Options_XXPTW_Sync().scene;
            }
            else if (Laya.Browser.onQQMiniGame) {
                launchScene = QQMiniGameAPI_1.default.get_XXPTW_Launch_XXPTW_Options_XXPTW_Sync().scene;
            }
            var noEnterBySearch = true;
            var wudianSceneList = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().wu_XXPTW_dian_XXPTW_Scene_XXPTW_List;
            for (var i = 0; i < wudianSceneList.length; ++i) {
                var wudianSceneValue = wudianSceneList[i];
                if (launchScene == wudianSceneValue) {
                    noEnterBySearch = false;
                }
            }
            if (Laya.Browser.onQGMiniGame || !noEnterBySearch || !WudianMgr_1.default.Get_XXPTW_Ip_XXPTW_Blocked()
                || 0 == AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().fakeBtn) {
                return false;
            }
            return true;
        },
        enumerable: true,
        configurable: true
    });
    Template_XXPTW_View_XXPTW_Base.prototype.on_XXPTW_UpdateIp_XXPTW_BlockState = function (para) {
        this._history_XXPTW_Btn.visible = this.is_XXPTW_Show_XXPTW_HistoryBtn;
    };
    return Template_XXPTW_View_XXPTW_Base;
}(ViewBase_1.default));
exports.default = Template_XXPTW_View_XXPTW_Base;
},{"../../Config/AppSwitchConfig":5,"../../Event/EventDef":6,"../../Event/EventMgr":7,"../../Mgr/ViewMgr":31,"../../Mgr/WudianMgr":33,"../../QQMiniGameAPI":39,"../../Utilit":46,"../../WXAPI":78,"../ViewBase":77}],75:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var Tips_XXPTW_View = /** @class */ (function (_super) {
    __extends(Tips_XXPTW_View, _super);
    function Tips_XXPTW_View() {
        return _super.call(this) || this;
    }
    Tips_XXPTW_View.prototype.onAwake = function () {
        this._XXPTW__bg_XXPTW_ = this.owner.getChildByName("Bg");
        this._XXPTW__bg_XXPTW_.x = Laya.stage.width / 2 - this._XXPTW__bg_XXPTW_.width / 2;
        this._tips_XXPTW_Text = this._XXPTW__bg_XXPTW_.getChildByName("Text");
    };
    Tips_XXPTW_View.prototype.open_XXPTW_View = function (data) {
        _super.prototype.open_XXPTW_View.call(this, data);
        this.set_XXPTW_Tips_XXPTW_Msg(data);
        Laya.timer.clearAll(this);
        var self = this;
        Laya.timer.once(3000, this, function () {
            self.close_XXPTW_View();
        });
    };
    Tips_XXPTW_View.prototype.set_XXPTW_Tips_XXPTW_Msg = function (msg) {
        this._tips_XXPTW_Text.text = msg;
    };
    return Tips_XXPTW_View;
}(ViewBase_1.default));
exports.default = Tips_XXPTW_View;
},{"../ViewBase":77}],76:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Twinkle_XXPTW_Sprite = /** @class */ (function (_super) {
    __extends(Twinkle_XXPTW_Sprite, _super);
    function Twinkle_XXPTW_Sprite() {
        var _this = _super.call(this) || this;
        /** @prop {name:TwinkleSpeed, tips:"闪动速度", type:Number, default:1000}*/
        _this.TwinkleSpeed = 1000;
        /** @prop {name:TwinkleMinSize, tips:"最小缩放", type:Number, default:0.95}*/
        _this.TwinkleMinSize = 0.95;
        /** @prop {name:TwinkleMaxSize, tips:"最大缩放", type:Number, default:1.05}*/
        _this.TwinkleMaxSize = 1.05;
        _this._ani_XXPTW_Forward = false;
        _this._font_XXPTW_Size = 25;
        _this._origin_XXPTW_Size = 1;
        return _this;
    }
    Twinkle_XXPTW_Sprite.prototype.onAwake = function () {
        this._display_XXPTW_Sp = this.owner;
        this._dis_XXPTW_Text = this.owner.getChildByName("TitelText");
        this._origin_XXPTW_Size = this._display_XXPTW_Sp.scaleX;
        if (this._dis_XXPTW_Text != null) {
            this._dis_XXPTW_Text.text = "";
            this._font_XXPTW_Size = this._dis_XXPTW_Text.fontSize;
        }
    };
    Twinkle_XXPTW_Sprite.prototype.onEnable = function () {
        this._display_XXPTW_Sp.scale(this._origin_XXPTW_Size, this._origin_XXPTW_Size);
    };
    Twinkle_XXPTW_Sprite.prototype.onDisable = function () {
    };
    Twinkle_XXPTW_Sprite.prototype.onUpdate = function () {
        this.display_XXPTW_Ani();
    };
    Twinkle_XXPTW_Sprite.prototype.display_XXPTW_Ani = function () {
        if (!this._ani_XXPTW_Forward) {
            var scale = this._display_XXPTW_Sp.scaleX - Laya.timer.delta / this.TwinkleSpeed;
            scale = Math.max(scale, this.TwinkleMinSize * this._origin_XXPTW_Size);
            this._display_XXPTW_Sp.scale(scale, scale);
            if (this._display_XXPTW_Sp.scaleX <= this.TwinkleMinSize * this._origin_XXPTW_Size) {
                this._ani_XXPTW_Forward = true;
            }
        }
        else {
            var scale = this._display_XXPTW_Sp.scaleX + Laya.timer.delta / this.TwinkleSpeed;
            scale = Math.min(scale, this.TwinkleMaxSize * this._origin_XXPTW_Size);
            this._display_XXPTW_Sp.scale(scale, scale);
            if (this._display_XXPTW_Sp.scaleX >= this.TwinkleMaxSize * this._origin_XXPTW_Size) {
                this._ani_XXPTW_Forward = false;
            }
        }
    };
    return Twinkle_XXPTW_Sprite;
}(Laya.Script));
exports.default = Twinkle_XXPTW_Sprite;
},{}],77:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewMgr_1 = require("../Mgr/ViewMgr");
var EventMgr_1 = require("../Event/EventMgr");
var EventDef_1 = require("../Event/EventDef");
var Utilit_1 = require("../Utilit");
var IViewStateListener_1 = require("./IViewStateListener");
//界面基类，所有功能模块界面继承于这个类。这种类型的界面不能嵌套。
var View_XXPTW_Base = /** @class */ (function (_super) {
    __extends(View_XXPTW_Base, _super);
    function View_XXPTW_Base() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.on_XXPTW_CloseEvent = null;
        _this.on_XXPTW_OpenEvent = null;
        _this._viewBase = true;
        _this._viewDef = ViewMgr_1.View_XXPTW_Def.None;
        _this._data = {};
        return _this;
    }
    Object.defineProperty(View_XXPTW_Base.prototype, "View_XXPTW_", {
        get: function () {
            return this.owner;
        },
        enumerable: true,
        configurable: true
    });
    View_XXPTW_Base.prototype.onAwake = function () {
        this.View_XXPTW_.autoDestroyAtClosed = true;
    };
    View_XXPTW_Base.prototype.onEnable = function () {
        this.add_XXPTW_Event();
    };
    View_XXPTW_Base.prototype.onDisable = function () {
        this.remove_XXPTW_Event();
    };
    View_XXPTW_Base.prototype.onDestroy = function () {
        this.remove_XXPTW_Event();
    };
    View_XXPTW_Base.prototype.open_XXPTW_View = function (data) {
        this._data = data;
        this.show_XXPTW_();
        EventMgr_1.default.ins_XXPTW_tance.dis_XXPTW_patch(EventDef_1.Event_XXPTW_Def.Game_On_XXPTW_View_XXPTW_Open, { view: this._viewDef });
        if (this.on_XXPTW_OpenEvent) {
            this.on_XXPTW_OpenEvent();
        }
    };
    View_XXPTW_Base.prototype.add_XXPTW_Event = function () {
    };
    View_XXPTW_Base.prototype.remove_XXPTW_Event = function () {
        Laya.timer.clearAll(this);
    };
    View_XXPTW_Base.prototype.close_XXPTW_View = function () {
        ViewMgr_1.default.ins_XXPTW_tance.close_XXPTW_View(this._viewDef);
    };
    View_XXPTW_Base.prototype.hide_XXPTW_ = function () {
        var _this = this;
        this.View_XXPTW_.visible = false;
        this.onHide();
        Utilit_1.default.for_XXPTW_Each_XXPTW_Child(this.owner, function (child) {
            var coms = child._components;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (IViewStateListener_1.isIViewStateListener(element)) {
                        element.onViewHide(_this);
                    }
                }
            }
        });
    };
    View_XXPTW_Base.prototype.show_XXPTW_ = function () {
        var _this = this;
        this.View_XXPTW_.visible = true;
        this.onShow();
        Utilit_1.default.for_XXPTW_Each_XXPTW_Child(this.owner, function (child) {
            var coms = child._components;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (IViewStateListener_1.isIViewStateListener(element)) {
                        element.onViewShow(_this);
                    }
                }
            }
        });
    };
    View_XXPTW_Base.prototype.view_XXPTW_IsHide = function () {
        return this.View_XXPTW_.visible;
    };
    View_XXPTW_Base.prototype.onHide = function () { };
    View_XXPTW_Base.prototype.onShow = function () { };
    View_XXPTW_Base.prototype.onClose = function () {
        Laya.timer.clearAll(this);
        Laya.Tween.clearAll(this);
        EventMgr_1.default.ins_XXPTW_tance.dis_XXPTW_patch(EventDef_1.Event_XXPTW_Def.Game_On_XXPTW_View_XXPTW_Close, { view: this._viewDef });
        if (this.on_XXPTW_CloseEvent) {
            this.on_XXPTW_CloseEvent();
        }
    };
    return View_XXPTW_Base;
}(Laya.Script));
exports.default = View_XXPTW_Base;
},{"../Event/EventDef":6,"../Event/EventMgr":7,"../Mgr/ViewMgr":31,"../Utilit":46,"./IViewStateListener":50}],78:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var WX_XXPTW_API = /** @class */ (function () {
    function WX_XXPTW_API() {
    }
    WX_XXPTW_API._XXPTW_wxLogin_XXPTW_ = function (onSuccess, onFail) {
        if (Laya.Browser.onMiniGame) {
            Laya.Browser.window.wx.login({
                success: function (res) {
                    if (res.code) {
                        var code = res.code;
                        onSuccess(code);
                        console.log("登陆成功,获取到code : " + code);
                    }
                }
            });
        }
    };
    WX_XXPTW_API.on_XXPTW_Rewarded_XXPTW_VideoAdLoad = function () {
        console.log('激励视频 广告加载完成');
    };
    WX_XXPTW_API.onRewarded_XXPTW_Video_XXPTW_AdError = function (err) {
        console.log('激励视频 广告加载失败' + err);
        if (WX_XXPTW_API._on_XXPTW_Rewarded_XXPTW_VideoAd_XXPTW_Failed) {
            WX_XXPTW_API._on_XXPTW_Rewarded_XXPTW_VideoAd_XXPTW_Failed();
        }
    };
    WX_XXPTW_API.on_XXPTW_Rewarded_XXPTW_VideoAd_XXPTW_Close = function (res) {
        if ((res && res.isEnded) || res == null) {
            console.log('激励视频 已完整观看');
            if (WX_XXPTW_API._on_XXPTW_Rewarded_XXPTW_VideoAd_XXPTW_Close) {
                WX_XXPTW_API._on_XXPTW_Rewarded_XXPTW_VideoAd_XXPTW_Close(true);
            }
        }
        else {
            console.log('激励视频 未完整观看');
            if (WX_XXPTW_API._on_XXPTW_Rewarded_XXPTW_VideoAd_XXPTW_Close) {
                WX_XXPTW_API._on_XXPTW_Rewarded_XXPTW_VideoAd_XXPTW_Close(false);
            }
        }
    };
    WX_XXPTW_API.reg_XXPTW_Rewarded_XXPTW_VideoAd_XXPTW_Event = function (rewardedVideoAd) {
        rewardedVideoAd.onLoad(WX_XXPTW_API.on_XXPTW_Rewarded_XXPTW_VideoAdLoad);
        rewardedVideoAd.onError(WX_XXPTW_API.onRewarded_XXPTW_Video_XXPTW_AdError);
        rewardedVideoAd.onClose(WX_XXPTW_API.on_XXPTW_Rewarded_XXPTW_VideoAd_XXPTW_Close);
        WX_XXPTW_API._isReg_XXPTW_Rewarded_XXPTW_VideoAd_XXPTW_Event = true;
    };
    WX_XXPTW_API.show_XXPTW_Rewarded_XXPTW_VideoAd = function (onAdClose, onFailed) {
        if (Laya.Browser.onMiniGame) {
            WX_XXPTW_API._on_XXPTW_Rewarded_XXPTW_VideoAd_XXPTW_Close = onAdClose;
            WX_XXPTW_API._on_XXPTW_Rewarded_XXPTW_VideoAd_XXPTW_Failed = onFailed;
            var rewardedVideoAd = Laya.Browser.window["wx"].createRewardedVideoAd({
                adUnitId: WX_XXPTW_API.ad_XXPTW_UnitId,
            });
            if (!WX_XXPTW_API._isReg_XXPTW_Rewarded_XXPTW_VideoAd_XXPTW_Event) {
                WX_XXPTW_API.reg_XXPTW_Rewarded_XXPTW_VideoAd_XXPTW_Event(rewardedVideoAd);
            }
            rewardedVideoAd.load().then(function () {
                var promise = rewardedVideoAd.show();
                promise.then(function () { return console.log('激励视频 广告显示成功'); });
                promise.catch(function (err) {
                    rewardedVideoAd.load()
                        .then(function () { return rewardedVideoAd.show(); })
                        .catch(function (err) {
                        console.log('激励视频 广告显示失败');
                        if (onFailed) {
                            onFailed();
                        }
                    });
                });
            }).catch(function (err) {
                console.log('激励视频 广告加载失败');
                if (onFailed) {
                    onFailed();
                }
            });
        }
        else {
            onAdClose(true);
        }
    };
    //----------------------------------------------------------------
    //-------------------------小游戏跳转---------------------------
    WX_XXPTW_API.navigate_XXPTW_To_XXPTW_MiniProgram = function (appId, path, onSuccess, onFail, onComplate) {
        if (Laya.Browser.onMiniGame) {
            console.log("跳转游戏： " + appId);
            Laya.Browser.window["wx"].navigateToMiniProgram({
                appId: appId,
                path: path,
                extraData: {
                    foo: 'bar'
                },
                envVersion: 'release',
                success: function (res) {
                    if (onSuccess) {
                        onSuccess(res);
                    }
                },
                fail: function (res) {
                    if (onFail) {
                        onFail(res);
                    }
                },
                complete: function (res) {
                    if (onComplate) {
                        onComplate(res);
                    }
                }
            });
        }
    };
    WX_XXPTW_API.share_XXPTW_ = function (complate, titel, imageUrl) {
        var _this = this;
        if (Laya.Browser.onMiniGame) {
            WX_XXPTW_API._onShow = function () {
                Laya.Browser.window["wx"].offShow(WX_XXPTW_API._onShow);
                WX_XXPTW_API._onShow = null;
                var c = Date.now() - _this._lastShareTime;
                if (complate) {
                    if (Date.now() - _this._lastShareTime > 2000) {
                        complate(true);
                    }
                    else {
                        complate(false);
                    }
                }
            };
            Laya.Browser.window["wx"].onShow(WX_XXPTW_API._onShow);
            WX_XXPTW_API._lastShareTime = Date.now();
            Laya.Browser.window["wx"].shareAppMessage({
                title: titel,
                imageUrl: imageUrl
            });
        }
    };
    //----------------------------------------------------------------------
    //--------------------插屏幕广告---------------------------------------
    WX_XXPTW_API.show_XXPTW_Interstitial_XXPTW_Ad = function (onAdClose, onFailed) {
        if (Laya.Browser.onMiniGame) {
            var interstitialAd = Laya.Browser.window["wx"].createInterstitialAd({
                adUnitId: WX_XXPTW_API.Ins_XXPTW_AdUnitId,
            });
            interstitialAd.onLoad(function () {
                console.log('插屏广告 加载完成');
                interstitialAd.show().catch(function (err) {
                    console.log('插屏广告 显示失败 ：' + err);
                    if (onFailed) {
                        onFailed();
                    }
                });
            });
            interstitialAd.onError(function (err) {
                console.log('插屏广告 加载失败' + err);
                if (onFailed) {
                    onFailed();
                }
            });
            interstitialAd.onClose(function () {
                console.log('插屏广告 关闭');
                if (onAdClose) {
                    onAdClose();
                }
            });
        }
        else {
            onAdClose();
        }
    };
    /**
     * 得到小程序启动参数的同步方法，可得到一个Object返回值，返回值具体的数据结构在下面的列表中
     * scene	number	启动小游戏的场景值
     * query	Object	启动小游戏的 query 参数
     * shareTicket	string	shareTicket，详见获取更多转发信息
     * referrerInfo	object	来源信息。从另一个小程序、公众号或 App 进入小程序时返回。否则返回 {}
     * https://developers.weixin.qq.com/minigame/dev/api/base/app/life-cycle/wx.getLaunchOptionsSync.html
     * @static
     * @returns {LaunchOptions}
     * @memberof WXAPI
     */
    WX_XXPTW_API.get_XXPTW_Launch_XXPTW_Options_XXPTW_Sync = function () {
        // let result = { scene: 0, query: null, shareTicket: "", referrerInfo: null };
        if (Laya.Browser.onMiniGame) {
            var obj_1 = Laya.Browser.window["wx"].getLaunchOptionsSync();
            console.log("场景值 " + obj_1.scene);
            var str = JSON.stringify(obj_1.query);
            console.log("Query参数 " + str);
            var key = obj_1.query["key"];
            console.log("Query参数：key " + key);
            console.log("ShareTicket " + obj_1.shareTicket);
            console.log("ReferrerInfo.appId " + obj_1.referrerInfo.appId);
            console.log("ReferrerInfo.extraData " + obj_1.referrerInfo.extraData);
            return obj_1;
        }
        var obj = { scene: 1001, query: "", shareTicket: "", appId: "", extraData: "" };
        return obj;
    };
    //----------------------------------------------------------------------
    /**
     * 打开微信左上角分享转发点击事件,在游戏逻辑中调用一次即可
     * 注意此方法只会在真机上执行，在微信模拟器环境下点击转发按钮什么都不会发生
     *
     * @static
     * @param {string} titel 分享标题
     * @param {string} imageUrl 分享图片地址
     * @param {Function} [success] 成功回调函数(可不填)
     * @param {Function} [fail] 失败回调函数(可不填)
     * @param {Function} [complate] 完成回调函数，成功失败都会执行(可不填)
     * @memberof WXAPI
     */
    WX_XXPTW_API.Set_XXPTW_Share_XXPTW_Menu = function (titel, imageUrl, success, fail, complate) {
        if (Laya.Browser.onMiniGame) {
            console.log("小游戏设置转发按钮");
            Laya.Browser.window["wx"].showShareMenu({
                withShareTicket: false,
                success: success,
                fail: fail,
                complete: complate
            });
            Laya.Browser.window["wx"].onShareAppMessage(function () {
                return {
                    title: titel,
                    imageUrl: imageUrl
                };
            });
        }
    };
    //检测更新
    WX_XXPTW_API.check_XXPTW_Update = function () {
        if (Laya.Browser.onMiniGame) {
            var updateManager = Laya.Browser.window["wx"].getUpdateManager();
            updateManager.onCheckForUpdate(function (res) {
                console.log("是否需要更新 : ", res.hasUpdate);
            });
            updateManager.onUpdateReady(function () {
                Laya.Browser.window["wx"].showModal({
                    title: '更新提示',
                    content: '新版本已经准备好，是否重启小游戏？',
                    success: function (res) {
                        if (res.confirm) {
                            updateManager.applyUpdate();
                        }
                    }
                });
            });
            updateManager.onUpdateFailed(function () {
                console.log("新版本下载失败!!!");
            });
        }
    };
    WX_XXPTW_API.ad_XXPTW_UnitId = "adunit-b2087adbc5b03528";
    WX_XXPTW_API.banner_XXPTW_AdUnitId = "adunit-86a5e986bd2ae993";
    WX_XXPTW_API.Ins_XXPTW_AdUnitId = "adunit-b9f09f49d09df416";
    //-------------------------激励视频---------------------------------
    WX_XXPTW_API._isReg_XXPTW_Rewarded_XXPTW_VideoAd_XXPTW_Event = false;
    WX_XXPTW_API._on_XXPTW_Rewarded_XXPTW_VideoAd_XXPTW_Failed = null;
    WX_XXPTW_API._on_XXPTW_Rewarded_XXPTW_VideoAd_XXPTW_Close = null;
    //----------------------------------------------------------------------
    //---------------------分享----------------------------------------
    WX_XXPTW_API._onShow = null;
    WX_XXPTW_API._lastShareTime = 0;
    return WX_XXPTW_API;
}());
exports.default = WX_XXPTW_API;
},{}],79:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var scene3dSocket_1 = require("./hub/scene3dSocket");
var gameData_1 = require("./data/gameData");
var indexView_1 = require("./view/indexView");
/**通用加载Unity生成的3D场景的脚本 */
var appRun = /** @class */ (function (_super) {
    __extends(appRun, _super);
    function appRun() {
        return _super.call(this) || this;
    }
    Object.defineProperty(appRun, "Instance", {
        get: function () {
            return new appRun();
        },
        enumerable: true,
        configurable: true
    });
    /**加载场景并绑定脚本，再把场景添加到舞台上
     * @param cb 回调
     */
    appRun.prototype.init = function (cb) {
        this.createScene(function (scene) {
            console.log("ljc", "添加脚本到场景");
            scene.addComponent(scene3dSocket_1.default);
            Laya.stage.addChildAt(scene, 0);
            cb & cb();
            gameData_1.default.isSceneLoadedSuc = true;
            if (Laya.Browser.onMiniGame) {
                wx.hideToast();
                indexView_1.default.Instance.refreshList();
            }
        });
    };
    appRun.prototype.createScene = function (compete) {
        var url = "subRes/scene3d/LayaScene_23/Conventional/23.ls";
        Laya.Scene3D.load(url, Laya.Handler.create(this, function (scene) {
            console.log("ljc", "加载场景成功");
            // if(Laya.Browser.onMiniGame){
            //     wx.hideToast()
            // }
            compete & compete(scene);
        }));
    };
    appRun._instance = null;
    return appRun;
}(Laya.Script3D));
exports.default = appRun;
},{"./data/gameData":80,"./hub/scene3dSocket":83,"./view/indexView":86}],80:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var levelConfig_1 = require("./levelConfig");
/**可拖动拼图物体的信息 */
var SeletObjInfo = /** @class */ (function () {
    function SeletObjInfo() {
        /**物体名字 */
        this.objName = "";
        //之所以都用了全局、局部位置，是因为可移动拼图块和目标点拼图块不是同一个父节点，
        //而Tween动画又不支持变换全局position，只能通过变换localPosition的话，就需要自己计算得到
        /**目标点位置 */
        this.targetPos = Laya.Vector3._ZERO;
        /**目标点局部位置 */
        this.targetLocalPos = Laya.Vector3._ZERO;
        /**自身位置 */
        this.selfPos = Laya.Vector3._ZERO;
        /**自身局部位置 */
        this.selfLocalPos = Laya.Vector3._ZERO;
        /**补齐空缺之后的自身位置 */
        this.sortSelfPos = Laya.Vector3._ZERO;
        /**目标点材质 */
        this.targetMat = new Laya.BaseMaterial();
        /**自身材质 */
        this.selfMat = new Laya.BaseMaterial();
        /**目标点自身材质 */
        this.targetSelfMat = new Laya.BaseMaterial();
        /**是否已Tween动画归位（用于判断拼图是否可拖动） */
        this.isHoming = false;
    }
    return SeletObjInfo;
}());
exports.SeletObjInfo = SeletObjInfo;
/**游戏数据 */
var gameData = /** @class */ (function () {
    function gameData() {
    }
    Object.defineProperty(gameData, "Instance", {
        get: function () {
            if (!gameData._instance) {
                gameData._instance = new gameData();
            }
            return gameData._instance;
        },
        enumerable: true,
        configurable: true
    });
    /**获取关卡配置数据 */
    gameData.prototype.getLevelConfig = function () {
        return levelConfig_1.default;
    };
    gameData._instance = null;
    /**点击了第一块拼图 */
    gameData.isClickFirstPuzzle = false;
    /**点击了提示视频按钮 */
    gameData.isClickVideoBtn = true;
    //为了3D场景屏幕适配（用于调整3D场景摄像机的fieldOfView参数）
    /**unity里基准场景分辨率的宽高比 */
    gameData.aspectRatio1 = 750 / 1334;
    /**实际游戏设备分辨率的宽高比 */
    gameData.aspectRatio2 = Laya.Browser.width / Laya.Browser.height;
    /**拖动拼图的移动速度 */
    gameData.puzzleDragingSpeed = 2.6 - 1.2;
    /**拼图归位相对距离 */
    gameData.matchDis = 1.22 + 1;
    /**拼图开始改变颜色相对距离 */
    gameData.changeColorDis = 1.8 + 1;
    /**摆动提示视频按钮时间间隔（单位：毫秒） */
    gameData.tipEffectTime = 5000;
    return gameData;
}());
exports.default = gameData;
},{"./levelConfig":81}],81:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = {
    data: [
        { level: 1 },
        { level: 2 },
        { level: 3 },
        { level: 4 },
        { level: 5 },
        { level: 6 },
        { level: 7 },
        { level: 8 },
        { level: 9 },
        { level: 10 },
        { level: 11 },
        { level: 12 },
        { level: 13 },
        { level: 14 },
        { level: 15 },
        { level: 16 },
        { level: 17 },
        { level: 18 },
        { level: 19 },
        { level: 20 },
        { level: 21 },
        { level: 22 },
        { level: 23 },
        { level: 24 },
        { level: 25 },
        { level: 26 },
        { level: 27 },
        { level: 28 },
        { level: 29 },
        { level: 30 },
        { level: 1 },
        { level: 2 },
        { level: 3 },
        { level: 4 },
        { level: 5 },
        { level: 6 },
        { level: 7 },
        { level: 8 },
        { level: 9 },
        { level: 10 },
        { level: 11 },
        { level: 12 },
        { level: 13 },
        { level: 14 },
        { level: 15 },
        { level: 16 },
        { level: 17 },
        { level: 18 },
        { level: 19 },
        { level: 20 },
        { level: 21 },
        { level: 22 },
        { level: 23 },
        { level: 24 },
        { level: 25 },
        { level: 26 },
        { level: 27 },
        { level: 28 },
        { level: 29 },
        { level: 30 },
        { level: 1 },
        { level: 2 },
        { level: 3 },
        { level: 4 },
        { level: 5 },
        { level: 6 },
        { level: 7 },
        { level: 8 },
        { level: 9 },
        { level: 10 },
        { level: 11 },
        { level: 12 },
        { level: 13 },
        { level: 14 },
        { level: 15 },
        { level: 16 },
        { level: 17 },
        { level: 18 },
        { level: 19 },
        { level: 20 },
        { level: 21 },
        { level: 22 },
        { level: 23 },
        { level: 24 },
        { level: 25 },
        { level: 26 },
        { level: 27 },
        { level: 28 },
        { level: 29 },
        { level: 30 },
        { level: 1 },
        { level: 2 },
        { level: 3 },
        { level: 4 },
        { level: 5 },
        { level: 6 },
        { level: 7 },
        { level: 8 },
        { level: 9 },
        { level: 10 },
        { level: 11 },
        { level: 12 },
        { level: 13 },
        { level: 14 },
        { level: 15 },
        { level: 16 },
        { level: 17 },
        { level: 18 },
        { level: 19 },
        { level: 20 },
        { level: 21 },
        { level: 22 },
        { level: 23 },
        { level: 24 },
        { level: 25 },
        { level: 26 },
        { level: 27 },
        { level: 28 },
        { level: 29 },
        { level: 30 },
    ],
};
},{}],82:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var scene3dSocket_1 = require("./scene3dSocket");
var User_1 = require("../../User/User");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var gameData_1 = require("../data/gameData");
var SoundMgr_1 = require("../../Mgr/SoundMgr");
var GameMgr_1 = require("../../Mgr/GameMgr");
var VibrateMgr_1 = require("../../Mgr/VibrateMgr");
/**游戏控制器 */
var gameCtrl = /** @class */ (function (_super) {
    __extends(gameCtrl, _super);
    function gameCtrl() {
        var _this = _super.call(this) || this;
        /**实际当前关卡 */
        _this.curLevelValue = 0;
        _this.curLevelValue2 = 0;
        /**可移动拼图总节点位置 */
        _this.puzzleNodeLocalPos = Laya.Vector3._ZERO;
        /**可移动拼图总节点跟目标拼图总节点的局部相对3d距离 */
        _this.localDisOfTwoPuzzlesNode = Laya.Vector3._ZERO;
        /**存储所有物体的信息 */
        _this.allSelectObjInfoArray = [];
        /**射线（必须初始化） */
        _this.ray = new Laya.Ray(new Laya.Vector3(0, 0, 0), new Laya.Vector3(0, 0, 0));
        /**屏幕点，通过摄像机到这点以生成射线 */
        _this.point = new Laya.Vector2();
        /**射线击中物体返回的结果 */
        _this.outHitResult = new Laya.HitResult();
        /**正在拖动的拼图偏移的距离,偏移是为了展示3D效果且防止重叠 */
        _this.dragingPuzzleOffset = new Laya.Vector3(0, 0.5, 3);
        /**可拖动拼图初始材质 */
        _this.initMat = new Laya.BlinnPhongMaterial();
        /**Tween动画锁（到目标） */
        _this.isLockTweenToTarget = true;
        /**Tween动画锁（回初始位） */
        _this.isLockTweenToStart = false;
        _this.isLockTweenToTarget2 = false;
        return _this;
    }
    Object.defineProperty(gameCtrl, "Instance", {
        get: function () {
            if (!gameCtrl._instance) {
                gameCtrl._instance = new gameCtrl();
            }
            return gameCtrl._instance;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(gameCtrl.prototype, "CurLevelValue", {
        get: function () {
            return this.curLevelValue;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(gameCtrl.prototype, "CurLevelValue2", {
        get: function () {
            return this.curLevelValue2;
        },
        enumerable: true,
        configurable: true
    });
    /**初始化关卡（不传参默认初始化当前关）
     * @param level 关卡数
     */
    gameCtrl.prototype.initLevel = function (level) {
        if (level === void 0) { level = null; }
        this.initMat.albedoColor = new Laya.Vector4(1, 1, 1, 1);
        this.puzzleNumCanMove = 0;
        this.puzzleTweenToTargetNum = 0;
        //实际当前关卡
        if (null == level) {
            this.curLevelValue = User_1.default.get_XXPTW_LeveNum() - 1;
        }
        else {
            this.curLevelValue = level - 1;
        }
        //超出所配置的最大关卡则重新开始循环
        var levelConfig = gameData_1.default.Instance.getLevelConfig();
        this.curLevelValue = (this.curLevelValue + 1) % levelConfig.data.length;
        if (this.curLevelValue == 0) {
            this.curLevelValue = levelConfig.data.length;
        }
        this.curLevelValue = this.curLevelValue - 1;
        this.curLevel = levelConfig.data[this.curLevelValue].level - 1;
        console.log("ljc", "初始化关卡", this.curLevel);
        /**关卡总节点 */
        var levelNode = scene3dSocket_1.default.Instance.LevelNode;
        for (var i = 0; i < levelNode.numChildren; i++) {
            /**关卡节点 */
            var level_1 = levelNode.getChildAt(i);
            /**可移动拼图总节点 */
            var puzzles = level_1.getChildAt(2);
            /**目标拼图总节点 */
            var targetPuzzles = level_1.getChildAt(0);
            this.localDisOfTwoPuzzlesNode.x = puzzles.transform.localPositionX - targetPuzzles.transform.localPositionX;
            this.localDisOfTwoPuzzlesNode.y = puzzles.transform.localPositionY - targetPuzzles.transform.localPositionY;
            this.localDisOfTwoPuzzlesNode.z = puzzles.transform.localPositionZ - targetPuzzles.transform.localPositionZ;
            this.allSelectObjInfoArray[i] = {};
            /**累计偏移量，用于初始横排列可移动拼图块 */
            var addedOffset = 0;
            for (var j = 0; j < puzzles.numChildren; j++) {
                /**目标拼图 */
                var puzzle1 = targetPuzzles.getChildAt(j);
                /**可移动拼图 */
                var puzzle2 = puzzles.getChildAt(j);
                //移除原先加上的meshCollider，换成boxCollider，为了容易点击到些
                var puzzleCollider2 = puzzle2.getComponent(Laya.PhysicsCollider);
                if (puzzleCollider2 && !(puzzleCollider2.colliderShape instanceof Laya.BoxColliderShape)) {
                    console.log("ljc", "删除meshCollider，添加boxCollider");
                    puzzle2._destroyComponent(puzzleCollider2);
                    puzzleCollider2 = puzzle2.addComponent(Laya.PhysicsCollider);
                    var puzzleColliderShape2 = puzzleCollider2.colliderShape = new Laya.BoxColliderShape(puzzle2.meshFilter.sharedMesh.bounds.getExtent().x * 2, puzzle2.meshFilter.sharedMesh.bounds.getExtent().y * 2, puzzle2.meshFilter.sharedMesh.bounds.getExtent().z * 2);
                    puzzleColliderShape2.localOffset = new Laya.Vector3(puzzle2.meshFilter.sharedMesh.bounds.getCenter().x, puzzle2.meshFilter.sharedMesh.bounds.getCenter().y, puzzle2.meshFilter.sharedMesh.bounds.getCenter().z);
                    //设置可移动拼图所属碰撞组，用于后面的射线检测筛选专属碰撞组(2020)
                    puzzleCollider2.collisionGroup = 2020; //今年是2020年，那就用2020了
                }
                else if (!puzzleCollider2) {
                    console.log("ljc", "没有Collider，添加boxCollider");
                    puzzleCollider2 = puzzle2.addComponent(Laya.PhysicsCollider);
                    var puzzleColliderShape2 = puzzleCollider2.colliderShape = new Laya.BoxColliderShape(puzzle2.meshFilter.sharedMesh.bounds.getExtent().x * 2, puzzle2.meshFilter.sharedMesh.bounds.getExtent().y * 2, puzzle2.meshFilter.sharedMesh.bounds.getExtent().z * 2);
                    puzzleColliderShape2.localOffset = new Laya.Vector3(puzzle2.meshFilter.sharedMesh.bounds.getCenter().x, puzzle2.meshFilter.sharedMesh.bounds.getCenter().y, puzzle2.meshFilter.sharedMesh.bounds.getCenter().z);
                    //设置可移动拼图所属碰撞组，用于后面的射线检测筛选专属碰撞组(2020)
                    puzzleCollider2.collisionGroup = 2020; //今年是2020年，那就用2020了
                }
                var rowData = new gameData_1.SeletObjInfo();
                rowData.obj = puzzle2;
                rowData.boundOfX = (puzzle2.meshFilter.sharedMesh.bounds.getExtent().x * 2) * puzzle2.transform.localScaleX;
                rowData.objName = puzzle2.name;
                rowData.targetLocalPos = puzzle1.transform.localPosition.clone();
                rowData.targetLocalPos.x -= this.localDisOfTwoPuzzlesNode.x; //laya里面x轴是和unity相反的，好好想想，确实是减
                if (i == 19) {
                    // rowData.targetLocalPos.y += this.localDisOfTwoPuzzlesNode.y
                    rowData.targetLocalPos.y += 0.7;
                }
                // rowData.targetLocalPos.y += this.localDisOfTwoPuzzlesNode.y
                rowData.targetLocalPos.z -= this.localDisOfTwoPuzzlesNode.z;
                rowData.targetPos = puzzle1.transform.position.clone();
                rowData.targetMat = puzzle2.meshRenderer.sharedMaterial.clone();
                rowData.targetSelfMat = puzzle1.meshRenderer.sharedMaterial.clone();
                rowData.selfLocalPos = puzzle2.transform.localPosition.clone();
                rowData.selfPos = puzzle2.transform.position.clone();
                rowData.sortSelfPos = puzzle2.transform.localPosition.clone();
                rowData.selfMat = this.initMat;
                rowData.isHoming = false;
                rowData.targetObj = puzzle1;
                this.allSelectObjInfoArray[i][rowData.objName] = rowData;
                //设置初始材质（有点绕，美术把归位目标材质直接放在了初始的可拖动拼图块上，但是初始化又需要设置为单色，所以先获取“目标”材质，再设置单色）
                puzzle2.meshRenderer.sharedMaterial = this.initMat;
            }
            //如果不是当前关卡，隐藏此关卡
            if (i == this.curLevel) {
                level_1.active = true;
                this.puzzleNode = puzzles;
                this.puzzleNodeLocalPos = this.puzzleNode.transform.localPosition.clone();
            }
            else {
                level_1.active = false;
            }
        }
        console.log("ljc", "所有可选择拼图物体的信息", this.allSelectObjInfoArray);
        for (var e in this.allSelectObjInfoArray[this.curLevel]) {
            this.puzzleNumCanMove++;
        }
    };
    /**射线检测 */
    gameCtrl.prototype.rayTest = function () {
        this.point.x = Laya.MouseManager.instance.mouseX;
        this.point.y = Laya.MouseManager.instance.mouseY;
        //产生射线
        scene3dSocket_1.default.Instance.Camera.viewportPointToRay(this.point, this.ray);
        //拿到射线碰撞的物体
        scene3dSocket_1.default.Instance.Scene.physicsSimulation.rayCast(this.ray, this.outHitResult, 100, 2020, 2020);
        //如果碰撞到物体
        if (this.outHitResult.succeeded) {
            if (this.allSelectObjInfoArray[this.curLevel][this.outHitResult.collider.owner.name].isHoming) {
                this.hasSelectedSprite = null;
                return;
            }
            if (this.isLockTweenToStart) {
                return;
            }
            if (this.isLockTweenToTarget2) {
                return;
            }
            console.log("ljc", "点击到了" + this.outHitResult.collider.owner.name);
            SoundMgr_1.default.ins_XXPTW_tance.play_XXPTW_Sound("拖动点击");
            VibrateMgr_1.default.vibrate_XXPTW_Short();
            gameData_1.default.isClickFirstPuzzle = true;
            this.hasSelectedSprite = this.outHitResult.collider.owner;
            //正在拖动的拼图的位置做一下偏移，为了展示3D效果且防止重叠
            var x = this.hasSelectedSprite.transform.position.x + this.dragingPuzzleOffset.x;
            var y = this.hasSelectedSprite.transform.position.y + this.dragingPuzzleOffset.y;
            var z = this.hasSelectedSprite.transform.position.z + this.dragingPuzzleOffset.z;
            this.hasSelectedSprite.transform.position = new Laya.Vector3(x, y, z);
        }
    };
    /**移动射线碰撞到的物体
     * @param dir 移动的距离
     */
    gameCtrl.prototype.moveHitResultObj = function (dir) {
        if (this.outHitResult.succeeded) {
            if (this.hasSelectedSprite) {
                if (!this.isCloseEnoughWithTarget()) {
                    if (!this.isLockTweenToStart) {
                        if (this.isLockTweenToTarget2) {
                            return;
                        }
                        this.hasSelectedSprite.transform.translate(dir, true);
                    }
                }
            }
        }
    };
    /**检测射线碰撞上的物体的位置和它目标位置是否足够接近（不同接近程度改变不同颜色），如果是，附加：物体做Tween动画向目标点移动过去 */
    gameCtrl.prototype.isCloseEnoughWithTarget = function () {
        if (this.hasSelectedSprite) {
            /**选中物体的位置 */
            var selectObjPos = this.hasSelectedSprite.transform.position.clone();
            /**选中物体的名字 */
            var selectObjName = this.hasSelectedSprite.name;
            /**当前选中拼图的数据结构 */
            var curSeletObjInfo = this.allSelectObjInfoArray[this.curLevel][selectObjName];
            /**选中物体的目标位置 */
            var targetPos = curSeletObjInfo.targetPos;
            /**选中物体的目标局部位置 */
            var targetLocalPos = curSeletObjInfo.targetLocalPos;
            /**选中物体是否归位 */
            var isObjHoming = curSeletObjInfo.isHoming;
            /**选中物体的目标材质 */
            var targetMat = curSeletObjInfo.targetMat;
            /**选中物体的自身材质 */
            var selfMat = curSeletObjInfo.selfMat;
            /**选中物体与目标点的相对位置 */
            var dis = Laya.Vector3.distance(selectObjPos, targetPos);
            // console.log(dis)
            if (dis < gameData_1.default.matchDis) {
                if (!isObjHoming) {
                    curSeletObjInfo.isHoming = true;
                    this.isLockTweenToTarget = false;
                    // this.sortPuzzleCanMove()
                    // console.log("ljc", "改变拼图材质",targetMat)
                    this.hasSelectedSprite.meshRenderer.sharedMaterial = targetMat;
                    // console.log("ljc","改变后的材质",this.hasSelectedSprite.meshRenderer.sharedMaterial)
                    // this.tweenToTarget()
                    gameData_1.default.isClickVideoBtn = true;
                }
                // return true
                //应策划要求，取消变色功能
                // } else if (dis < gameData.changeColorDis) {
                //     curSeletObjInfo.isHoming = false
                //     this.albeboIntansityChangeMat = targetMat.clone()
                //     this.albeboIntansityChangeMat.albedoIntensity = 1.3//手动调的比较好的参数
                //     // console.log("ljc","开始改变材质",this.albeboIntansityChangeMat)
                //     this.hasSelectedSprite.meshRenderer.sharedMaterial = this.albeboIntansityChangeMat
            }
            else {
                curSeletObjInfo.isHoming = false;
                this.hasSelectedSprite.meshRenderer.sharedMaterial = selfMat;
            }
        }
        return false;
    };
    /**尝试物体做Tween动画向目标点移动过去 */
    gameCtrl.prototype.tweenToTarget = function () {
        var _this = this;
        var curLevelSelectObjInfo = this.hasSelectedSprite && this.allSelectObjInfoArray[this.curLevel][this.hasSelectedSprite.name];
        if (null == this.hasSelectedSprite ||
            (curLevelSelectObjInfo && false == curLevelSelectObjInfo.isHoming) ||
            true == this.isLockTweenToTarget) {
            return;
        }
        this.isLockTweenToTarget = true;
        this.isLockTweenToTarget2 = true;
        console.log("ljc", "播放音频", "正确放置");
        SoundMgr_1.default.ins_XXPTW_tance.play_XXPTW_Sound("正确放置");
        this.sortPuzzleCanMove();
        var obj = this.hasSelectedSprite;
        var targetPos = this.allSelectObjInfoArray[this.curLevel][obj.name].targetLocalPos;
        Laya.Tween.to(obj.transform, { localPositionX: targetPos.x, localPositionY: targetPos.y, localPositionZ: targetPos.z }, 300, Laya.Ease.cubicInOut, Laya.Handler.create(this, function () {
            console.log("ljc", "做Tween动画向目标点移动过去", "完成");
            _this.isLockTweenToTarget2 = false;
            _this.hasSelectedSprite = null;
            _this.puzzleTweenToTargetNum++;
            console.log("ljc", _this.puzzleNumCanMove, _this.puzzleTweenToTargetNum);
            if ((_this.puzzleNumCanMove == _this.puzzleTweenToTargetNum) && _this.isSuccess()) {
                _this.tweenCompete();
            }
        }));
    };
    /**拼图完成，整体拼图做Tween动画稍稍往上移动 */
    gameCtrl.prototype.tweenCompete = function () {
        this.onOrOffFX(true);
        console.log("ljc", "播放音频", "win");
        SoundMgr_1.default.ins_XXPTW_tance.play_XXPTW_Sound("win");
        Laya.Tween.to(this.puzzleNode.transform, { localPositionX: this.puzzleNodeLocalPos.x, localPositionY: this.puzzleNodeLocalPos.y + 0.7, localPositionZ: this.puzzleNodeLocalPos.z }, 800, Laya.Ease.linearIn, Laya.Handler.create(this, function () {
            console.log("ljc", "拼图完成，整体拼图做Tween动画稍稍往上移动", "完成");
            // //隐藏灰底板
            // scene3dSocket.Instance.Plane.active = false
            // //白底板-大，上移补平拼图缺口
            // scene3dSocket.Instance.Plane2.transform.localPositionY = 2
            // //转圈-方案1
            // let offset = 0.3
            // for(let i=0;i<60;i++){
            //     let offsetX = offset*Math.cos(i*6)
            //     let offsetZ = offset*Math.sin(i*6)
            //     Laya.Tween.to(this.puzzleNode.transform, { localPositionX: this.puzzleNodeLocalPos.x+offsetX, localPositionZ: this.puzzleNodeLocalPos.z+offsetZ },
            //         40,Laya.Ease.linearIn,Laya.Handler.create(this,()=>{
            //         }),i*40)
            // }
            // Laya.Tween.to(this.puzzleNode.transform, { localPositionX: this.puzzleNodeLocalPos.x, localPositionZ: this.puzzleNodeLocalPos.z },
            //     100,Laya.Ease.linearIn,Laya.Handler.create(this,()=>{
            //         this.onOrOffFX(false)
            //     }),2400)
            // //转圈-方案2-废弃（美术给的中心点有的模型在外边）
            // Laya.Tween.to(this.puzzleNode.transform, { localRotationEulerY:-360 },
            //     2000,Laya.Ease.linearIn,Laya.Handler.create(this,()=>{
            //         this.onOrOffFX(false)
            //     }))
            User_1.default.set_XXPTW_LeveNum(User_1.default.get_XXPTW_LeveNum() + 1);
            setTimeout(function () {
                ViewMgr_1.default.ins_XXPTW_tance.open_XXPTW_View(ViewMgr_1.View_XXPTW_Def.indexView, null, function () {
                    gameCtrl.Instance.toNextLevel();
                    // this.onOrOffFX(false)
                    // this.initLevel()
                    // this.resetPuzzleCanMovePos()
                    // Game_XXPTW_Mgr.get_XXPTW_Instance().save_XXPTW_Game_XXPTW_Data()
                });
                // View_XXPTW_Mgr.ins_XXPTW_tance.open_XXPTW_View(View_XXPTW_Def.endView, null, () => {
                //     this.onOrOffFX(false)
                //     View_XXPTW_Mgr.ins_XXPTW_tance.close_XXPTW_View(View_XXPTW_Def.gameView)
                // })
            }, 2000);
        }));
    };
    /**检测此关卡拼图是否全部归位 */
    gameCtrl.prototype.isSuccess = function () {
        /**是否全部归位 */
        var isSuccess = true;
        var curLevelObjInfo = this.allSelectObjInfoArray[this.curLevel];
        for (var e in curLevelObjInfo) {
            if (curLevelObjInfo[e].isHoming == false) {
                isSuccess = false;
            }
        }
        return isSuccess;
    };
    /**尝试移动待拖动拼图块补齐左边空缺 */
    gameCtrl.prototype.sortPuzzleCanMove = function () {
        var curLevelObjInfo = this.allSelectObjInfoArray[this.curLevel];
        if (null == this.hasSelectedSprite || false == curLevelObjInfo[this.hasSelectedSprite.name].isHoming) {
            return;
        }
        /**可以移动标识（区分位于抽出的那块拼图的前面还是后面，如果是后面则向左移动抽出那块拼图宽度的距离） */
        var isCanSortMove = false;
        for (var e in curLevelObjInfo) {
            if (isCanSortMove && (curLevelObjInfo[e].isHoming == false)) {
                curLevelObjInfo[e].obj.transform.localPositionX += curLevelObjInfo[this.hasSelectedSprite.name].boundOfX;
                curLevelObjInfo[e].sortSelfPos.x = curLevelObjInfo[e].obj.transform.localPositionX;
            }
            if (e == this.hasSelectedSprite.name) {
                isCanSortMove = true;
            }
        }
    };
    /**尝试鼠标拖拽拼图未归位时放开鼠标，该拼图自动做Tween动画回到补齐后自身位置，并且修改材质颜色为白色 */
    gameCtrl.prototype.tweenToSortSelfPos = function () {
        var _this = this;
        if (this.hasSelectedSprite) {
            var curLevelSelectObjInfo = this.allSelectObjInfoArray[this.curLevel][this.hasSelectedSprite.name];
            if (curLevelSelectObjInfo && curLevelSelectObjInfo.isHoming == false) {
                /**补齐后自身位置 */
                var sortSelfPos = curLevelSelectObjInfo.sortSelfPos;
                curLevelSelectObjInfo.obj.meshRenderer.sharedMaterial = curLevelSelectObjInfo.selfMat;
                // if (this.tweenCompOfToStart) {
                //     Laya.Tween.clear(this.tweenCompOfToStart)
                // }
                this.isLockTweenToStart = true;
                this.tweenCompOfToStart = Laya.Tween.to(this.hasSelectedSprite.transform, { localPositionX: sortSelfPos.x, localPositionY: sortSelfPos.y, localPositionZ: sortSelfPos.z }, 200, Laya.Ease.linearIn, Laya.Handler.create(this, function () {
                    console.log("ljc", "鼠标拖拽拼图未归位时放开鼠标，该拼图自动做Tween动画归位", "完成");
                    _this.isLockTweenToStart = false;
                }));
            }
        }
    };
    /**拼图全部完成后，可移动的拼图回到原先位置（下方）且材质颜色变为原先材质颜色（白色）且拼图节点z轴位置归零，为了应对玩重复关卡 */
    gameCtrl.prototype.resetPuzzleCanMovePos = function () {
        for (var i = 0; i < this.allSelectObjInfoArray.length; i++) {
            var curLevelObjInfo = this.allSelectObjInfoArray[i];
            for (var e in curLevelObjInfo) {
                if (curLevelObjInfo[e].obj) {
                    curLevelObjInfo[e].obj.transform.localPosition = curLevelObjInfo[e].selfLocalPos;
                    curLevelObjInfo[e].obj.meshRenderer.sharedMaterial = curLevelObjInfo[e].targetMat;
                }
            }
        }
        this.puzzleNode.transform.localPosition = this.puzzleNodeLocalPos;
        // //隐藏灰底板
        // scene3dSocket.Instance.Plane.active = true
        // //白底板-大，下移显示拼图缺口
        // scene3dSocket.Instance.Plane2.transform.localPositionY = 0.7
    };
    /**到下一关 */
    gameCtrl.prototype.toNextLevel = function () {
        var curLevel = User_1.default.get_XXPTW_LeveNum();
        gameCtrl.Instance.curLevelValue = curLevel;
        this.onOrOffFX(false);
        GameMgr_1.default.get_XXPTW_Instance().save_XXPTW_Game_XXPTW_Data();
        // if (!gameCtrl.isPlaySuccessedLevel) {
        //     console.log("ljc", "关卡数增加")
        //     let curLevel = User_XXPTW_.get_XXPTW_LeveNum()
        //     gameCtrl.Instance.curLevelValue = curLevel;
        //     User_XXPTW_.set_XXPTW_LeveNum(curLevel + 1)
        //     Game_XXPTW_Mgr.get_XXPTW_Instance().save_XXPTW_Game_XXPTW_Data()
        // }
        this.resetPuzzleCanMovePos();
        this.initLevel();
    };
    /**完成关卡特效开关
     * @param isOn 特效开关
     */
    gameCtrl.prototype.onOrOffFX = function (isOn) {
        scene3dSocket_1.default.Instance.getFX1L.active = isOn;
        scene3dSocket_1.default.Instance.getFX1R.active = isOn;
        scene3dSocket_1.default.Instance.getFX2.active = isOn;
    };
    /**得到当前最左边的拼图块对应的目标拼图块信息 */
    gameCtrl.prototype.getCurLeftTargetPuzzleInfo = function () {
        // let targetObj: Laya.MeshSprite3D
        var curLevelObjInfo = this.allSelectObjInfoArray[this.curLevel];
        for (var e in curLevelObjInfo) {
            if (curLevelObjInfo[e].isHoming == false) {
                // targetObj = curLevelObjInfo[e].targetObj
                return curLevelObjInfo[e];
            }
        }
        // return targetObj
    };
    gameCtrl._instance = null;
    // /**游戏状态，0：首页、1：游戏中、2：结算 */
    // public static gameState = 0
    /**是否玩的是之前的关卡，没有继续闯关（用于防止通关之前的关卡也加关卡数） */
    gameCtrl.isPlaySuccessedLevel = false;
    return gameCtrl;
}(Laya.Script3D));
exports.default = gameCtrl;
},{"../../Mgr/GameMgr":28,"../../Mgr/SoundMgr":29,"../../Mgr/VibrateMgr":30,"../../Mgr/ViewMgr":31,"../../User/User":45,"../data/gameData":80,"./scene3dSocket":83}],83:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var gameCtrl_1 = require("./gameCtrl");
var gameData_1 = require("../data/gameData");
/**附着在Unity生成的3D场景上，以获取场景上的所有信息，相当于电源插座的功能 */
var scene3dSocket = /** @class */ (function (_super) {
    __extends(scene3dSocket, _super);
    function scene3dSocket() {
        return _super.call(this) || this;
    }
    Object.defineProperty(scene3dSocket, "Instance", {
        get: function () {
            return scene3dSocket._instance;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(scene3dSocket.prototype, "Scene", {
        get: function () {
            return this.scene;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(scene3dSocket.prototype, "Camera", {
        get: function () {
            return this.camera;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(scene3dSocket.prototype, "LevelNode", {
        get: function () {
            return this.levelNode;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(scene3dSocket.prototype, "Plane", {
        get: function () {
            return this.plane;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(scene3dSocket.prototype, "Plane2", {
        get: function () {
            return this.plane2;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(scene3dSocket.prototype, "getFX1L", {
        get: function () {
            return this.fx1L;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(scene3dSocket.prototype, "getFX1R", {
        get: function () {
            return this.fx1R;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(scene3dSocket.prototype, "getFX2", {
        get: function () {
            return this.fx2;
        },
        enumerable: true,
        configurable: true
    });
    scene3dSocket.prototype.onAwake = function () {
        console.log("ljc", "3d场景插座已部署");
        scene3dSocket._instance = this;
        this.scene = this.owner;
        this.camera = this.owner.getChildByName("Main Camera");
        //做3D场景屏幕适配
        console.log("ljc", "this.camera.fieldOfView 之前", this.camera.fieldOfView);
        this.camera.fieldOfView *= 1 + (gameData_1.default.aspectRatio1 - gameData_1.default.aspectRatio2);
        if (this.camera.fieldOfView < 60) {
            this.camera.fieldOfView = 66.4;
        }
        this.levelNode = this.owner.getChildByName("Levels");
        console.log("ljc", "this.camera.fieldOfView 之后", this.camera.fieldOfView);
        this.plane = this.owner.getChildByName("Plane");
        this.plane2 = this.owner.getChildByName("Plane2");
        //特效
        this.fx1L = this.owner.getChildByName("FX").getChildByName("FX_Caidai_A_L");
        this.fx1R = this.owner.getChildByName("FX").getChildByName("FX_Caidai_A_R");
        this.fx2 = this.owner.getChildByName("FX").getChildByName("FX_Caidai_B");
        this.fx1L.active = false;
        this.fx1R.active = false;
        this.fx2.active = false;
        console.log("ljc", "场景所有元素", this.scene);
        gameCtrl_1.default.Instance.initLevel();
    };
    scene3dSocket._instance = null;
    return scene3dSocket;
}(Laya.Script3D));
exports.default = scene3dSocket;
},{"../data/gameData":80,"./gameCtrl":82}],84:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var gameCtrl_1 = require("../hub/gameCtrl");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var GameWinViewTemplate_1 = require("../../View/TemplateViews/GameWin/GameWinViewTemplate");
/**游戏结算面板脚本 */
var endView = /** @class */ (function (_super) {
    __extends(endView, _super);
    function endView() {
        return _super.call(this) || this;
    }
    endView.prototype.onAwake = function () {
        console.log("ljc", "打开面板之结算");
        _super.prototype.onAwake.call(this);
        this.fcTagLvNum = this.owner.getChildByName("TopZone").getChildByName("Tag").getChildByName("spTagTitle").getChildByName("fcTagLvNum");
        this.fcTagLvNum.value = String(gameCtrl_1.default.Instance.CurLevelValue + 1);
        this.onNext_XXPTW_Btn();
    };
    endView.prototype.add_XXPTW_Event = function () {
        _super.prototype.add_XXPTW_Event.call(this);
    };
    endView.prototype.remove_XXPTW_Event = function () {
        _super.prototype.remove_XXPTW_Event.call(this);
    };
    endView.prototype.onNext_XXPTW_Btn = function () {
        var _this = this;
        // super.onBack_XXPTW_Btn()
        // View_XXPTW_Mgr.ins_XXPTW_tance.open_XXPTW_View(View_XXPTW_Def.indexView, null, () => {
        //     gameCtrl.Instance.toNextLevel()
        //     this.close_XXPTW_View()
        // })
        ViewMgr_1.default.ins_XXPTW_tance.open_XXPTW_View(ViewMgr_1.View_XXPTW_Def.indexView, null, function () {
            gameCtrl_1.default.Instance.toNextLevel();
            _this.close_XXPTW_View();
        });
        // if(!this._click_XXPTW_Tag && Wu_XXPTW_dian_XXPTW_Mgr.Wu_XXPTW_dian_XXPTW_Flag)
        // {
        //     var self = this
        //     if(!this._click_XXPTW_TimingTag)
        //     {
        //         this._click_XXPTW_TimingTag = true
        //         var btnMoveTimer = App_XXPTW_Switch_XXPTW_Config.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().btn_XXPTW_Move_XXPTW_Timer;
        //         var bannerMoveTimer = App_XXPTW_Switch_XXPTW_Config.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().banner_XXPTW_Move_XXPTW_Timer;
        //         Laya.timer.once(bannerMoveTimer * 1000,this,this.BannerUp);
        //         Laya.timer.once(btnMoveTimer * 1000,this,this.BtnUp);
        //     }
        //     return;
        // }
        // var adSwitch = App_XXPTW_Switch_XXPTW_Config.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().ad_XXPTW_Switch
        // if (adSwitch == 0) {
        //     View_XXPTW_Mgr.ins_XXPTW_tance.open_XXPTW_View(View_XXPTW_Def.indexView, null, () => {
        //         gameCtrl.Instance.toNextLevel()
        //         this.close_XXPTW_View()
        //     })
        // } else {
        //     View_XXPTW_Mgr.ins_XXPTW_tance.open_XXPTW_View(View_XXPTW_Def.indexView, null, () => {
        //         gameCtrl.Instance.toNextLevel()
        //         this.close_XXPTW_View()
        //     })
        // }
    };
    return endView;
}(GameWinViewTemplate_1.default));
exports.default = endView;
},{"../../Mgr/ViewMgr":31,"../../View/TemplateViews/GameWin/GameWinViewTemplate":68,"../hub/gameCtrl":82}],85:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var gameData_1 = require("../data/gameData");
var gameCtrl_1 = require("../hub/gameCtrl");
var InGameViewTemplate_1 = require("../../View/TemplateViews/InGame/InGameViewTemplate");
var User_1 = require("../../User/User");
var scene3dSocket_1 = require("../hub/scene3dSocket");
var WXAPI_1 = require("../../WXAPI");
/**游戏中面板脚本 */
var gameView = /** @class */ (function (_super) {
    __extends(gameView, _super);
    function gameView() {
        var _this = _super.call(this) || this;
        // private imgVideoBtn: Laya.Image
        /**鼠标点击间隔（毫秒） */
        _this.mouseClickSpaceTime = 300;
        _this.passTime = 0;
        /**鼠标移动开始点 */
        _this.mounseMoveStart = new Laya.Vector2(0, 0);
        /**鼠标移动改变量 */
        _this.mounseMoveChange = new Laya.Vector2(0, 0);
        /**切换状态开关 */
        _this.changeMatSwitch = false;
        return _this;
    }
    Object.defineProperty(gameView, "Instance", {
        get: function () {
            if (!gameView._instance) {
                gameView._instance = new gameView();
            }
            return gameView._instance;
        },
        enumerable: true,
        configurable: true
    });
    gameView.prototype.onAwake = function () {
        console.log("ljc", "打开面板之游戏中11");
        _super.prototype.onAwake.call(this);
        this.fcLevelNum = this.owner.getChildByName("TopZone").getChildByName("LevelInfo").getChildByName("LevelNum");
        console.log(this.fcLevelNum.value = User_1.default.get_XXPTW_LeveNum().toString());
        this.fcLevelNum.value = User_1.default.get_XXPTW_LeveNum().toString();
        //this.fcLevelNum.value = String(gameCtrl.Instance.curLevelValue2 + 1)
        this.imgBg = this.owner.getChildByName("imgBg");
        this.imgGuide = this.imgBg.getChildByName("imgGuide");
        this.imgGuide.visible = false;
        // this.imgVideoBtn = this.imgBg.getChildByName("imgVideoBtn") as Laya.Image
        this.spVideoBtn = this.imgBg.getChildByName("spVideoBtn");
        /**是否已经引导过了 */
        var isGuided = User_1.default.get_XXPTW_IsGuided();
        var curLevel = gameCtrl_1.default.Instance.CurLevelValue + 1;
        if (isGuided == 0 && curLevel == 1 && !gameData_1.default.isClickFirstPuzzle) {
            this.showGuide();
        }
        this.setVideoBtnPos();
        if (gameCtrl_1.default.Instance.CurLevelValue == 0) {
            this.spVideoBtn.visible = false;
        }
        this.clipBanner = this.owner.getChildByName("KRQ_Main").getChildByName("KRQ_Banner");
    };
    gameView.prototype.onUpdate = function () {
        this.fcLevelNum.value = User_1.default.get_XXPTW_LevelIndex().toString();
        if (parseInt(this.fcLevelNum.value) == 0) {
            this.fcLevelNum.value = User_1.default.get_XXPTW_LeveNum().toString();
        }
        //console.log(this.fcLevelNum.value = User_XXPTW_.get_XXPTW_LeveNum().toString());
    };
    /**是否显示引导 */
    gameView.prototype.showGuide = function () {
        var _this = this;
        /**从
         * bottom:170
         * left:-40
         *
         * 到
         * left:181
         * bottom:567
        */
        this.imgGuide.visible = true;
        this.imgGuide.bottom = 170;
        this.imgGuide.left = -40;
        Laya.Tween.to(this.imgGuide, { bottom: 567, left: 181 }, 1000, Laya.Ease.linearIn, Laya.Handler.create(this, function () {
            if (!gameData_1.default.isClickFirstPuzzle || !gameData_1.default.isClickVideoBtn) {
                _this.showGuide();
            }
            else {
                _this.imgGuide.visible = false;
            }
        }));
    };
    gameView.prototype.add_XXPTW_Event = function () {
        _super.prototype.add_XXPTW_Event.call(this);
        this.imgBg.on(Laya.Event.MOUSE_DOWN, this, this.onMounseEvent);
        this.imgBg.on(Laya.Event.MOUSE_UP, this, this.onMounseEvent);
        this.imgBg.on(Laya.Event.MOUSE_OUT, this, this.onMounseEvent);
        // this.imgVideoBtn.on(Laya.Event.CLICK, this, this.videoBtnClick)
        this.spVideoBtn.on(Laya.Event.CLICK, this, this.videoBtnClick);
        Laya.timer.loop(400, this, this.changeTargetMatColor);
    };
    gameView.prototype.remove_XXPTW_Event = function () {
        _super.prototype.remove_XXPTW_Event.call(this);
        this.imgBg.offAll();
        // this.imgVideoBtn.off(Laya.Event.CLICK, this, this.videoBtnClick)
        this.spVideoBtn.off(Laya.Event.CLICK, this, this.videoBtnClick);
        Laya.timer.clear(this, this.changeTargetMatColor);
    };
    gameView.prototype.videoBtnClick = function () {
        var _this = this;
        console.log("ljc", "视频按钮");
        WXAPI_1.default.show_XXPTW_Rewarded_XXPTW_VideoAd(function (res) {
            //成功
            if (res == true) {
                _this.showTip();
            }
        }, function () {
        });
    };
    /**显示提示 */
    gameView.prototype.showTip = function () {
        //显示指引
        if (gameCtrl_1.default.Instance.getCurLeftTargetPuzzleInfo() && gameCtrl_1.default.Instance.getCurLeftTargetPuzzleInfo().targetObj) {
            var targetObj = gameCtrl_1.default.Instance.getCurLeftTargetPuzzleInfo().targetObj;
            if (targetObj) {
                gameData_1.default.isClickVideoBtn = false;
                this.showGuide();
            }
        }
    };
    /**目标拼图块两种材质颜色之间切换 */
    gameView.prototype.changeTargetMatColor = function () {
        if (gameData_1.default.isClickVideoBtn == false) {
            if (gameCtrl_1.default.Instance.getCurLeftTargetPuzzleInfo() && gameCtrl_1.default.Instance.getCurLeftTargetPuzzleInfo().targetObj) {
                if (this.changeMatSwitch == false) {
                    this.changeMatSwitch = true;
                    gameCtrl_1.default.Instance.getCurLeftTargetPuzzleInfo().targetObj.meshRenderer.sharedMaterial = gameCtrl_1.default.Instance.getCurLeftTargetPuzzleInfo().targetMat;
                }
                else {
                    this.changeMatSwitch = false;
                    gameCtrl_1.default.Instance.getCurLeftTargetPuzzleInfo().targetObj.meshRenderer.sharedMaterial = gameCtrl_1.default.Instance.getCurLeftTargetPuzzleInfo().targetSelfMat;
                }
            }
        }
    };
    /**调整提示视频按钮位置 */
    gameView.prototype.setVideoBtnPos = function () {
        var _outPos = new Laya.Vector3();
        scene3dSocket_1.default.Instance.Camera.viewport.project(scene3dSocket_1.default.Instance.Plane2.transform.position, scene3dSocket_1.default.Instance.Camera.projectionViewMatrix, _outPos);
        // this.imgVideoBtn.pos((_outPos.x / Laya.stage.clientScaleX) + 300, (_outPos.y / Laya.stage.clientScaleY) + 150);
        this.spVideoBtn.pos((_outPos.x / Laya.stage.clientScaleX) + 5170, (_outPos.y / Laya.stage.clientScaleY) + 150);
        //this.spVideoBtn.visible = false;
    };
    gameView.prototype.setLevel = function () {
        this.fcLevelNum = this.owner.getChildByName("TopZone").getChildByName("LevelInfo").getChildByName("LevelNum");
        this.fcLevelNum.value = User_1.default.get_XXPTW_LeveNum().toString();
    };
    /**鼠标点击事件处理
     * @param e 鼠标具体事件
     */
    gameView.prototype.onMounseEvent = function (e) {
        // console.log("ljc", "鼠标事件", e, e.stageX, e.stageY)
        if (e.type == Laya.Event.MOUSE_DOWN) {
            //     if(Laya.Browser.now() - this.mouseClickSpaceTime <= 300){
            //         console.log("点击失败");
            //         return ;
            //    }
            //    this.mouseClickSpaceTime=Laya.Browser.now() ;
            //    console.log("点击成功");
            //    this.passTime = Laya.timer.currTimer
            this.mounseMoveStart.x = e.stageX;
            this.mounseMoveStart.y = e.stageY;
            gameCtrl_1.default.Instance.rayTest();
            this.imgBg.on(Laya.Event.MOUSE_MOVE, this, this.onMounseMoveEvent);
        }
        else if (e.type == Laya.Event.MOUSE_UP || e.type == Laya.Event.MOUSE_OUT) {
            gameCtrl_1.default.Instance.tweenToSortSelfPos();
            gameCtrl_1.default.Instance.tweenToTarget();
            this.imgBg.off(Laya.Event.MOUSE_MOVE, this, this.onMounseMoveEvent);
        }
    };
    /**鼠标移动事件处理 */
    gameView.prototype.onMounseMoveEvent = function (e) {
        /**实时记录移动鼠标最后点坐标 */
        var mouseMoveEnd = new Laya.Vector2(0, 0);
        mouseMoveEnd.x = e.stageX;
        mouseMoveEnd.y = e.stageY;
        this.mounseMoveChange.x = mouseMoveEnd.x - this.mounseMoveStart.x;
        this.mounseMoveChange.y = mouseMoveEnd.y - this.mounseMoveStart.y;
        this.mounseMoveStart.x = mouseMoveEnd.x;
        this.mounseMoveStart.y = mouseMoveEnd.y;
        // console.log("ljc", "鼠标移动量", this.mounseMoveChange.x, this.mounseMoveChange.y)
        /**每两帧之间的间隔时间（单位：秒） */
        var delta = Laya.timer.delta / 1000;
        //都取负的原因是因为在laya2D场景里，左上角是原点，往右是x轴正方向，往下是y轴正方向；（这个游戏平面是x轴和z轴上，一样）
        //而在laya3D场景里，往左是x轴正方向，往上是y轴正方向；
        //现在是用2D场景里的鼠标位移去模拟移动3D场景里的物体，所以都取反。
        /**位移量x */
        var moveValueX = (-this.mounseMoveChange.x * delta) * gameData_1.default.puzzleDragingSpeed;
        /**位移量y */
        var moveValueY = (-this.mounseMoveChange.y * delta) * gameData_1.default.puzzleDragingSpeed;
        var dir = new Laya.Vector3(moveValueX, 0, moveValueY);
        gameCtrl_1.default.Instance.moveHitResultObj(dir);
    };
    gameView.prototype.onDestroy = function () {
        _super.prototype.onDestroy.call(this);
    };
    gameView._instance = null;
    return gameView;
}(InGameViewTemplate_1.default));
exports.default = gameView;
},{"../../User/User":45,"../../View/TemplateViews/InGame/InGameViewTemplate":69,"../../WXAPI":78,"../data/gameData":80,"../hub/gameCtrl":82,"../hub/scene3dSocket":83}],86:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var gameCtrl_1 = require("../hub/gameCtrl");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var User_1 = require("../../User/User");
var lvInfoBox_1 = require("./lvInfoBox");
var gameData_1 = require("../data/gameData");
var MainViewTemplate_1 = require("../../View/TemplateViews/Main/MainViewTemplate");
var WXADMgr_1 = require("../../Mgr/WXADMgr");
/**游戏首页面板脚本 */
var indexView = /** @class */ (function (_super) {
    __extends(indexView, _super);
    function indexView() {
        return _super.call(this) || this;
    }
    Object.defineProperty(indexView, "Instance", {
        get: function () {
            return indexView._instance;
        },
        enumerable: true,
        configurable: true
    });
    indexView.prototype.onAwake = function () {
        console.log("ljc", "打开面板之首页");
        _super.prototype.onAwake.call(this);
        indexView._instance = this;
        this._list = this.owner.getChildByName("CenterZone").getChildByName("List");
        this._list.renderHandler = Laya.Handler.create(this, this.onListRender, null, false);
        this._list.vScrollBarSkin = "";
    };
    indexView.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
        if (User_1.default.get_XXPTW_LeveNum() > 1) {
        }
        this.initListLevelData();
        /**每次滑动到当前关卡的前一关卡 */
        var curLevelValue = gameCtrl_1.default.Instance.CurLevelValue;
        var index;
        if (curLevelValue != 0) {
            index = curLevelValue - 1;
        }
        else {
            curLevelValue = User_1.default.get_XXPTW_LeveNum() - 1;
            //超出所配置的最大关卡则重新开始循环
            var levelConfig = gameData_1.default.Instance.getLevelConfig();
            curLevelValue = (curLevelValue + 1) % levelConfig.data.length;
            if (curLevelValue == 0) {
                curLevelValue = levelConfig.data.length;
            }
            curLevelValue = curLevelValue - 1;
            index = curLevelValue - 1;
        }
        index = index < 0 ? 0 : index;
        this._list.scrollTo(index);
        // setTimeout(() => {
        //     this._list.refresh()
        // }, 500);
    };
    /**刷新list */
    indexView.prototype.refreshList = function () {
        this._list.refresh();
    };
    indexView.prototype.on_XXPTW_Start_XXPTW_Btn = function () {
        var _this = this;
        console.log("ljc", "点击开始");
        console.log(User_1.default.get_XXPTW_LeveNum());
        gameCtrl_1.default.isPlaySuccessedLevel = false;
        var data = {};
        //gameView.Instance.setLevel();
        // data["showType"] = In_XXPTW_Game_XXPTW_ShowType._XXPTW_NoBannerAd_XXPTW_
        ViewMgr_1.default.ins_XXPTW_tance.open_XXPTW_View(ViewMgr_1.View_XXPTW_Def.gameView, null, function () {
            _this.close_XXPTW_View();
        });
    };
    indexView.prototype.onListRender = function (cell, index) {
        var data = this._list.array[index];
        var box = cell.getComponent(lvInfoBox_1.default);
        box.setData(data);
    };
    /**初始化关卡列表数据 */
    indexView.prototype.initListLevelData = function () {
        var listInfo = [];
        var levelConfig = gameData_1.default.Instance.getLevelConfig();
        for (var i = 0; i < levelConfig.data.length; i++) {
            /**当前关卡数 */
            var curLevel = User_1.default.get_XXPTW_LeveNum() - 1;
            /**拼图图片资源路径 */
            var puzzleIconUrl = "subRes/ui/" + levelConfig.data[i].level + ".png";
            /**状态（1：显示白底、拼图、名字；2：显示白底、黄框、关卡数；3：显示红底、黄框、关卡数） */
            var state = 1;
            if (i < curLevel) {
                //已经挑战成功的关卡
                state = 1;
            }
            else if (i == curLevel) {
                //准备挑战的关卡
                state = 3;
            }
            else if (i > curLevel) {
                //不能挑战的关卡
                state = 2;
            }
            /**拼图名称 */
            var puzzleName = levelConfig.data[i].level;
            /**所属关卡数据 */
            var level = i + 1;
            listInfo[i] = {
                puzzleIconUrl: puzzleIconUrl,
                state: state,
                puzzleName: puzzleName,
                level: level,
            };
        }
        //User_XXPTW_.set_XXPTW_LevelIndex(index);
        this._list.array = listInfo;
        console.log("ljc", "初始化关卡列表数据", this._list.array);
    };
    indexView.prototype.onDestroy = function () {
        WXADMgr_1.default;
    };
    indexView._instance = null;
    return indexView;
}(MainViewTemplate_1.default));
exports.default = indexView;
},{"../../Mgr/ViewMgr":31,"../../Mgr/WXADMgr":32,"../../User/User":45,"../../View/TemplateViews/Main/MainViewTemplate":70,"../data/gameData":80,"../hub/gameCtrl":82,"./lvInfoBox":87}],87:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var gameCtrl_1 = require("../hub/gameCtrl");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var SoundMgr_1 = require("../../Mgr/SoundMgr");
var User_1 = require("../../User/User");
/**游戏首页上组成list的box脚本 */
var lvInfoBox = /** @class */ (function (_super) {
    __extends(lvInfoBox, _super);
    function lvInfoBox() {
        return _super.call(this) || this;
    }
    lvInfoBox.prototype.onAwake = function () {
        this.box = this.owner;
        this.imgBg = this.owner.getChildByName("imgBg");
        this.spFrame = this.owner.getChildByName("spFrame");
        this.fcLvNum = this.spFrame.getChildByName("fcLvNum");
        this.spPuzzleIcon = this.owner.getChildByName("spPuzzleIcon");
        this.spPuzzleName = this.owner.getChildByName("spPuzzleName");
    };
    lvInfoBox.prototype.onEnable = function () {
        this.owner.on(Laya.Event.MOUSE_DOWN, this, this.onDown);
        this.owner.on(Laya.Event.MOUSE_UP, this, this.onUp);
        this.owner.on(Laya.Event.MOUSE_OUT, this, this.onUp);
        this.owner.on(Laya.Event.CLICK, this, this.onClickFunc);
    };
    lvInfoBox.prototype.onDisable = function () {
        this.owner.offAll();
        Laya.Tween.clearAll(this);
    };
    /**点击进入所选关卡（前提是可进入的话） */
    lvInfoBox.prototype.onClickFunc = function () {
        console.log("ljc", "点击了LvInfoBox111", "状态", this._data.level);
        //只有状态1、状态3可以选关
        if (this._data.state == 2)
            return;
        if (this._data.state == 3) {
            gameCtrl_1.default.isPlaySuccessedLevel = false;
        }
        else if (this._data.state == 1) {
            gameCtrl_1.default.isPlaySuccessedLevel = true;
        }
        User_1.default.set_XXPTW_LevelIndex(parseInt(this._data.level));
        console.log(User_1.default.get_XXPTW_LevelIndex());
        gameCtrl_1.default.Instance.resetPuzzleCanMovePos();
        gameCtrl_1.default.Instance.initLevel(this._data.level);
        ViewMgr_1.default.ins_XXPTW_tance.open_XXPTW_View(ViewMgr_1.View_XXPTW_Def.gameView, null, function () {
            ViewMgr_1.default.ins_XXPTW_tance.close_XXPTW_View(ViewMgr_1.View_XXPTW_Def.indexView);
        });
    };
    lvInfoBox.prototype.onDown = function () {
        Laya.Tween.to(this.owner, { scaleX: 0.9, scaleY: 0.9 }, 50);
        if (this._data.state != 2) {
            SoundMgr_1.default.ins_XXPTW_tance.play_XXPTW_Sound("click");
        }
    };
    lvInfoBox.prototype.onUp = function () {
        Laya.Tween.to(this.owner, { scaleX: 1, scaleY: 1 }, 50);
    };
    /**设置box数据 */
    lvInfoBox.prototype.setData = function (data) {
        var _this = this;
        this._data = data;
        if (null != this._data) {
            /**根据状态设置不同样式
             * 状态（1：显示白底、拼图、名字；2：显示白底、黄框、关卡数；3：显示红底、黄框、关卡数） */
            if (this._data.state == 1) {
                //(已完成)
                this.imgBg.skin = "subRes/ui/底1.png";
                this.imgBg.gray = false;
                this.spFrame.visible = false;
                this.spPuzzleIcon.visible = true;
                var strSpPuzzleName_1 = "subRes/ui/名" + this._data.puzzleName + ".png";
                Laya.loader.load(strSpPuzzleName_1, Laya.Handler.create(this, function () {
                    var resSpPuzzleName = Laya.loader.getRes(strSpPuzzleName_1);
                    _this.spPuzzleName.loadImage(strSpPuzzleName_1);
                    var finalPosX = 171;
                    console.log("ljc", "resSpPuzzleName.width", resSpPuzzleName.width);
                    finalPosX += (171 - resSpPuzzleName.width) / 2;
                    _this.spPuzzleName.pos(finalPosX, _this.spPuzzleName.y);
                    _this.spPuzzleName.size(resSpPuzzleName.width, resSpPuzzleName.height);
                }));
                this.spPuzzleName.visible = true;
                //调整位置
                if (this._data.level % 2 != 0) {
                    this.imgBg.skewY = 0;
                    this.imgBg.pos(151, 127);
                }
                else {
                    //偶数需要翻转
                    this.imgBg.skewY = 180;
                    this.imgBg.pos(195, 127);
                }
            }
            else if (this._data.state == 2) {
                //(未完成)
                this.imgBg.skin = "subRes/ui/底2.png";
                this.imgBg.gray = true;
                this.spFrame.visible = true;
                this.spPuzzleIcon.visible = false;
                this.fcLvNum.value = this._data.level;
                this.spPuzzleName.visible = false;
                //调整位置
                if (this._data.level % 2 != 0) {
                    //奇数需要翻转
                    this.imgBg.skewY = 180;
                    this.imgBg.pos(151, 127);
                }
                else {
                    this.imgBg.skewY = 0;
                    this.imgBg.pos(195, 127);
                }
            }
            else if (this._data.state == 3) {
                //(当前关)
                this.imgBg.skin = "subRes/ui/底2.png";
                this.imgBg.gray = false;
                this.spFrame.visible = true;
                this.spPuzzleIcon.visible = false;
                this.fcLvNum.value = this._data.level;
                this.spPuzzleName.visible = false;
                //调整位置
                if (this._data.level % 2 != 0) {
                    //奇数需要翻转
                    this.imgBg.skewY = 180;
                    this.imgBg.pos(151, 127);
                }
                else {
                    this.imgBg.skewY = 0;
                    this.imgBg.pos(195, 127);
                }
            }
            // let resSpPuzzleIcon = Laya.loader.getRes(this._data.puzzleIconUrl)
            this.spPuzzleIcon.loadImage(this._data.puzzleIconUrl);
            // this.spPuzzleIcon.size(resSpPuzzleIcon.width, resSpPuzzleIcon.height)
        }
    };
    return lvInfoBox;
}(Laya.Script));
exports.default = lvInfoBox;
},{"../../Mgr/SoundMgr":29,"../../Mgr/ViewMgr":31,"../../User/User":45,"../hub/gameCtrl":82}],88:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Exprot2ViewTemplate_1 = require("../../View/TemplateViews/Export2/Exprot2ViewTemplate");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var Utilit_1 = require("../../Utilit");
var myExport2View = /** @class */ (function (_super) {
    __extends(myExport2View, _super);
    function myExport2View() {
        return _super.call(this) || this;
    }
    myExport2View.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._krq_XXPTW_VLoopAdClip = this.View_XXPTW_.getChildByName("KRQ_VLoopAd");
        if (Utilit_1.default.is_XXPTW_IphoneX()) {
            this._krq_XXPTW_VLoopAdClip.top = this._krq_XXPTW_VLoopAdClip.top + 75;
        }
        //this.on_XXPTW_Continue_XXPTW_Btn();
    };
    myExport2View.prototype.on_XXPTW_Continue_XXPTW_Btn = function () {
        ViewMgr_1.default.ins_XXPTW_tance.open_XXPTW_View(ViewMgr_1.View_XXPTW_Def.indexView, null, function () {
            ViewMgr_1.default.ins_XXPTW_tance.close_XXPTW_View(ViewMgr_1.View_XXPTW_Def.leadingOutView);
        });
    };
    return myExport2View;
}(Exprot2ViewTemplate_1.default));
exports.default = myExport2View;
},{"../../Mgr/ViewMgr":31,"../../Utilit":46,"../../View/TemplateViews/Export2/Exprot2ViewTemplate":65}],89:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var WXAPI_1 = require("../../WXAPI");
var QQMiniGameAPI_1 = require("../../QQMiniGameAPI");
var AppSwitchConfig_1 = require("../../Config/AppSwitchConfig");
var WudianMgr_1 = require("../../Mgr/WudianMgr");
var KRQ_Banner_1 = require("../../KRQ/Com/KRQ_Banner");
var myGamingBanner = /** @class */ (function (_super) {
    __extends(myGamingBanner, _super);
    function myGamingBanner() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    myGamingBanner.prototype.ref_XXPTW_resh = function (onComplate) {
        var _this = this;
        var launchScene = null;
        if (Laya.Browser.onMiniGame) {
            launchScene = WXAPI_1.default.get_XXPTW_Launch_XXPTW_Options_XXPTW_Sync().scene;
        }
        else if (Laya.Browser.onQQMiniGame) {
            launchScene = QQMiniGameAPI_1.default.get_XXPTW_Launch_XXPTW_Options_XXPTW_Sync().scene;
        }
        var noEnterBySearch = true;
        var wudianSceneList = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().wu_XXPTW_dian_XXPTW_Scene_XXPTW_List;
        for (var i = 0; i < wudianSceneList.length; ++i) {
            var wudianSceneValue = wudianSceneList[i];
            if (launchScene == wudianSceneValue) {
                noEnterBySearch = false;
            }
        }
        var ipBlocked = WudianMgr_1.default.Get_XXPTW_Ip_XXPTW_Blocked();
        if (!ipBlocked || !noEnterBySearch) {
            this._XXPTW_Sprite_XXPTW_.visible = false;
            if (null != onComplate) {
                onComplate();
            }
            return;
        }
        var banner = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().ba_XXPTW_nner;
        if (1 == banner) {
            this.refresh_XXPTW_WXBanner();
        }
        else {
            _super.prototype.ref_XXPTW_resh.call(this, function () {
                _this.refresh_XXPTW_Banner();
                if (null != onComplate) {
                    onComplate();
                }
            });
        }
    };
    myGamingBanner.prototype.onViewShow = function () {
        var launchScene = null;
        if (Laya.Browser.onMiniGame) {
            launchScene = WXAPI_1.default.get_XXPTW_Launch_XXPTW_Options_XXPTW_Sync().scene;
        }
        else if (Laya.Browser.onQQMiniGame) {
            launchScene = QQMiniGameAPI_1.default.get_XXPTW_Launch_XXPTW_Options_XXPTW_Sync().scene;
        }
        var noEnterBySearch = true;
        var wudianSceneList = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().wu_XXPTW_dian_XXPTW_Scene_XXPTW_List;
        for (var i = 0; i < wudianSceneList.length; ++i) {
            var wudianSceneValue = wudianSceneList[i];
            if (launchScene == wudianSceneValue) {
                noEnterBySearch = false;
            }
        }
        var ipBlocked = WudianMgr_1.default.Get_XXPTW_Ip_XXPTW_Blocked();
        if (!ipBlocked || !noEnterBySearch) {
            this._XXPTW_Sprite_XXPTW_.visible = false;
            return;
        }
        var banner = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().ba_XXPTW_nner;
        if (1 == banner) {
            if (null == this._wx_XXPTW_Banner) {
                this.refresh_XXPTW_WXBanner();
                if (Laya.Browser.onQQMiniGame && WudianMgr_1.default.Get_XXPTW_Ip_XXPTW_Blocked()) {
                    var launchScene_1 = QQMiniGameAPI_1.default.get_XXPTW_Launch_XXPTW_Options_XXPTW_Sync().scene;
                    var noEnterBySearch_1 = true;
                    var wudianSceneList_1 = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().wu_XXPTW_dian_XXPTW_Scene_XXPTW_List;
                    for (var i = 0; i < wudianSceneList_1.length; ++i) {
                        var wudianSceneValue = wudianSceneList_1[i];
                        if (launchScene_1 == wudianSceneValue) {
                            noEnterBySearch_1 = false;
                        }
                    }
                    if (noEnterBySearch_1) {
                        var bannerRecreateTime = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().banner_XXPTW_Recreate_XXPTW_Time;
                        Laya.timer.loop(bannerRecreateTime * 1000, this, this.refresh_XXPTW_WXBanner);
                    }
                }
            }
        }
        else {
            this.refresh_XXPTW_Banner();
            if (Laya.Browser.onQQMiniGame && WudianMgr_1.default.Get_XXPTW_Ip_XXPTW_Blocked()) {
                var launchScene_2 = QQMiniGameAPI_1.default.get_XXPTW_Launch_XXPTW_Options_XXPTW_Sync().scene;
                var noEnterBySearch_2 = true;
                var wudianSceneList_2 = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().wu_XXPTW_dian_XXPTW_Scene_XXPTW_List;
                for (var i = 0; i < wudianSceneList_2.length; ++i) {
                    var wudianSceneValue = wudianSceneList_2[i];
                    if (launchScene_2 == wudianSceneValue) {
                        noEnterBySearch_2 = false;
                    }
                }
                if (noEnterBySearch_2) {
                    var bannerRecreateTime = AppSwitchConfig_1.default.get_XXPTW_Instance().get_XXPTW_App_XXPTW_Switch_XXPTW_Data().banner_XXPTW_Recreate_XXPTW_Time;
                    Laya.timer.loop(bannerRecreateTime * 1000, this, this.refresh_XXPTW_WXBanner);
                }
            }
        }
        this._is_XXPTW_Hide = false;
    };
    return myGamingBanner;
}(KRQ_Banner_1.default));
exports.default = myGamingBanner;
},{"../../Config/AppSwitchConfig":5,"../../KRQ/Com/KRQ_Banner":9,"../../Mgr/WudianMgr":33,"../../QQMiniGameAPI":39,"../../WXAPI":78}],90:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var KRQ_Main_1 = require("../../KRQ/ViewCom/KRQ_Main");
var Utilit_1 = require("../../Utilit");
var KRQ_HLoopAd_1 = require("../../KRQ/Com/KRQ_LoopAd/KRQ_HLoopAd");
var KRQ_Banner_1 = require("../../KRQ/Com/KRQ_Banner");
var KRQ_History_1 = require("../../KRQ/Com/KRQ_History/KRQ_History");
/**继承自KRQ_Main，目的是实现无论大小屏都只显示下方的滚动广告 */
var myKRQ_Main = /** @class */ (function (_super) {
    __extends(myKRQ_Main, _super);
    function myKRQ_Main() {
        return _super.call(this) || this;
    }
    myKRQ_Main.prototype.onAwake = function () {
        this._top_XXPTW_Zone = this._XXPTW_Sprite_XXPTW_.getChildByName("TopZone");
        this._history_XXPTW_Btn = this._top_XXPTW_Zone.getChildByName("HistoryBtn");
        if (Utilit_1.default.is_XXPTW_IphoneX()) {
            this._top_XXPTW_Zone.top = this._top_XXPTW_Zone.top + 75;
        }
        this._krq_XXPTW_Loop_XXPTW_Ad = this._XXPTW_Sprite_XXPTW_.getChildByName("KRQ_HLoopAd").getComponent(KRQ_HLoopAd_1.default);
        this._krq_XXPTW_Banner = this._XXPTW_Sprite_XXPTW_.getChildByName("KRQ_Banner").getComponent(KRQ_Banner_1.default);
        this._krq_XXPTW_History = this._XXPTW_Sprite_XXPTW_.getChildByName("KRQ_History").getComponent(KRQ_History_1.default);
        var self = this;
        var aspectRatio = Laya.stage.width / Laya.stage.height;
        this._krq_XXPTW_History.On_XXPTW_Back_XXPTW_Btn_XXPTW_Click = function () {
            if (aspectRatio < 0.5) {
                self._krq_XXPTW_Banner._XXPTW_show_XXPTW_();
            }
        };
        // if(aspectRatio  < 0.5) 
        // {
        //     this._krq_XXPTW_Loop_XXPTW_Ad._XXPTW_Clip_XXPTW_.top = 100;
        //     if(Utilit_XXPTW_.is_XXPTW_IphoneX())
        //     {
        //         this._krq_XXPTW_Loop_XXPTW_Ad._XXPTW_Clip_XXPTW_.top =  this._krq_XXPTW_Loop_XXPTW_Ad._XXPTW_Clip_XXPTW_.top + 75;
        //     }
        //     this._krq_XXPTW_Banner._XXPTW_Sprite_XXPTW_.visible = true;
        // }
        // else
        // {
        // this._krq_XXPTW_Loop_XXPTW_Ad._XXPTW_Clip_XXPTW_.top = Laya.stage.height - 400//280;
        this._krq_XXPTW_Loop_XXPTW_Ad._XXPTW_Clip_XXPTW_.top = -300;
        // this._krq_XXPTW_Banner._XXPTW_Sprite_XXPTW_.visible = false;
        // }
    };
    myKRQ_Main.prototype.switchState = function (state) {
    };
    myKRQ_Main.prototype.on_XXPTW_History_XXPTW_Btn = function () {
        this._krq_XXPTW_History._XXPTW_show_XXPTW_();
    };
    return myKRQ_Main;
}(KRQ_Main_1.default));
exports.default = myKRQ_Main;
},{"../../KRQ/Com/KRQ_Banner":9,"../../KRQ/Com/KRQ_History/KRQ_History":12,"../../KRQ/Com/KRQ_LoopAd/KRQ_HLoopAd":14,"../../KRQ/ViewCom/KRQ_Main":23,"../../Utilit":46}],91:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var gameData_1 = require("../data/gameData");
var videoBtnEffect = /** @class */ (function (_super) {
    __extends(videoBtnEffect, _super);
    function videoBtnEffect() {
        return _super.call(this) || this;
    }
    videoBtnEffect.prototype.onAwake = function () {
        this.sprite = this.owner;
        Laya.timer.loop(gameData_1.default.tipEffectTime, this, this.playAni);
    };
    videoBtnEffect.prototype.playAni = function () {
        var _this = this;
        var self = this;
        this.sprite.rotation = 0;
        Laya.Tween.to(this.sprite, {
            rotation: -20,
        }, 150, Laya.Ease.linearNone, Laya.Handler.create(self, function () {
            Laya.Tween.to(_this.sprite, {
                rotation: 0,
            }, 150, Laya.Ease.linearNone, Laya.Handler.create(self, function () {
                Laya.Tween.to(_this.sprite, {
                    rotation: 20,
                }, 150, Laya.Ease.linearNone, Laya.Handler.create(self, function () {
                    Laya.Tween.to(_this.sprite, {
                        rotation: 0,
                    }, 150, Laya.Ease.linearNone, Laya.Handler.create(self, function () {
                        _this.sprite.rotation = 0;
                    }));
                }));
            }));
        }));
    };
    videoBtnEffect.prototype.onDestroy = function () {
        Laya.timer.clear(this, this.playAni);
    };
    return videoBtnEffect;
}(Laya.Script));
exports.default = videoBtnEffect;
},{"../data/gameData":80}],92:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Scene = Laya.Scene;
var REG = Laya.ClassUtils.regClass;
var ui;
(function (ui) {
    var GameMainUI = /** @class */ (function (_super) {
        __extends(GameMainUI, _super);
        function GameMainUI() {
            return _super.call(this) || this;
        }
        GameMainUI.prototype.createChildren = function () {
            _super.prototype.createChildren.call(this);
            this.createView(GameMainUI.uiView);
        };
        GameMainUI.uiView = { "type": "Scene", "props": { "y": 0, "x": 0, "width": 1080, "top": 0, "right": 0, "pivotY": 0, "pivotX": 0, "left": 0, "height": 1920 }, "compId": 2, "child": [{ "type": "Script", "props": { "runtime": "Mgr/GameMgr.ts" }, "compId": 148 }], "loadList": [], "loadList3D": [] };
        return GameMainUI;
    }(Scene));
    ui.GameMainUI = GameMainUI;
    REG("ui.GameMainUI", GameMainUI);
})(ui = exports.ui || (exports.ui = {}));
(function (ui) {
    var View;
    (function (View) {
        var LoadingUI = /** @class */ (function (_super) {
            __extends(LoadingUI, _super);
            function LoadingUI() {
                return _super.call(this) || this;
            }
            LoadingUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(LoadingUI.uiView);
            };
            LoadingUI.uiView = { "type": "Scene", "props": { "width": 750, "top": 0, "right": 0, "left": 0, "height": 1334, "bottom": 0 }, "compId": 2, "child": [{ "type": "Clip", "props": { "y": 0, "x": 1, "width": 750, "skin": "ui/loadingbg.png", "sizeGrid": "5,6,7,4", "name": "Bg", "height": 1334 }, "compId": 6, "child": [{ "type": "Clip", "props": { "right": 0, "name": "BottomZone", "left": 0, "height": 570, "bottom": 100 }, "compId": 23, "child": [{ "type": "Clip", "props": { "y": 326, "x": 376, "width": 615, "skin": "Loading/loading下条.png", "pivotY": 22, "pivotX": 308, "name": "processBarBg", "height": 44, "sizeGrid": "0,25,0,25" }, "compId": 8, "child": [{ "type": "Clip", "props": { "y": 22, "x": 10, "width": 594, "skin": "Loading/loading上条.png", "pivotY": 13, "name": "processBar", "left": 11, "height": 26, "bottom": 9, "sizeGrid": "0,12,0,12" }, "compId": 5 }, { "type": "Sprite", "props": { "y": -24, "x": 292, "width": 143, "texture": "Loading/资源加载中.png", "pivotY": 12, "pivotX": 72, "height": 23 }, "compId": 10, "child": [{ "type": "Sprite", "props": { "y": 15, "x": 149, "width": 6, "texture": "Loading/加载顿号.png", "height": 5 }, "compId": 11 }, { "type": "Sprite", "props": { "y": 15, "x": 159, "width": 6, "texture": "Loading/加载顿号.png", "height": 5 }, "compId": 12 }, { "type": "Sprite", "props": { "y": 15, "x": 168, "width": 6, "texture": "Loading/加载顿号.png", "height": 5 }, "compId": 13 }] }] }, { "type": "Clip", "props": { "y": 144, "x": 375, "width": 513, "visible": false, "pivotY": 50, "pivotX": 257, "name": "LogoAni", "height": 100 }, "compId": 14, "child": [{ "type": "Sprite", "props": { "y": 50, "x": 139, "width": 64, "texture": "Loading/任.png", "pivotY": 32, "pivotX": 32, "height": 63 }, "compId": 15 }, { "type": "Sprite", "props": { "y": 50, "x": 209, "width": 70, "texture": "Loading/游.png", "pivotY": 33, "pivotX": 35, "height": 66 }, "compId": 16 }, { "type": "Sprite", "props": { "y": 51, "x": 286, "width": 77, "texture": "Loading/玩.png", "pivotY": 28, "pivotX": 39, "height": 56 }, "compId": 17 }, { "type": "Sprite", "props": { "y": 63, "x": 340, "width": 23, "texture": "Loading/R.png", "pivotY": 16, "pivotX": 12, "height": 32 }, "compId": 18 }, { "type": "Sprite", "props": { "y": 63, "x": 363, "width": 21, "texture": "Loading/Y.png", "pivotY": 16, "pivotX": 11, "height": 31 }, "compId": 19 }, { "type": "Sprite", "props": { "y": 62, "x": 392, "width": 33, "texture": "Loading/W.png", "pivotY": 15, "pivotX": 17, "height": 30 }, "compId": 20 }, { "type": "Script", "props": { "runtime": "View/LoadingView/LogoAni.ts" }, "compId": 21 }] }, { "type": "Sprite", "props": { "y": 285, "x": -822, "width": 558, "texture": "Loading/健康游戏忠告.png", "pivotY": 53, "pivotX": 279, "height": 105 }, "compId": 22 }, { "type": "Text", "props": { "y": 611, "x": 724, "width": 130, "valign": "middle", "text": "1.1.3", "pivotY": 30, "pivotX": 130, "height": 30, "fontSize": 30, "color": "#ffffff", "align": "right", "runtime": "laya.display.Text" }, "compId": 24 }] }, { "type": "Image", "props": { "x": 119, "top": 28, "skin": "UI/FelicityLogo.png" }, "compId": 25 }] }, { "type": "Script", "props": { "y": 0, "x": 0, "runtime": "View/LoadingView/LoadingView.ts" }, "compId": 7 }], "loadList": ["ui/loadingbg.png", "Loading/loading下条.png", "Loading/loading上条.png", "Loading/资源加载中.png", "Loading/加载顿号.png", "Loading/任.png", "Loading/游.png", "Loading/玩.png", "Loading/R.png", "Loading/Y.png", "Loading/W.png", "Loading/健康游戏忠告.png", "UI/FelicityLogo.png"], "loadList3D": [] };
            return LoadingUI;
        }(Scene));
        View.LoadingUI = LoadingUI;
        REG("ui.View.LoadingUI", LoadingUI);
    })(View = ui.View || (ui.View = {}));
})(ui = exports.ui || (exports.ui = {}));
},{}]},{},[27])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
